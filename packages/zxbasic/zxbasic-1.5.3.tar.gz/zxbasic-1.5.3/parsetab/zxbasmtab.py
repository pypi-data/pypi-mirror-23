
# zxbasmtab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULDIVrightPOWrightUMINUSA ADC ADD ADDR AF ALIGN AND APO B BC BIT C CALL CCF COMMA CP CPD CPDR CPI CPIR CPL D DAA DE DEC DEFAULT DEFB DEFS DEFW DI DIV DJNZ E EI END ENDP EQU EX EXX H HALT HL I ID IM IN INC INCBIN IND INDR INI INIR INTEGER IX IXH IXL IY IYH IYL JP JR L LABEL LD LDD LDDR LDI LDIR LOCAL LP M MINUS MUL NAMESPACE NC NEG NEWLINE NOP NZ OR ORG OTDR OTIR OUT OUTD OUTI P PE PLUS PO POP POW PROC PUSH R RES RET RETI RETN RL RLA RLC RLCA RLD RP RR RRA RRC RRCA RRD RST SBC SCF SET SLA SLL SP SRA SRL STRING SUB UMINUS XOR Z _INIT _LINE start : program\n              | program endline\n     endline : END NEWLINE\n     endline : END expr NEWLINE\n                | END pexpr NEWLINE\n     program : line\n     program : program line\n     line : ID EQU expr NEWLINE\n             | ID EQU pexpr NEWLINE\n     line : LABEL NEWLINE\n     line : LABEL asm NEWLINE\n     line : asm NEWLINE\n     line : NEWLINE\n     asm : LD reg8 COMMA reg8_hl\n            | LD reg8_hl COMMA reg8\n            | LD reg8 COMMA reg8\n            | LD SP COMMA HL\n            | LD SP COMMA reg16i\n            | LD A COMMA reg8\n            | LD reg8 COMMA A\n            | LD reg8_hl COMMA A\n            | LD A COMMA reg8_hl\n            | LD A COMMA A\n            | LD A COMMA I\n            | LD I COMMA A\n            | LD A COMMA R\n            | LD R COMMA A\n            | LD A COMMA reg8i\n            | LD reg8i COMMA A\n            | LD reg8 COMMA reg8i\n            | LD reg8i COMMA regBCDE\n            | LD reg8i COMMA reg8i\n     asm : LD A COMMA LP BC RP\n            | LD A COMMA LP DE RP\n            | LD LP BC RP COMMA A\n            | LD LP DE RP COMMA A\n     asm : PROC\n     asm : ENDP\n     asm : LOCAL id_list\n     id_list : ID\n     id_list : id_list COMMA ID\n     asm : DEFB number_list\n            | DEFB STRING\n     asm : DEFS number_list\n     asm : DEFW number_list\n     number_list : expr\n                    | pexpr\n     number_list : number_list COMMA expr\n                    | number_list COMMA pexpr\n     asm : LD reg8_I COMMA reg8\n            | LD reg8_I COMMA A\n     asm : LD reg8 COMMA reg8_I\n            | LD A COMMA reg8_I\n     reg8_hl : LP HL RP\n        reg8_I : LP IX PLUS expr RP\n               | LP IX MINUS expr RP\n               | LP IY PLUS expr RP\n               | LP IY MINUS expr RP\n               | LP IX PLUS pexpr RP\n               | LP IX MINUS pexpr RP\n               | LP IY PLUS pexpr RP\n               | LP IY MINUS pexpr RP\n     asm : EX AF COMMA AF APO\n     asm : EX DE COMMA HL\n     asm : ORG expr\n            | ORG pexpr\n     asm : NAMESPACE DEFAULT\n            | NAMESPACE ID\n     asm : ALIGN expr\n            | ALIGN pexpr\n     asm : INCBIN STRING\n     asm : EX LP SP RP COMMA reg16i\n            | EX LP SP RP COMMA HL\n     asm : INC inc_reg\n            | DEC inc_reg\n     asm : INC reg8_I\n            | DEC reg8_I\n     asm : LD reg8 COMMA expr\n            | LD reg8 COMMA pexpr\n            | LD reg16 COMMA expr\n            | LD reg8_hl COMMA expr\n            | LD A COMMA expr\n            | LD SP COMMA expr\n            | LD reg8i COMMA expr\n     asm : LD reg8_I COMMA expr\n     asm : JP reg8_hl\n            | JP LP reg16i RP\n     asm : SBC A COMMA reg8\n            | SBC A COMMA reg8i\n            | SBC A COMMA A\n            | SBC A COMMA reg8_hl\n            | SBC HL COMMA SP\n            | SBC HL COMMA BC\n            | SBC HL COMMA DE\n            | SBC HL COMMA HL\n            | ADD A COMMA reg8\n            | ADD A COMMA reg8i\n            | ADD A COMMA A\n            | ADD A COMMA reg8_hl\n            | ADC A COMMA reg8\n            | ADC A COMMA reg8i\n            | ADC A COMMA A\n            | ADC A COMMA reg8_hl\n            | ADD HL COMMA BC\n            | ADD HL COMMA DE\n            | ADD HL COMMA HL\n            | ADD HL COMMA SP\n            | ADC HL COMMA BC\n            | ADC HL COMMA DE\n            | ADC HL COMMA HL\n            | ADC HL COMMA SP\n            | ADD reg16i COMMA BC\n            | ADD reg16i COMMA DE\n            | ADD reg16i COMMA HL\n            | ADD reg16i COMMA SP\n            | ADD reg16i COMMA reg16i\n     asm : SBC A COMMA expr\n            | SBC A COMMA pexpr\n            | ADD A COMMA expr\n            | ADD A COMMA pexpr\n            | ADC A COMMA expr\n            | ADC A COMMA pexpr\n     asm : SBC A COMMA reg8_I\n            | ADD A COMMA reg8_I\n            | ADC A COMMA reg8_I\n     asm : bitwiseop reg8\n            | bitwiseop reg8i\n            | bitwiseop A\n            | bitwiseop reg8_hl\n     asm : bitwiseop reg8_I\n     asm : bitwiseop expr\n            | bitwiseop pexpr\n     bitwiseop : OR\n              | AND\n              | XOR\n              | SUB\n              | CP\n     asm : PUSH AF\n            | PUSH reg16\n            | POP AF\n            | POP reg16\n     asm : LD pexpr COMMA A\n            | LD pexpr COMMA reg16\n            | LD pexpr COMMA SP\n     asm : LD A COMMA pexpr\n            | LD reg16 COMMA pexpr\n            | LD SP COMMA pexpr\n     asm : rotation reg8\n            | rotation reg8_hl\n            | rotation A\n     asm : rotation reg8_I\n     asm : bitop expr COMMA A\n            | bitop pexpr COMMA A\n            | bitop expr COMMA reg8\n            | bitop pexpr COMMA reg8\n            | bitop expr COMMA reg8_hl\n            | bitop pexpr COMMA reg8_hl\n     asm : bitop expr COMMA reg8_I\n            | bitop pexpr COMMA reg8_I\n     bitop : BIT\n              | RES\n              | SET\n     rotation : RR\n                 | RL\n                 | RRC\n                 | RLC\n                 | SLA\n                 | SLL\n                 | SRA\n                 | SRL\n     inc_reg : SP\n                | reg8\n                | reg16\n                | reg8_hl\n                | A\n                | reg8i\n     reg8 : H\n             | L\n             | regBCDE\n     regBCDE : B\n                | C\n                | D\n                | E\n     reg8i : IXH\n              | IXL\n              | IYH\n              | IYL\n     reg16 : BC\n             | DE\n             | HL\n             | reg16i\n     reg16i : IX\n               | IY\n     asm : JP jp_flags COMMA expr\n            | JP jp_flags COMMA pexpr\n            | CALL jp_flags COMMA expr\n            | CALL jp_flags COMMA pexpr\n     asm : RET jp_flags\n     jp_flags : P\n                 | M\n                 | PO\n                 | PE\n                 | jr_flags\n     asm : JR jr_flags COMMA expr\n            | JR jr_flags COMMA pexpr\n     jr_flags : Z\n                 | C\n                 | NZ\n                 | NC\n     asm : JP expr\n            | JR expr\n            | CALL expr\n            | DJNZ expr\n            | JP pexpr\n            | JR pexpr\n            | CALL pexpr\n            | DJNZ pexpr\n     asm : RST expr\n     asm : IM expr\n        asm : IN A COMMA LP C RP\n            | IN reg8 COMMA LP C RP\n        asm : OUT LP C RP COMMA A\n            | OUT LP C RP COMMA reg8\n     asm : IN A COMMA pexpr\n     asm : OUT pexpr COMMA A\n     asm : NOP\n            | EXX\n            | CCF\n            | SCF\n            | LDIR\n            | LDI\n            | LDDR\n            | LDD\n            | CPIR\n            | CPI\n            | CPDR\n            | CPD\n            | DAA\n            | NEG\n            | CPL\n            | HALT\n            | EI\n            | DI\n            | OUTD\n            | OUTI\n            | OTDR\n            | OTIR\n            | IND\n            | INI\n            | INDR\n            | INIR\n            | RET\n            | RETI\n            | RETN\n            | RLA\n            | RLCA\n            | RRA\n            | RRCA\n            | RLD\n            | RRD\n     expr : expr PLUS expr\n             | expr MINUS expr\n             | expr MUL expr\n             | expr DIV expr\n             | expr POW expr\n             | pexpr PLUS expr\n             | pexpr MINUS expr\n             | pexpr MUL expr\n             | pexpr DIV expr\n             | pexpr POW expr\n             | expr PLUS pexpr\n             | expr MINUS pexpr\n             | expr MUL pexpr\n             | expr DIV pexpr\n             | expr POW pexpr\n     pexpr : LP expr RP\n     expr : MINUS expr %prec UMINUS\n     expr : INTEGER\n     expr : ID\n     expr : ADDR\n     asm : preproc_line\n     preproc_line : _LINE INTEGER\n     preproc_line : _LINE INTEGER STRING\n     preproc_line : _INIT ID\n    '
    
_lr_action_items = {'OTDR':([0,21,56,62,68,138,179,181,267,384,385,],[1,1,-6,1,-13,-7,-10,-12,-11,-8,-9,]),'LDDR':([0,21,56,62,68,138,179,181,267,384,385,],[81,81,-6,81,-13,-7,-10,-12,-11,-8,-9,]),'RLCA':([0,21,56,62,68,138,179,181,267,384,385,],[2,2,-6,2,-13,-7,-10,-12,-11,-8,-9,]),'NC':([38,39,82,90,],[150,150,150,150,]),'IXH':([4,17,20,23,54,65,66,74,91,239,241,249,260,262,268,],[-137,-133,122,-135,-134,122,122,-136,122,122,122,122,122,122,122,]),'B':([4,10,12,16,17,20,23,31,49,52,54,63,65,66,69,74,75,79,91,239,240,241,246,249,256,257,260,262,268,419,],[-137,102,-166,-163,-133,102,-135,-168,-167,-169,-134,-165,102,102,-164,-136,102,-170,102,102,102,102,102,102,102,102,102,102,102,102,]),'IYH':([4,17,20,23,54,65,66,74,91,239,241,249,260,262,268,],[-137,-133,125,-135,-134,125,125,-136,125,125,125,125,125,125,125,]),'I':([20,241,],[126,312,]),'Z':([38,39,82,90,],[156,156,156,156,]),'LOCAL':([0,21,56,62,68,138,179,181,267,384,385,],[7,7,-6,7,-13,-7,-10,-12,-11,-8,-9,]),'CPI':([0,21,56,62,68,138,179,181,267,384,385,],[5,5,-6,5,-13,-7,-10,-12,-11,-8,-9,]),'L':([4,10,12,16,17,20,23,31,49,52,54,63,65,66,69,74,75,79,91,240,241,246,249,256,257,260,262,268,419,],[-137,105,-166,-163,-133,105,-135,-168,-167,-169,-134,-165,105,105,-164,-136,105,-170,105,105,105,105,105,105,105,105,105,105,105,]),'OUTD':([0,21,56,62,68,138,179,181,267,384,385,],[59,59,-6,59,-13,-7,-10,-12,-11,-8,-9,]),'ENDP':([0,21,56,62,68,138,179,181,267,384,385,],[6,6,-6,6,-13,-7,-10,-12,-11,-8,-9,]),'H':([4,10,12,16,17,20,23,31,49,52,54,63,65,66,69,74,75,79,91,240,241,246,249,256,257,260,262,268,419,],[-137,97,-166,-163,-133,97,-135,-168,-167,-169,-134,-165,97,97,-164,-136,97,-170,97,97,97,97,97,97,97,97,97,97,97,]),'EX':([0,21,56,62,68,138,179,181,267,384,385,],[8,8,-6,8,-13,-7,-10,-12,-11,-8,-9,]),'RLD':([0,21,56,62,68,138,179,181,267,384,385,],[9,9,-6,9,-13,-7,-10,-12,-11,-8,-9,]),'ORG':([0,21,56,62,68,138,179,181,267,384,385,],[11,11,-6,11,-13,-7,-10,-12,-11,-8,-9,]),'EI':([0,21,56,62,68,138,179,181,267,384,385,],[88,88,-6,88,-13,-7,-10,-12,-11,-8,-9,]),'RLC':([0,21,56,62,68,138,179,181,267,384,385,],[12,12,-6,12,-13,-7,-10,-12,-11,-8,-9,]),'RES':([0,21,56,62,68,138,179,181,267,384,385,],[13,13,-6,13,-13,-7,-10,-12,-11,-8,-9,]),'RETI':([0,21,56,62,68,138,179,181,267,384,385,],[3,3,-6,3,-13,-7,-10,-12,-11,-8,-9,]),'RP':([109,111,113,127,131,220,224,226,232,244,245,254,273,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,407,408,409,410,411,412,413,414,415,416,420,421,],[-279,-278,-280,-193,-192,276,281,-277,289,324,325,344,402,-267,-269,-266,-268,-270,-276,-271,-261,-273,-263,-275,-265,-262,-272,-274,-264,424,425,426,427,428,429,430,431,432,433,438,439,]),'RR':([0,21,56,62,68,138,179,181,267,384,385,],[16,16,-6,16,-13,-7,-10,-12,-11,-8,-9,]),'OR':([0,21,56,62,68,138,179,181,267,384,385,],[17,17,-6,17,-13,-7,-10,-12,-11,-8,-9,]),'CPL':([0,21,56,62,68,138,179,181,267,384,385,],[18,18,-6,18,-13,-7,-10,-12,-11,-8,-9,]),'RRD':([0,21,56,62,68,138,179,181,267,384,385,],[19,19,-6,19,-13,-7,-10,-12,-11,-8,-9,]),'LD':([0,21,56,62,68,138,179,181,267,384,385,],[20,20,-6,20,-13,-7,-10,-12,-11,-8,-9,]),'IY':([20,41,53,66,67,91,104,128,185,195,215,242,248,259,313,365,405,],[127,127,127,127,127,127,225,225,225,225,127,127,127,127,225,225,127,]),'CCF':([0,21,56,62,68,138,179,181,267,384,385,],[22,22,-6,22,-13,-7,-10,-12,-11,-8,-9,]),'AND':([0,21,56,62,68,138,179,181,267,384,385,],[54,54,-6,54,-13,-7,-10,-12,-11,-8,-9,]),'XOR':([0,21,56,62,68,138,179,181,267,384,385,],[23,23,-6,23,-13,-7,-10,-12,-11,-8,-9,]),'COMMA':([92,93,95,96,97,98,101,102,105,106,108,109,111,113,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,140,142,143,147,148,149,150,151,152,154,155,156,157,158,159,162,165,166,167,168,169,170,201,202,205,206,207,211,216,226,275,276,281,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,324,325,342,343,344,424,425,426,427,428,429,430,431,],[-40,219,221,222,-177,-182,-179,-180,-178,-183,-181,-279,-278,-280,238,-187,-188,239,-191,240,-184,241,242,-186,243,-193,-190,-189,-192,246,247,248,249,-185,-46,253,-47,255,256,257,-209,-207,-203,-208,-200,-206,-199,-201,-202,258,259,260,261,253,262,263,268,269,253,270,271,272,274,-277,-41,405,-54,-267,-269,-266,-268,-270,-276,-271,-261,-273,-263,-275,-265,-262,-272,-274,-264,417,418,-48,-49,419,-55,-59,-60,-56,-57,-61,-62,-58,]),'END':([21,56,68,138,179,181,267,384,385,],[137,-6,-13,-7,-10,-12,-11,-8,-9,]),'DI':([0,21,56,62,68,138,179,181,267,384,385,],[24,24,-6,24,-13,-7,-10,-12,-11,-8,-9,]),'DEFB':([0,21,56,62,68,138,179,181,267,384,385,],[25,25,-6,25,-13,-7,-10,-12,-11,-8,-9,]),'A':([4,10,12,16,17,20,23,31,41,49,50,52,54,63,65,66,69,70,74,75,79,91,239,240,241,243,246,247,248,249,255,256,257,260,262,268,417,418,419,],[-137,103,-166,-163,-133,123,-135,-168,166,-167,169,-169,-134,-165,189,193,-164,201,-136,206,-170,193,302,306,311,323,326,329,332,335,345,347,351,363,375,388,434,435,436,]),'LDI':([0,21,56,62,68,138,179,181,267,384,385,],[27,27,-6,27,-13,-7,-10,-12,-11,-8,-9,]),'CPDR':([0,21,56,62,68,138,179,181,267,384,385,],[28,28,-6,28,-13,-7,-10,-12,-11,-8,-9,]),'SP':([20,66,91,94,248,259,261,263,269,],[124,194,194,220,331,360,372,383,396,]),'STRING':([25,72,174,],[141,204,266,]),'HALT':([0,21,56,62,68,138,179,181,267,384,385,],[30,30,-6,30,-13,-7,-10,-12,-11,-8,-9,]),'SLL':([0,21,56,62,68,138,179,181,267,384,385,],[31,31,-6,31,-13,-7,-10,-12,-11,-8,-9,]),'PE':([38,82,90,],[159,159,159,]),'P':([38,82,90,],[157,157,157,]),'PO':([38,82,90,],[158,158,158,]),'NOP':([0,21,56,62,68,138,179,181,267,384,385,],[32,32,-6,32,-13,-7,-10,-12,-11,-8,-9,]),'PROC':([0,21,56,62,68,138,179,181,267,384,385,],[33,33,-6,33,-13,-7,-10,-12,-11,-8,-9,]),'OUT':([0,21,56,62,68,138,179,181,267,384,385,],[34,34,-6,34,-13,-7,-10,-12,-11,-8,-9,]),'EQU':([51,],[171,]),'INDR':([0,21,56,62,68,138,179,181,267,384,385,],[35,35,-6,35,-13,-7,-10,-12,-11,-8,-9,]),'RRA':([0,21,56,62,68,138,179,181,267,384,385,],[36,36,-6,36,-13,-7,-10,-12,-11,-8,-9,]),'RET':([0,21,56,62,68,138,179,181,267,384,385,],[38,38,-6,38,-13,-7,-10,-12,-11,-8,-9,]),'IX':([20,41,53,66,67,91,104,128,185,195,215,242,248,259,313,365,405,],[131,131,131,131,131,131,223,223,223,223,131,131,131,131,223,223,131,]),'POW':([109,111,112,113,115,140,143,144,145,148,149,160,161,163,164,175,176,184,186,203,209,210,212,214,226,232,251,252,264,265,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,304,308,315,317,319,321,328,336,337,342,343,354,355,364,366,376,377,389,390,400,401,403,404,407,408,409,410,411,412,413,414,],[-279,-278,231,-280,235,235,231,231,235,235,231,235,231,231,235,235,231,231,235,235,235,231,235,231,-277,235,235,231,235,231,235,235,235,235,235,-276,231,235,231,235,231,235,235,231,231,235,235,231,235,235,235,231,235,231,235,231,235,235,231,235,231,231,235,231,235,231,235,235,231,235,231,235,231,231,235,235,231,231,235,]),'ALIGN':([0,21,56,62,68,138,179,181,267,384,385,],[40,40,-6,40,-13,-7,-10,-12,-11,-8,-9,]),'ADD':([0,21,56,62,68,138,179,181,267,384,385,],[41,41,-6,41,-13,-7,-10,-12,-11,-8,-9,]),'SCF':([0,21,56,62,68,138,179,181,267,384,385,],[42,42,-6,42,-13,-7,-10,-12,-11,-8,-9,]),'NEG':([0,21,56,62,68,138,179,181,267,384,385,],[43,43,-6,43,-13,-7,-10,-12,-11,-8,-9,]),'LDD':([0,21,56,62,68,138,179,181,267,384,385,],[44,44,-6,44,-13,-7,-10,-12,-11,-8,-9,]),'DAA':([0,21,56,62,68,138,179,181,267,384,385,],[45,45,-6,45,-13,-7,-10,-12,-11,-8,-9,]),'CP':([0,21,56,62,68,138,179,181,267,384,385,],[4,4,-6,4,-13,-7,-10,-12,-11,-8,-9,]),'APO':([278,],[406,]),'DEFS':([0,21,56,62,68,138,179,181,267,384,385,],[47,47,-6,47,-13,-7,-10,-12,-11,-8,-9,]),'OUTI':([0,21,56,62,68,138,179,181,267,384,385,],[48,48,-6,48,-13,-7,-10,-12,-11,-8,-9,]),'SLA':([0,21,56,62,68,138,179,181,267,384,385,],[49,49,-6,49,-13,-7,-10,-12,-11,-8,-9,]),'IYL':([4,17,20,23,54,65,66,74,91,239,241,249,260,262,268,],[-137,-133,117,-135,-134,117,117,-136,117,117,117,117,117,117,117,]),'DIV':([109,111,112,113,115,140,143,144,145,148,149,160,161,163,164,175,176,184,186,203,209,210,212,214,226,232,251,252,264,265,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,304,308,315,317,319,321,328,336,337,342,343,354,355,364,366,376,377,389,390,400,401,403,404,407,408,409,410,411,412,413,414,],[-279,-278,228,-280,237,237,228,228,237,237,228,237,228,228,237,237,228,228,237,237,237,228,237,228,-277,237,237,228,237,228,237,-269,237,-268,-270,-276,228,237,-273,-263,-275,-265,237,228,-274,-264,237,228,237,237,237,228,237,228,237,228,237,237,228,237,228,228,237,228,237,228,237,237,228,237,228,237,228,228,237,237,228,228,237,]),'ADC':([0,21,56,62,68,138,179,181,267,384,385,],[50,50,-6,50,-13,-7,-10,-12,-11,-8,-9,]),'NEWLINE':([0,1,2,3,5,6,9,18,19,21,22,24,27,28,29,30,32,33,35,36,38,42,43,44,45,46,48,56,58,59,60,62,64,68,76,78,81,83,84,85,86,87,88,89,92,93,97,98,99,100,101,102,103,105,106,107,108,109,111,112,113,115,117,118,120,122,125,127,129,130,131,136,137,138,140,141,142,143,144,145,150,151,152,153,154,155,156,157,158,159,160,161,163,164,168,172,173,174,175,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,196,197,198,199,200,203,204,205,208,209,210,212,213,214,217,218,226,251,252,264,265,266,267,275,277,281,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323,326,327,328,329,330,331,332,333,334,335,336,337,338,339,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,400,401,402,403,404,406,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,],[68,-246,-256,-253,-235,-38,-259,-240,-260,68,-228,-243,-231,-236,-249,-241,-226,-37,-250,-257,-252,-229,-239,-233,-238,-258,-245,-6,-281,-244,-248,179,181,-13,-227,-251,-232,-230,-254,-247,-234,-237,-242,-255,-40,-39,-177,-182,-151,-149,-179,-180,-150,-178,-183,-148,-181,-279,-278,-66,-280,-65,-187,-188,-191,-184,-186,-193,-190,-189,-192,-185,250,-7,-46,-43,-42,-47,-217,-213,-209,-207,-203,-198,-208,-200,-206,-199,-201,-202,-211,-215,-70,-69,-44,-141,-140,-282,-219,-68,-67,-10,267,-12,-127,-130,-132,-131,-126,-129,-128,-173,-176,-76,-175,-171,-174,-172,-74,-139,-138,-218,-71,-45,-284,-212,-216,-210,-86,-214,-77,-75,-277,340,341,384,385,-283,-11,-41,-64,-54,-267,-269,-266,-268,-270,-276,-271,-261,-273,-263,-275,-265,-262,-272,-274,-264,-80,-146,-29,-32,-84,-31,-51,-50,-85,-28,-53,-23,-24,-19,-82,-22,-145,-26,-83,-18,-147,-17,-25,-21,-15,-81,-27,-143,-144,-142,-30,-52,-20,-79,-78,-14,-16,-48,-49,-225,-158,-152,-156,-154,-159,-153,-157,-155,-204,-205,-112,-116,-114,-113,-115,-97,-124,-98,-120,-119,-99,-96,-104,-106,-105,-107,-101,-125,-102,-122,-121,-103,-100,-108,-110,-109,-111,-8,-9,-89,-123,-90,-118,-117,-91,-88,-93,-95,-94,-92,-224,-196,-197,-87,-194,-195,-63,-72,-73,-55,-59,-60,-56,-57,-61,-62,-58,-33,-34,-35,-36,-222,-223,-220,-221,]),'MUL':([109,111,112,113,115,140,143,144,145,148,149,160,161,163,164,175,176,184,186,203,209,210,212,214,226,232,251,252,264,265,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,304,308,315,317,319,321,328,336,337,342,343,354,355,364,366,376,377,389,390,400,401,403,404,407,408,409,410,411,412,413,414,],[-279,-278,230,-280,234,234,230,230,234,234,230,234,230,230,234,234,230,230,234,234,234,230,234,230,-277,234,234,230,234,230,234,-269,234,-268,-270,-276,230,234,-273,-263,-275,-265,234,230,-274,-264,234,230,234,234,234,230,234,230,234,230,234,234,230,234,230,230,234,230,234,230,234,234,230,234,230,234,230,230,234,234,230,230,234,]),'E':([4,10,12,16,17,20,23,31,49,52,54,63,65,66,69,74,75,79,91,239,240,241,246,249,256,257,260,262,268,419,],[-137,106,-166,-163,-133,106,-135,-168,-167,-169,-134,-165,106,106,-164,-136,106,-170,106,106,106,106,106,106,106,106,106,106,106,106,]),'SRA':([0,21,56,62,68,138,179,181,267,384,385,],[52,52,-6,52,-13,-7,-10,-12,-11,-8,-9,]),'INI':([0,21,56,62,68,138,179,181,267,384,385,],[29,29,-6,29,-13,-7,-10,-12,-11,-8,-9,]),'POP':([0,21,56,62,68,138,179,181,267,384,385,],[53,53,-6,53,-13,-7,-10,-12,-11,-8,-9,]),'BC':([20,53,66,67,91,128,248,259,261,263,269,313,],[118,118,118,118,118,244,118,356,369,380,393,415,]),'_LINE':([0,21,56,62,68,138,179,181,267,384,385,],[55,55,-6,55,-13,-7,-10,-12,-11,-8,-9,]),'HL':([20,41,50,53,66,67,70,91,104,128,185,195,215,221,242,248,259,261,263,269,313,365,405,],[129,167,170,129,129,129,202,129,224,224,224,224,224,277,322,129,358,370,381,394,224,224,423,]),'RL':([0,21,56,62,68,138,179,181,267,384,385,],[69,69,-6,69,-13,-7,-10,-12,-11,-8,-9,]),'IM':([0,21,56,62,68,138,179,181,267,384,385,],[57,57,-6,57,-13,-7,-10,-12,-11,-8,-9,]),'INTEGER':([4,11,13,14,17,23,25,26,37,39,40,47,54,55,57,65,71,73,74,77,82,90,110,114,128,137,146,171,185,215,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,246,249,253,258,260,262,268,272,274,279,280,282,283,313,365,397,],[-137,111,-161,-162,-133,-135,111,111,111,111,111,111,-134,174,111,111,111,111,-136,-160,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'DE':([8,20,53,66,67,91,128,248,259,261,263,269,313,],[95,130,130,130,130,130,245,130,359,371,382,395,416,]),'D':([4,10,12,16,17,20,23,31,49,52,54,63,65,66,69,74,75,79,91,239,240,241,246,249,256,257,260,262,268,419,],[-137,98,-166,-163,-133,98,-135,-168,-167,-169,-134,-165,98,98,-164,-136,98,-170,98,98,98,98,98,98,98,98,98,98,98,98,]),'IND':([0,21,56,62,68,138,179,181,267,384,385,],[60,60,-6,60,-13,-7,-10,-12,-11,-8,-9,]),'LABEL':([0,21,56,68,138,179,181,267,384,385,],[62,62,-6,-13,-7,-10,-12,-11,-8,-9,]),'R':([20,241,],[133,318,]),'AF':([8,53,67,222,],[96,173,200,278,]),'C':([4,10,12,16,17,20,23,31,38,39,49,52,54,63,65,66,69,74,75,79,82,90,91,146,239,240,241,246,249,256,257,260,262,268,397,399,419,],[-137,108,-166,-163,-133,108,-135,-168,151,151,-167,-169,-134,-165,108,108,-164,-136,108,-170,151,151,108,254,108,108,108,108,108,108,108,108,108,108,420,421,108,]),'LP':([4,8,10,11,12,13,14,16,17,20,23,25,26,31,34,37,39,40,47,49,52,54,57,63,65,66,69,71,73,74,77,79,82,90,91,110,114,128,137,146,171,185,215,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,246,249,253,256,257,258,260,262,268,270,271,272,274,279,280,282,283,313,365,397,],[-137,94,104,114,-166,-161,-162,-163,-133,128,-135,114,114,-168,146,114,114,114,114,-167,-169,-134,114,-165,185,195,-164,114,114,-136,-160,-170,114,215,195,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,313,114,114,185,114,104,104,114,365,365,365,397,399,114,114,114,114,114,114,114,114,114,]),'DJNZ':([0,21,56,62,68,138,179,181,267,384,385,],[26,26,-6,26,-13,-7,-10,-12,-11,-8,-9,]),'INC':([0,21,56,62,68,138,179,181,267,384,385,],[66,66,-6,66,-13,-7,-10,-12,-11,-8,-9,]),'DEFAULT':([61,],[178,]),'PUSH':([0,21,56,62,68,138,179,181,267,384,385,],[67,67,-6,67,-13,-7,-10,-12,-11,-8,-9,]),'ID':([0,4,7,11,13,14,17,21,23,25,26,37,39,40,47,54,56,57,61,65,68,71,73,74,77,80,82,90,110,114,128,137,138,146,171,179,181,185,215,219,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,246,249,253,258,260,262,267,268,272,274,279,280,282,283,313,365,384,385,397,],[51,-137,92,109,-161,-162,-133,51,-135,109,109,109,109,109,109,-134,-6,109,177,109,-13,109,109,-136,-160,208,109,109,109,109,109,109,-7,109,109,-10,-12,109,109,275,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-11,109,109,109,109,109,109,109,109,109,-8,-9,109,]),'$end':([15,21,56,68,138,139,179,181,250,267,340,341,384,385,],[0,-1,-6,-13,-7,-2,-10,-12,-3,-11,-4,-5,-8,-9,]),'SET':([0,21,56,62,68,138,179,181,267,384,385,],[14,14,-6,14,-13,-7,-10,-12,-11,-8,-9,]),'SBC':([0,21,56,62,68,138,179,181,267,384,385,],[70,70,-6,70,-13,-7,-10,-12,-11,-8,-9,]),'RST':([0,21,56,62,68,138,179,181,267,384,385,],[71,71,-6,71,-13,-7,-10,-12,-11,-8,-9,]),'INCBIN':([0,21,56,62,68,138,179,181,267,384,385,],[72,72,-6,72,-13,-7,-10,-12,-11,-8,-9,]),'DEFW':([0,21,56,62,68,138,179,181,267,384,385,],[73,73,-6,73,-13,-7,-10,-12,-11,-8,-9,]),'MINUS':([4,11,13,14,17,23,25,26,37,39,40,47,54,57,65,71,73,74,77,82,90,109,110,111,112,113,114,115,128,137,140,143,144,145,146,148,149,160,161,163,164,171,175,176,184,185,186,203,209,210,212,214,215,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,246,249,251,252,253,258,260,262,264,265,268,272,274,279,280,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,304,308,313,315,317,319,321,328,336,337,342,343,354,355,364,365,366,376,377,389,390,397,400,401,403,404,407,408,409,410,411,412,413,414,],[-137,110,-161,-162,-133,-135,110,110,110,110,110,110,-134,110,110,110,110,-136,-160,110,110,-279,110,-278,227,-280,110,236,110,110,236,227,227,236,110,236,227,236,227,227,236,110,236,227,227,110,236,236,236,227,236,227,110,280,283,-277,110,110,110,110,110,236,110,110,110,110,110,110,110,110,110,110,110,110,236,227,110,110,110,110,236,227,110,110,110,110,110,110,110,-267,-269,-266,-268,-270,-276,-271,-261,-273,-263,-275,-265,-262,-272,-274,-264,236,227,236,236,110,236,227,236,227,236,227,236,236,227,236,227,227,110,236,227,236,227,236,110,236,227,236,227,236,227,227,236,236,227,227,236,]),'ADDR':([4,11,13,14,17,23,25,26,37,39,40,47,54,57,65,71,73,74,77,82,90,110,114,128,137,146,171,185,215,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,246,249,253,258,260,262,268,272,274,279,280,282,283,313,365,397,],[-137,113,-161,-162,-133,-135,113,113,113,113,113,113,-134,113,113,113,113,-136,-160,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'IN':([0,21,56,62,68,138,179,181,267,384,385,],[75,75,-6,75,-13,-7,-10,-12,-11,-8,-9,]),'DEC':([0,21,56,62,68,138,179,181,267,384,385,],[91,91,-6,91,-13,-7,-10,-12,-11,-8,-9,]),'M':([38,82,90,],[155,155,155,]),'NZ':([38,39,82,90,],[154,154,154,154,]),'BIT':([0,21,56,62,68,138,179,181,267,384,385,],[77,77,-6,77,-13,-7,-10,-12,-11,-8,-9,]),'PLUS':([109,111,112,113,115,140,143,144,145,148,149,160,161,163,164,175,176,184,186,203,209,210,212,214,223,225,226,232,251,252,264,265,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,304,308,315,317,319,321,328,336,337,342,343,354,355,364,366,376,377,389,390,400,401,403,404,407,408,409,410,411,412,413,414,],[-279,-278,229,-280,233,233,229,229,233,233,229,233,229,229,233,233,229,229,233,233,233,229,233,229,279,282,-277,233,233,229,233,229,-267,-269,-266,-268,-270,-276,-271,-261,-273,-263,-275,-265,-262,-272,-274,-264,233,229,233,233,233,229,233,229,233,229,233,233,229,233,229,229,233,229,233,229,233,233,229,233,229,233,229,229,233,233,229,229,233,]),'INIR':([0,21,56,62,68,138,179,181,267,384,385,],[78,78,-6,78,-13,-7,-10,-12,-11,-8,-9,]),'SRL':([0,21,56,62,68,138,179,181,267,384,385,],[79,79,-6,79,-13,-7,-10,-12,-11,-8,-9,]),'_INIT':([0,21,56,62,68,138,179,181,267,384,385,],[80,80,-6,80,-13,-7,-10,-12,-11,-8,-9,]),'JR':([0,21,56,62,68,138,179,181,267,384,385,],[39,39,-6,39,-13,-7,-10,-12,-11,-8,-9,]),'RRCA':([0,21,56,62,68,138,179,181,267,384,385,],[46,46,-6,46,-13,-7,-10,-12,-11,-8,-9,]),'RLA':([0,21,56,62,68,138,179,181,267,384,385,],[89,89,-6,89,-13,-7,-10,-12,-11,-8,-9,]),'CALL':([0,21,56,62,68,138,179,181,267,384,385,],[82,82,-6,82,-13,-7,-10,-12,-11,-8,-9,]),'LDIR':([0,21,56,62,68,138,179,181,267,384,385,],[83,83,-6,83,-13,-7,-10,-12,-11,-8,-9,]),'RETN':([0,21,56,62,68,138,179,181,267,384,385,],[84,84,-6,84,-13,-7,-10,-12,-11,-8,-9,]),'IXL':([4,17,20,23,54,65,66,74,91,239,241,249,260,262,268,],[-137,-133,136,-135,-134,136,136,-136,136,136,136,136,136,136,136,]),'OTIR':([0,21,56,62,68,138,179,181,267,384,385,],[85,85,-6,85,-13,-7,-10,-12,-11,-8,-9,]),'CPIR':([0,21,56,62,68,138,179,181,267,384,385,],[86,86,-6,86,-13,-7,-10,-12,-11,-8,-9,]),'CPD':([0,21,56,62,68,138,179,181,267,384,385,],[87,87,-6,87,-13,-7,-10,-12,-11,-8,-9,]),'RRC':([0,21,56,62,68,138,179,181,267,384,385,],[63,63,-6,63,-13,-7,-10,-12,-11,-8,-9,]),'SUB':([0,21,56,62,68,138,179,181,267,384,385,],[74,74,-6,74,-13,-7,-10,-12,-11,-8,-9,]),'EXX':([0,21,56,62,68,138,179,181,267,384,385,],[76,76,-6,76,-13,-7,-10,-12,-11,-8,-9,]),'JP':([0,21,56,62,68,138,179,181,267,384,385,],[90,90,-6,90,-13,-7,-10,-12,-11,-8,-9,]),'NAMESPACE':([0,21,56,62,68,138,179,181,267,384,385,],[61,61,-6,61,-13,-7,-10,-12,-11,-8,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'reg16':([20,53,66,67,91,248,],[116,172,190,199,190,330,]),'reg8i':([20,65,66,91,239,241,249,260,262,268,],[119,182,191,191,303,309,333,361,373,386,]),'reg16i':([20,41,53,66,67,91,215,242,248,259,405,],[120,165,120,120,120,120,273,320,120,357,422,]),'reg8_I':([10,20,65,66,91,241,249,256,257,260,262,268,],[99,121,183,192,217,310,334,346,350,362,374,387,]),'jr_flags':([38,39,82,90,],[152,162,152,152,]),'start':([0,],[15,]),'number_list':([25,47,73,],[142,168,205,]),'id_list':([7,],[93,]),'reg8':([10,20,65,66,75,91,240,241,246,249,256,257,260,262,268,419,],[107,135,187,197,207,197,307,314,327,339,349,353,368,379,392,437,]),'expr':([11,25,26,37,39,40,47,57,65,71,73,82,90,110,114,128,137,146,171,185,215,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,246,249,253,258,260,262,268,272,274,279,280,282,283,313,365,397,],[115,140,145,148,160,164,140,175,186,203,140,209,212,226,232,232,251,232,264,232,232,284,285,286,287,288,291,293,295,296,299,300,304,308,315,319,328,337,342,354,366,377,390,400,403,407,410,411,414,232,232,232,]),'rotation':([0,21,62,],[10,10,10,]),'bitop':([0,21,62,],[37,37,37,]),'reg8_hl':([10,20,65,66,90,91,241,249,256,257,260,262,268,],[100,132,188,196,213,196,316,338,348,352,367,378,391,]),'pexpr':([11,20,25,26,34,37,39,40,47,57,65,71,73,82,90,110,114,128,137,146,171,185,215,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,246,249,253,258,260,262,268,270,272,274,279,280,282,283,313,365,397,],[112,134,143,144,147,149,161,163,143,176,184,176,143,210,214,176,176,176,252,176,265,176,176,176,176,176,176,176,290,292,294,297,298,301,176,176,317,321,176,336,343,355,364,376,389,398,401,404,408,409,412,413,176,176,176,]),'asm':([0,21,62,],[64,64,180,]),'bitwiseop':([0,21,62,],[65,65,65,]),'preproc_line':([0,21,62,],[58,58,58,]),'regBCDE':([10,20,65,66,75,91,239,240,241,246,249,256,257,260,262,268,419,],[101,101,101,101,101,101,305,101,101,101,101,101,101,101,101,101,101,]),'inc_reg':([66,91,],[198,218,]),'endline':([21,],[139,]),'jp_flags':([38,82,90,],[153,211,216,]),'program':([0,],[21,]),'line':([0,21,],[56,138,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> program','start',1,'p_start','asmparse.py',519),
  ('start -> program endline','start',2,'p_start','asmparse.py',520),
  ('endline -> END NEWLINE','endline',2,'p_program_endline','asmparse.py',525),
  ('endline -> END expr NEWLINE','endline',3,'p_program_endline2','asmparse.py',530),
  ('endline -> END pexpr NEWLINE','endline',3,'p_program_endline2','asmparse.py',531),
  ('program -> line','program',1,'p_program','asmparse.py',538),
  ('program -> program line','program',2,'p_program_line','asmparse.py',546),
  ('line -> ID EQU expr NEWLINE','line',4,'p_def_label','asmparse.py',554),
  ('line -> ID EQU pexpr NEWLINE','line',4,'p_def_label','asmparse.py',555),
  ('line -> LABEL NEWLINE','line',2,'p_line_label','asmparse.py',564),
  ('line -> LABEL asm NEWLINE','line',3,'p_line_label_asm','asmparse.py',573),
  ('line -> asm NEWLINE','line',2,'p_line_asm','asmparse.py',582),
  ('line -> NEWLINE','line',1,'p_line_newline','asmparse.py',588),
  ('asm -> LD reg8 COMMA reg8_hl','asm',4,'p_asm_ld8','asmparse.py',594),
  ('asm -> LD reg8_hl COMMA reg8','asm',4,'p_asm_ld8','asmparse.py',595),
  ('asm -> LD reg8 COMMA reg8','asm',4,'p_asm_ld8','asmparse.py',596),
  ('asm -> LD SP COMMA HL','asm',4,'p_asm_ld8','asmparse.py',597),
  ('asm -> LD SP COMMA reg16i','asm',4,'p_asm_ld8','asmparse.py',598),
  ('asm -> LD A COMMA reg8','asm',4,'p_asm_ld8','asmparse.py',599),
  ('asm -> LD reg8 COMMA A','asm',4,'p_asm_ld8','asmparse.py',600),
  ('asm -> LD reg8_hl COMMA A','asm',4,'p_asm_ld8','asmparse.py',601),
  ('asm -> LD A COMMA reg8_hl','asm',4,'p_asm_ld8','asmparse.py',602),
  ('asm -> LD A COMMA A','asm',4,'p_asm_ld8','asmparse.py',603),
  ('asm -> LD A COMMA I','asm',4,'p_asm_ld8','asmparse.py',604),
  ('asm -> LD I COMMA A','asm',4,'p_asm_ld8','asmparse.py',605),
  ('asm -> LD A COMMA R','asm',4,'p_asm_ld8','asmparse.py',606),
  ('asm -> LD R COMMA A','asm',4,'p_asm_ld8','asmparse.py',607),
  ('asm -> LD A COMMA reg8i','asm',4,'p_asm_ld8','asmparse.py',608),
  ('asm -> LD reg8i COMMA A','asm',4,'p_asm_ld8','asmparse.py',609),
  ('asm -> LD reg8 COMMA reg8i','asm',4,'p_asm_ld8','asmparse.py',610),
  ('asm -> LD reg8i COMMA regBCDE','asm',4,'p_asm_ld8','asmparse.py',611),
  ('asm -> LD reg8i COMMA reg8i','asm',4,'p_asm_ld8','asmparse.py',612),
  ('asm -> LD A COMMA LP BC RP','asm',6,'p_LDa','asmparse.py',622),
  ('asm -> LD A COMMA LP DE RP','asm',6,'p_LDa','asmparse.py',623),
  ('asm -> LD LP BC RP COMMA A','asm',6,'p_LDa','asmparse.py',624),
  ('asm -> LD LP DE RP COMMA A','asm',6,'p_LDa','asmparse.py',625),
  ('asm -> PROC','asm',1,'p_PROC','asmparse.py',631),
  ('asm -> ENDP','asm',1,'p_ENDP','asmparse.py',638),
  ('asm -> LOCAL id_list','asm',2,'p_LOCAL','asmparse.py',645),
  ('id_list -> ID','id_list',1,'p_idlist','asmparse.py',655),
  ('id_list -> id_list COMMA ID','id_list',3,'p_idlist_id','asmparse.py',661),
  ('asm -> DEFB number_list','asm',2,'p_DEFB','asmparse.py',667),
  ('asm -> DEFB STRING','asm',2,'p_DEFB','asmparse.py',668),
  ('asm -> DEFS number_list','asm',2,'p_DEFS','asmparse.py',674),
  ('asm -> DEFW number_list','asm',2,'p_DEFW','asmparse.py',687),
  ('number_list -> expr','number_list',1,'p_number_list','asmparse.py',693),
  ('number_list -> pexpr','number_list',1,'p_number_list','asmparse.py',694),
  ('number_list -> number_list COMMA expr','number_list',3,'p_number_list_number','asmparse.py',700),
  ('number_list -> number_list COMMA pexpr','number_list',3,'p_number_list_number','asmparse.py',701),
  ('asm -> LD reg8_I COMMA reg8','asm',4,'p_asm_ldind_r8','asmparse.py',707),
  ('asm -> LD reg8_I COMMA A','asm',4,'p_asm_ldind_r8','asmparse.py',708),
  ('asm -> LD reg8 COMMA reg8_I','asm',4,'p_asm_ldr8_ind','asmparse.py',714),
  ('asm -> LD A COMMA reg8_I','asm',4,'p_asm_ldr8_ind','asmparse.py',715),
  ('reg8_hl -> LP HL RP','reg8_hl',3,'p_reg8_hl','asmparse.py',721),
  ('reg8_I -> LP IX PLUS expr RP','reg8_I',5,'p_ind8_I','asmparse.py',727),
  ('reg8_I -> LP IX MINUS expr RP','reg8_I',5,'p_ind8_I','asmparse.py',728),
  ('reg8_I -> LP IY PLUS expr RP','reg8_I',5,'p_ind8_I','asmparse.py',729),
  ('reg8_I -> LP IY MINUS expr RP','reg8_I',5,'p_ind8_I','asmparse.py',730),
  ('reg8_I -> LP IX PLUS pexpr RP','reg8_I',5,'p_ind8_I','asmparse.py',731),
  ('reg8_I -> LP IX MINUS pexpr RP','reg8_I',5,'p_ind8_I','asmparse.py',732),
  ('reg8_I -> LP IY PLUS pexpr RP','reg8_I',5,'p_ind8_I','asmparse.py',733),
  ('reg8_I -> LP IY MINUS pexpr RP','reg8_I',5,'p_ind8_I','asmparse.py',734),
  ('asm -> EX AF COMMA AF APO','asm',5,'p_ex_af_af','asmparse.py',744),
  ('asm -> EX DE COMMA HL','asm',4,'p_ex_de_hl','asmparse.py',750),
  ('asm -> ORG expr','asm',2,'p_org','asmparse.py',756),
  ('asm -> ORG pexpr','asm',2,'p_org','asmparse.py',757),
  ('asm -> NAMESPACE DEFAULT','asm',2,'p_namespace','asmparse.py',763),
  ('asm -> NAMESPACE ID','asm',2,'p_namespace','asmparse.py',764),
  ('asm -> ALIGN expr','asm',2,'p_align','asmparse.py',777),
  ('asm -> ALIGN pexpr','asm',2,'p_align','asmparse.py',778),
  ('asm -> INCBIN STRING','asm',2,'p_incbin','asmparse.py',788),
  ('asm -> EX LP SP RP COMMA reg16i','asm',6,'p_ex_sp_reg8','asmparse.py',799),
  ('asm -> EX LP SP RP COMMA HL','asm',6,'p_ex_sp_reg8','asmparse.py',800),
  ('asm -> INC inc_reg','asm',2,'p_incdec','asmparse.py',806),
  ('asm -> DEC inc_reg','asm',2,'p_incdec','asmparse.py',807),
  ('asm -> INC reg8_I','asm',2,'p_incdeci','asmparse.py',813),
  ('asm -> DEC reg8_I','asm',2,'p_incdeci','asmparse.py',814),
  ('asm -> LD reg8 COMMA expr','asm',4,'p_LD_reg_val','asmparse.py',820),
  ('asm -> LD reg8 COMMA pexpr','asm',4,'p_LD_reg_val','asmparse.py',821),
  ('asm -> LD reg16 COMMA expr','asm',4,'p_LD_reg_val','asmparse.py',822),
  ('asm -> LD reg8_hl COMMA expr','asm',4,'p_LD_reg_val','asmparse.py',823),
  ('asm -> LD A COMMA expr','asm',4,'p_LD_reg_val','asmparse.py',824),
  ('asm -> LD SP COMMA expr','asm',4,'p_LD_reg_val','asmparse.py',825),
  ('asm -> LD reg8i COMMA expr','asm',4,'p_LD_reg_val','asmparse.py',826),
  ('asm -> LD reg8_I COMMA expr','asm',4,'p_LD_regI_val','asmparse.py',836),
  ('asm -> JP reg8_hl','asm',2,'p_JP_hl','asmparse.py',842),
  ('asm -> JP LP reg16i RP','asm',4,'p_JP_hl','asmparse.py',843),
  ('asm -> SBC A COMMA reg8','asm',4,'p_SBCADD','asmparse.py',855),
  ('asm -> SBC A COMMA reg8i','asm',4,'p_SBCADD','asmparse.py',856),
  ('asm -> SBC A COMMA A','asm',4,'p_SBCADD','asmparse.py',857),
  ('asm -> SBC A COMMA reg8_hl','asm',4,'p_SBCADD','asmparse.py',858),
  ('asm -> SBC HL COMMA SP','asm',4,'p_SBCADD','asmparse.py',859),
  ('asm -> SBC HL COMMA BC','asm',4,'p_SBCADD','asmparse.py',860),
  ('asm -> SBC HL COMMA DE','asm',4,'p_SBCADD','asmparse.py',861),
  ('asm -> SBC HL COMMA HL','asm',4,'p_SBCADD','asmparse.py',862),
  ('asm -> ADD A COMMA reg8','asm',4,'p_SBCADD','asmparse.py',863),
  ('asm -> ADD A COMMA reg8i','asm',4,'p_SBCADD','asmparse.py',864),
  ('asm -> ADD A COMMA A','asm',4,'p_SBCADD','asmparse.py',865),
  ('asm -> ADD A COMMA reg8_hl','asm',4,'p_SBCADD','asmparse.py',866),
  ('asm -> ADC A COMMA reg8','asm',4,'p_SBCADD','asmparse.py',867),
  ('asm -> ADC A COMMA reg8i','asm',4,'p_SBCADD','asmparse.py',868),
  ('asm -> ADC A COMMA A','asm',4,'p_SBCADD','asmparse.py',869),
  ('asm -> ADC A COMMA reg8_hl','asm',4,'p_SBCADD','asmparse.py',870),
  ('asm -> ADD HL COMMA BC','asm',4,'p_SBCADD','asmparse.py',871),
  ('asm -> ADD HL COMMA DE','asm',4,'p_SBCADD','asmparse.py',872),
  ('asm -> ADD HL COMMA HL','asm',4,'p_SBCADD','asmparse.py',873),
  ('asm -> ADD HL COMMA SP','asm',4,'p_SBCADD','asmparse.py',874),
  ('asm -> ADC HL COMMA BC','asm',4,'p_SBCADD','asmparse.py',875),
  ('asm -> ADC HL COMMA DE','asm',4,'p_SBCADD','asmparse.py',876),
  ('asm -> ADC HL COMMA HL','asm',4,'p_SBCADD','asmparse.py',877),
  ('asm -> ADC HL COMMA SP','asm',4,'p_SBCADD','asmparse.py',878),
  ('asm -> ADD reg16i COMMA BC','asm',4,'p_SBCADD','asmparse.py',879),
  ('asm -> ADD reg16i COMMA DE','asm',4,'p_SBCADD','asmparse.py',880),
  ('asm -> ADD reg16i COMMA HL','asm',4,'p_SBCADD','asmparse.py',881),
  ('asm -> ADD reg16i COMMA SP','asm',4,'p_SBCADD','asmparse.py',882),
  ('asm -> ADD reg16i COMMA reg16i','asm',4,'p_SBCADD','asmparse.py',883),
  ('asm -> SBC A COMMA expr','asm',4,'p_arith_A_expr','asmparse.py',889),
  ('asm -> SBC A COMMA pexpr','asm',4,'p_arith_A_expr','asmparse.py',890),
  ('asm -> ADD A COMMA expr','asm',4,'p_arith_A_expr','asmparse.py',891),
  ('asm -> ADD A COMMA pexpr','asm',4,'p_arith_A_expr','asmparse.py',892),
  ('asm -> ADC A COMMA expr','asm',4,'p_arith_A_expr','asmparse.py',893),
  ('asm -> ADC A COMMA pexpr','asm',4,'p_arith_A_expr','asmparse.py',894),
  ('asm -> SBC A COMMA reg8_I','asm',4,'p_arith_A_regI','asmparse.py',900),
  ('asm -> ADD A COMMA reg8_I','asm',4,'p_arith_A_regI','asmparse.py',901),
  ('asm -> ADC A COMMA reg8_I','asm',4,'p_arith_A_regI','asmparse.py',902),
  ('asm -> bitwiseop reg8','asm',2,'p_bitwiseop_reg','asmparse.py',908),
  ('asm -> bitwiseop reg8i','asm',2,'p_bitwiseop_reg','asmparse.py',909),
  ('asm -> bitwiseop A','asm',2,'p_bitwiseop_reg','asmparse.py',910),
  ('asm -> bitwiseop reg8_hl','asm',2,'p_bitwiseop_reg','asmparse.py',911),
  ('asm -> bitwiseop reg8_I','asm',2,'p_bitwiseop_regI','asmparse.py',917),
  ('asm -> bitwiseop expr','asm',2,'p_bitwise_expr','asmparse.py',923),
  ('asm -> bitwiseop pexpr','asm',2,'p_bitwise_expr','asmparse.py',924),
  ('bitwiseop -> OR','bitwiseop',1,'p_bitwise','asmparse.py',930),
  ('bitwiseop -> AND','bitwiseop',1,'p_bitwise','asmparse.py',931),
  ('bitwiseop -> XOR','bitwiseop',1,'p_bitwise','asmparse.py',932),
  ('bitwiseop -> SUB','bitwiseop',1,'p_bitwise','asmparse.py',933),
  ('bitwiseop -> CP','bitwiseop',1,'p_bitwise','asmparse.py',934),
  ('asm -> PUSH AF','asm',2,'p_PUSH_POP','asmparse.py',940),
  ('asm -> PUSH reg16','asm',2,'p_PUSH_POP','asmparse.py',941),
  ('asm -> POP AF','asm',2,'p_PUSH_POP','asmparse.py',942),
  ('asm -> POP reg16','asm',2,'p_PUSH_POP','asmparse.py',943),
  ('asm -> LD pexpr COMMA A','asm',4,'p_LD_addr_reg','asmparse.py',949),
  ('asm -> LD pexpr COMMA reg16','asm',4,'p_LD_addr_reg','asmparse.py',950),
  ('asm -> LD pexpr COMMA SP','asm',4,'p_LD_addr_reg','asmparse.py',951),
  ('asm -> LD A COMMA pexpr','asm',4,'p_LD_reg_addr','asmparse.py',957),
  ('asm -> LD reg16 COMMA pexpr','asm',4,'p_LD_reg_addr','asmparse.py',958),
  ('asm -> LD SP COMMA pexpr','asm',4,'p_LD_reg_addr','asmparse.py',959),
  ('asm -> rotation reg8','asm',2,'p_ROTATE','asmparse.py',965),
  ('asm -> rotation reg8_hl','asm',2,'p_ROTATE','asmparse.py',966),
  ('asm -> rotation A','asm',2,'p_ROTATE','asmparse.py',967),
  ('asm -> rotation reg8_I','asm',2,'p_ROTATE_ix','asmparse.py',973),
  ('asm -> bitop expr COMMA A','asm',4,'p_BIT','asmparse.py',979),
  ('asm -> bitop pexpr COMMA A','asm',4,'p_BIT','asmparse.py',980),
  ('asm -> bitop expr COMMA reg8','asm',4,'p_BIT','asmparse.py',981),
  ('asm -> bitop pexpr COMMA reg8','asm',4,'p_BIT','asmparse.py',982),
  ('asm -> bitop expr COMMA reg8_hl','asm',4,'p_BIT','asmparse.py',983),
  ('asm -> bitop pexpr COMMA reg8_hl','asm',4,'p_BIT','asmparse.py',984),
  ('asm -> bitop expr COMMA reg8_I','asm',4,'p_BIT_ix','asmparse.py',994),
  ('asm -> bitop pexpr COMMA reg8_I','asm',4,'p_BIT_ix','asmparse.py',995),
  ('bitop -> BIT','bitop',1,'p_bitop','asmparse.py',1005),
  ('bitop -> RES','bitop',1,'p_bitop','asmparse.py',1006),
  ('bitop -> SET','bitop',1,'p_bitop','asmparse.py',1007),
  ('rotation -> RR','rotation',1,'p_rotation','asmparse.py',1013),
  ('rotation -> RL','rotation',1,'p_rotation','asmparse.py',1014),
  ('rotation -> RRC','rotation',1,'p_rotation','asmparse.py',1015),
  ('rotation -> RLC','rotation',1,'p_rotation','asmparse.py',1016),
  ('rotation -> SLA','rotation',1,'p_rotation','asmparse.py',1017),
  ('rotation -> SLL','rotation',1,'p_rotation','asmparse.py',1018),
  ('rotation -> SRA','rotation',1,'p_rotation','asmparse.py',1019),
  ('rotation -> SRL','rotation',1,'p_rotation','asmparse.py',1020),
  ('inc_reg -> SP','inc_reg',1,'p_reg_inc','asmparse.py',1026),
  ('inc_reg -> reg8','inc_reg',1,'p_reg_inc','asmparse.py',1027),
  ('inc_reg -> reg16','inc_reg',1,'p_reg_inc','asmparse.py',1028),
  ('inc_reg -> reg8_hl','inc_reg',1,'p_reg_inc','asmparse.py',1029),
  ('inc_reg -> A','inc_reg',1,'p_reg_inc','asmparse.py',1030),
  ('inc_reg -> reg8i','inc_reg',1,'p_reg_inc','asmparse.py',1031),
  ('reg8 -> H','reg8',1,'p_reg8','asmparse.py',1037),
  ('reg8 -> L','reg8',1,'p_reg8','asmparse.py',1038),
  ('reg8 -> regBCDE','reg8',1,'p_reg8','asmparse.py',1039),
  ('regBCDE -> B','regBCDE',1,'p_regBCDE','asmparse.py',1045),
  ('regBCDE -> C','regBCDE',1,'p_regBCDE','asmparse.py',1046),
  ('regBCDE -> D','regBCDE',1,'p_regBCDE','asmparse.py',1047),
  ('regBCDE -> E','regBCDE',1,'p_regBCDE','asmparse.py',1048),
  ('reg8i -> IXH','reg8i',1,'p_reg8i','asmparse.py',1054),
  ('reg8i -> IXL','reg8i',1,'p_reg8i','asmparse.py',1055),
  ('reg8i -> IYH','reg8i',1,'p_reg8i','asmparse.py',1056),
  ('reg8i -> IYL','reg8i',1,'p_reg8i','asmparse.py',1057),
  ('reg16 -> BC','reg16',1,'p_reg16','asmparse.py',1063),
  ('reg16 -> DE','reg16',1,'p_reg16','asmparse.py',1064),
  ('reg16 -> HL','reg16',1,'p_reg16','asmparse.py',1065),
  ('reg16 -> reg16i','reg16',1,'p_reg16','asmparse.py',1066),
  ('reg16i -> IX','reg16i',1,'p_reg16i','asmparse.py',1072),
  ('reg16i -> IY','reg16i',1,'p_reg16i','asmparse.py',1073),
  ('asm -> JP jp_flags COMMA expr','asm',4,'p_jp','asmparse.py',1079),
  ('asm -> JP jp_flags COMMA pexpr','asm',4,'p_jp','asmparse.py',1080),
  ('asm -> CALL jp_flags COMMA expr','asm',4,'p_jp','asmparse.py',1081),
  ('asm -> CALL jp_flags COMMA pexpr','asm',4,'p_jp','asmparse.py',1082),
  ('asm -> RET jp_flags','asm',2,'p_ret','asmparse.py',1088),
  ('jp_flags -> P','jp_flags',1,'p_jpflags_other','asmparse.py',1094),
  ('jp_flags -> M','jp_flags',1,'p_jpflags_other','asmparse.py',1095),
  ('jp_flags -> PO','jp_flags',1,'p_jpflags_other','asmparse.py',1096),
  ('jp_flags -> PE','jp_flags',1,'p_jpflags_other','asmparse.py',1097),
  ('jp_flags -> jr_flags','jp_flags',1,'p_jpflags_other','asmparse.py',1098),
  ('asm -> JR jr_flags COMMA expr','asm',4,'p_jr','asmparse.py',1104),
  ('asm -> JR jr_flags COMMA pexpr','asm',4,'p_jr','asmparse.py',1105),
  ('jr_flags -> Z','jr_flags',1,'p_jr_flags','asmparse.py',1112),
  ('jr_flags -> C','jr_flags',1,'p_jr_flags','asmparse.py',1113),
  ('jr_flags -> NZ','jr_flags',1,'p_jr_flags','asmparse.py',1114),
  ('jr_flags -> NC','jr_flags',1,'p_jr_flags','asmparse.py',1115),
  ('asm -> JP expr','asm',2,'p_jrjp','asmparse.py',1121),
  ('asm -> JR expr','asm',2,'p_jrjp','asmparse.py',1122),
  ('asm -> CALL expr','asm',2,'p_jrjp','asmparse.py',1123),
  ('asm -> DJNZ expr','asm',2,'p_jrjp','asmparse.py',1124),
  ('asm -> JP pexpr','asm',2,'p_jrjp','asmparse.py',1125),
  ('asm -> JR pexpr','asm',2,'p_jrjp','asmparse.py',1126),
  ('asm -> CALL pexpr','asm',2,'p_jrjp','asmparse.py',1127),
  ('asm -> DJNZ pexpr','asm',2,'p_jrjp','asmparse.py',1128),
  ('asm -> RST expr','asm',2,'p_rst','asmparse.py',1140),
  ('asm -> IM expr','asm',2,'p_im','asmparse.py',1151),
  ('asm -> IN A COMMA LP C RP','asm',6,'p_in','asmparse.py',1161),
  ('asm -> IN reg8 COMMA LP C RP','asm',6,'p_in','asmparse.py',1162),
  ('asm -> OUT LP C RP COMMA A','asm',6,'p_out','asmparse.py',1168),
  ('asm -> OUT LP C RP COMMA reg8','asm',6,'p_out','asmparse.py',1169),
  ('asm -> IN A COMMA pexpr','asm',4,'p_in_expr','asmparse.py',1175),
  ('asm -> OUT pexpr COMMA A','asm',4,'p_out_expr','asmparse.py',1181),
  ('asm -> NOP','asm',1,'p_single','asmparse.py',1187),
  ('asm -> EXX','asm',1,'p_single','asmparse.py',1188),
  ('asm -> CCF','asm',1,'p_single','asmparse.py',1189),
  ('asm -> SCF','asm',1,'p_single','asmparse.py',1190),
  ('asm -> LDIR','asm',1,'p_single','asmparse.py',1191),
  ('asm -> LDI','asm',1,'p_single','asmparse.py',1192),
  ('asm -> LDDR','asm',1,'p_single','asmparse.py',1193),
  ('asm -> LDD','asm',1,'p_single','asmparse.py',1194),
  ('asm -> CPIR','asm',1,'p_single','asmparse.py',1195),
  ('asm -> CPI','asm',1,'p_single','asmparse.py',1196),
  ('asm -> CPDR','asm',1,'p_single','asmparse.py',1197),
  ('asm -> CPD','asm',1,'p_single','asmparse.py',1198),
  ('asm -> DAA','asm',1,'p_single','asmparse.py',1199),
  ('asm -> NEG','asm',1,'p_single','asmparse.py',1200),
  ('asm -> CPL','asm',1,'p_single','asmparse.py',1201),
  ('asm -> HALT','asm',1,'p_single','asmparse.py',1202),
  ('asm -> EI','asm',1,'p_single','asmparse.py',1203),
  ('asm -> DI','asm',1,'p_single','asmparse.py',1204),
  ('asm -> OUTD','asm',1,'p_single','asmparse.py',1205),
  ('asm -> OUTI','asm',1,'p_single','asmparse.py',1206),
  ('asm -> OTDR','asm',1,'p_single','asmparse.py',1207),
  ('asm -> OTIR','asm',1,'p_single','asmparse.py',1208),
  ('asm -> IND','asm',1,'p_single','asmparse.py',1209),
  ('asm -> INI','asm',1,'p_single','asmparse.py',1210),
  ('asm -> INDR','asm',1,'p_single','asmparse.py',1211),
  ('asm -> INIR','asm',1,'p_single','asmparse.py',1212),
  ('asm -> RET','asm',1,'p_single','asmparse.py',1213),
  ('asm -> RETI','asm',1,'p_single','asmparse.py',1214),
  ('asm -> RETN','asm',1,'p_single','asmparse.py',1215),
  ('asm -> RLA','asm',1,'p_single','asmparse.py',1216),
  ('asm -> RLCA','asm',1,'p_single','asmparse.py',1217),
  ('asm -> RRA','asm',1,'p_single','asmparse.py',1218),
  ('asm -> RRCA','asm',1,'p_single','asmparse.py',1219),
  ('asm -> RLD','asm',1,'p_single','asmparse.py',1220),
  ('asm -> RRD','asm',1,'p_single','asmparse.py',1221),
  ('expr -> expr PLUS expr','expr',3,'p_expr_div_expr','asmparse.py',1227),
  ('expr -> expr MINUS expr','expr',3,'p_expr_div_expr','asmparse.py',1228),
  ('expr -> expr MUL expr','expr',3,'p_expr_div_expr','asmparse.py',1229),
  ('expr -> expr DIV expr','expr',3,'p_expr_div_expr','asmparse.py',1230),
  ('expr -> expr POW expr','expr',3,'p_expr_div_expr','asmparse.py',1231),
  ('expr -> pexpr PLUS expr','expr',3,'p_expr_div_expr','asmparse.py',1232),
  ('expr -> pexpr MINUS expr','expr',3,'p_expr_div_expr','asmparse.py',1233),
  ('expr -> pexpr MUL expr','expr',3,'p_expr_div_expr','asmparse.py',1234),
  ('expr -> pexpr DIV expr','expr',3,'p_expr_div_expr','asmparse.py',1235),
  ('expr -> pexpr POW expr','expr',3,'p_expr_div_expr','asmparse.py',1236),
  ('expr -> expr PLUS pexpr','expr',3,'p_expr_div_expr','asmparse.py',1237),
  ('expr -> expr MINUS pexpr','expr',3,'p_expr_div_expr','asmparse.py',1238),
  ('expr -> expr MUL pexpr','expr',3,'p_expr_div_expr','asmparse.py',1239),
  ('expr -> expr DIV pexpr','expr',3,'p_expr_div_expr','asmparse.py',1240),
  ('expr -> expr POW pexpr','expr',3,'p_expr_div_expr','asmparse.py',1241),
  ('pexpr -> LP expr RP','pexpr',3,'p_expr_lprp','asmparse.py',1247),
  ('expr -> MINUS expr','expr',2,'p_expr_uminus','asmparse.py',1253),
  ('expr -> INTEGER','expr',1,'p_expr_int','asmparse.py',1259),
  ('expr -> ID','expr',1,'p_expr_label','asmparse.py',1265),
  ('expr -> ADDR','expr',1,'p_expr_addr','asmparse.py',1271),
  ('asm -> preproc_line','asm',1,'p_preprocessor_line','asmparse.py',1278),
  ('preproc_line -> _LINE INTEGER','preproc_line',2,'p_preprocessor_line_line','asmparse.py',1284),
  ('preproc_line -> _LINE INTEGER STRING','preproc_line',3,'p_preprocessor_line_line_file','asmparse.py',1290),
  ('preproc_line -> _INIT ID','preproc_line',2,'p_preproc_line_init','asmparse.py',1299),
]
