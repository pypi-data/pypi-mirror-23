
# zxbasmtab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftRSHIFTLSHIFTBANDBORBXORleftPLUSMINUSleftMULDIVMODrightPOWrightUMINUSA ADC ADD ADDR AF ALIGN AND APO B BAND BC BIT BOR BXOR C CALL CCF COMMA CP CPD CPDR CPI CPIR CPL D DAA DE DEC DEFAULT DEFB DEFS DEFW DI DIV DJNZ E EI END ENDP EQU EX EXX H HALT HL I ID IM IN INC INCBIN IND INDR INI INIR INTEGER IX IXH IXL IY IYH IYL JP JR L LABEL LD LDD LDDR LDI LDIR LOCAL LP LPP LSHIFT M MINUS MOD MUL NAMESPACE NC NEG NEWLINE NOP NZ OR ORG OTDR OTIR OUT OUTD OUTI P PE PLUS PO POP POW PROC PUSH R RES RET RETI RETN RL RLA RLC RLCA RLD RP RPP RR RRA RRC RRCA RRD RSHIFT RST SBC SCF SET SLA SLL SP SRA SRL STRING SUB UMINUS XOR Z _INIT _LINE start : program\n              | program endline\n     endline : END NEWLINE\n     endline : END expr NEWLINE\n                | END pexpr NEWLINE\n     program : line\n     program : program line\n     line : ID EQU expr NEWLINE\n             | ID EQU pexpr NEWLINE\n     line : LABEL NEWLINE\n     line : LABEL asm NEWLINE\n     line : asm NEWLINE\n     line : NEWLINE\n     asm : LD reg8 COMMA reg8_hl\n            | LD reg8_hl COMMA reg8\n            | LD reg8 COMMA reg8\n            | LD SP COMMA HL\n            | LD SP COMMA reg16i\n            | LD A COMMA reg8\n            | LD reg8 COMMA A\n            | LD reg8_hl COMMA A\n            | LD A COMMA reg8_hl\n            | LD A COMMA A\n            | LD A COMMA I\n            | LD I COMMA A\n            | LD A COMMA R\n            | LD R COMMA A\n            | LD A COMMA reg8i\n            | LD reg8i COMMA A\n            | LD reg8 COMMA reg8i\n            | LD reg8i COMMA regBCDE\n            | LD reg8i COMMA reg8i\n     asm : LD A COMMA LP BC RP\n            | LD A COMMA LP DE RP\n            | LD LP BC RP COMMA A\n            | LD LP DE RP COMMA A\n     asm : PROC\n     asm : ENDP\n     asm : LOCAL id_list\n     id_list : ID\n     id_list : id_list COMMA ID\n     asm : DEFB number_list\n            | DEFB STRING\n     asm : DEFS number_list\n     asm : DEFW number_list\n     number_list : expr\n                    | pexpr\n     number_list : number_list COMMA expr\n                    | number_list COMMA pexpr\n     asm : LD reg8_I COMMA reg8\n            | LD reg8_I COMMA A\n     asm : LD reg8 COMMA reg8_I\n            | LD A COMMA reg8_I\n     reg8_hl : LP HL RP\n        reg8_I : LP IX PLUS expr RP\n               | LP IX MINUS expr RP\n               | LP IY PLUS expr RP\n               | LP IY MINUS expr RP\n               | LP IX PLUS pexpr RP\n               | LP IX MINUS pexpr RP\n               | LP IY PLUS pexpr RP\n               | LP IY MINUS pexpr RP\n     asm : EX AF COMMA AF APO\n     asm : EX DE COMMA HL\n     asm : ORG expr\n            | ORG pexpr\n     asm : NAMESPACE DEFAULT\n            | NAMESPACE ID\n     asm : ALIGN expr\n            | ALIGN pexpr\n     asm : INCBIN STRING\n     asm : EX LP SP RP COMMA reg16i\n            | EX LP SP RP COMMA HL\n     asm : INC inc_reg\n            | DEC inc_reg\n     asm : INC reg8_I\n            | DEC reg8_I\n     asm : LD reg8 COMMA expr\n            | LD reg8 COMMA pexpr\n            | LD reg16 COMMA expr\n            | LD reg8_hl COMMA expr\n            | LD A COMMA expr\n            | LD SP COMMA expr\n            | LD reg8i COMMA expr\n     asm : LD reg8_I COMMA expr\n     asm : JP reg8_hl\n            | JP LP reg16i RP\n     asm : SBC A COMMA reg8\n            | SBC A COMMA reg8i\n            | SBC A COMMA A\n            | SBC A COMMA reg8_hl\n            | SBC HL COMMA SP\n            | SBC HL COMMA BC\n            | SBC HL COMMA DE\n            | SBC HL COMMA HL\n            | ADD A COMMA reg8\n            | ADD A COMMA reg8i\n            | ADD A COMMA A\n            | ADD A COMMA reg8_hl\n            | ADC A COMMA reg8\n            | ADC A COMMA reg8i\n            | ADC A COMMA A\n            | ADC A COMMA reg8_hl\n            | ADD HL COMMA BC\n            | ADD HL COMMA DE\n            | ADD HL COMMA HL\n            | ADD HL COMMA SP\n            | ADC HL COMMA BC\n            | ADC HL COMMA DE\n            | ADC HL COMMA HL\n            | ADC HL COMMA SP\n            | ADD reg16i COMMA BC\n            | ADD reg16i COMMA DE\n            | ADD reg16i COMMA HL\n            | ADD reg16i COMMA SP\n            | ADD reg16i COMMA reg16i\n     asm : SBC A COMMA expr\n            | SBC A COMMA pexpr\n            | ADD A COMMA expr\n            | ADD A COMMA pexpr\n            | ADC A COMMA expr\n            | ADC A COMMA pexpr\n     asm : SBC A COMMA reg8_I\n            | ADD A COMMA reg8_I\n            | ADC A COMMA reg8_I\n     asm : bitwiseop reg8\n            | bitwiseop reg8i\n            | bitwiseop A\n            | bitwiseop reg8_hl\n     asm : bitwiseop reg8_I\n     asm : bitwiseop expr\n            | bitwiseop pexpr\n     bitwiseop : OR\n              | AND\n              | XOR\n              | SUB\n              | CP\n     asm : PUSH AF\n            | PUSH reg16\n            | POP AF\n            | POP reg16\n     asm : LD pexpr COMMA A\n            | LD pexpr COMMA reg16\n            | LD pexpr COMMA SP\n     asm : LD A COMMA pexpr\n            | LD reg16 COMMA pexpr\n            | LD SP COMMA pexpr\n     asm : rotation reg8\n            | rotation reg8_hl\n            | rotation A\n     asm : rotation reg8_I\n     asm : bitop expr COMMA A\n            | bitop pexpr COMMA A\n            | bitop expr COMMA reg8\n            | bitop pexpr COMMA reg8\n            | bitop expr COMMA reg8_hl\n            | bitop pexpr COMMA reg8_hl\n     asm : bitop expr COMMA reg8_I\n            | bitop pexpr COMMA reg8_I\n     bitop : BIT\n              | RES\n              | SET\n     rotation : RR\n                 | RL\n                 | RRC\n                 | RLC\n                 | SLA\n                 | SLL\n                 | SRA\n                 | SRL\n     inc_reg : SP\n                | reg8\n                | reg16\n                | reg8_hl\n                | A\n                | reg8i\n     reg8 : H\n             | L\n             | regBCDE\n     regBCDE : B\n                | C\n                | D\n                | E\n     reg8i : IXH\n              | IXL\n              | IYH\n              | IYL\n     reg16 : BC\n             | DE\n             | HL\n             | reg16i\n     reg16i : IX\n               | IY\n     asm : JP jp_flags COMMA expr\n            | JP jp_flags COMMA pexpr\n            | CALL jp_flags COMMA expr\n            | CALL jp_flags COMMA pexpr\n     asm : RET jp_flags\n     jp_flags : P\n                 | M\n                 | PO\n                 | PE\n                 | jr_flags\n     asm : JR jr_flags COMMA expr\n            | JR jr_flags COMMA pexpr\n     jr_flags : Z\n                 | C\n                 | NZ\n                 | NC\n     asm : JP expr\n            | JR expr\n            | CALL expr\n            | DJNZ expr\n            | JP pexpr\n            | JR pexpr\n            | CALL pexpr\n            | DJNZ pexpr\n     asm : RST expr\n     asm : IM expr\n        asm : IN A COMMA LP C RP\n            | IN reg8 COMMA LP C RP\n        asm : OUT LP C RP COMMA A\n            | OUT LP C RP COMMA reg8\n     asm : IN A COMMA pexpr\n     asm : OUT pexpr COMMA A\n     asm : NOP\n            | EXX\n            | CCF\n            | SCF\n            | LDIR\n            | LDI\n            | LDDR\n            | LDD\n            | CPIR\n            | CPI\n            | CPDR\n            | CPD\n            | DAA\n            | NEG\n            | CPL\n            | HALT\n            | EI\n            | DI\n            | OUTD\n            | OUTI\n            | OTDR\n            | OTIR\n            | IND\n            | INI\n            | INDR\n            | INIR\n            | RET\n            | RETI\n            | RETN\n            | RLA\n            | RLCA\n            | RRA\n            | RRCA\n            | RLD\n            | RRD\n     expr : expr BAND expr\n             | expr BOR expr\n             | expr BXOR expr\n             | expr PLUS expr\n             | expr MINUS expr\n             | expr MUL expr\n             | expr DIV expr\n             | expr MOD expr\n             | expr POW expr\n             | expr LSHIFT expr\n             | expr RSHIFT expr\n             | pexpr BAND expr\n             | pexpr BOR expr\n             | pexpr BXOR expr\n             | pexpr PLUS expr\n             | pexpr MINUS expr\n             | pexpr MUL expr\n             | pexpr DIV expr\n             | pexpr MOD expr\n             | pexpr POW expr\n             | pexpr LSHIFT expr\n             | pexpr RSHIFT expr\n             | expr BAND pexpr\n             | expr BOR pexpr\n             | expr BXOR pexpr\n             | expr PLUS pexpr\n             | expr MINUS pexpr\n             | expr MUL pexpr\n             | expr DIV pexpr\n             | expr MOD pexpr\n             | expr POW pexpr\n             | expr LSHIFT pexpr\n             | expr RSHIFT pexpr\n             | pexpr BAND pexpr\n             | pexpr BOR pexpr\n             | pexpr BXOR pexpr\n             | pexpr PLUS pexpr\n             | pexpr MINUS pexpr\n             | pexpr MUL pexpr\n             | pexpr DIV pexpr\n             | pexpr MOD pexpr\n             | pexpr POW pexpr\n             | pexpr LSHIFT pexpr\n             | pexpr RSHIFT pexpr\n     pexpr : LP expr RP\n     expr : MINUS expr %prec UMINUS\n     expr : INTEGER\n     expr : ID\n     expr : LPP expr RPP\n     expr : ADDR\n     asm : preproc_line\n     preproc_line : _LINE INTEGER\n     preproc_line : _LINE INTEGER STRING\n     preproc_line : _INIT ID\n    '
    
_lr_action_items = {'MOD':([106,108,110,117,118,137,138,146,147,148,149,153,155,159,160,167,171,182,186,191,195,199,200,201,224,240,252,255,256,257,259,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,368,371,374,375,382,384,387,388,389,390,392,393,400,402,412,414,416,418,419,425,427,430,432,439,441,452,453,454,455,456,457,458,459,],[-308,-310,226,-307,241,226,241,226,241,226,241,226,241,226,241,226,241,226,241,226,241,226,226,241,226,-306,226,226,241,226,241,-305,-268,-290,-267,-289,-269,-291,226,241,226,241,226,241,226,241,226,241,226,241,226,241,-266,-288,-279,-301,-278,-300,-280,-302,226,241,226,241,226,241,226,241,226,241,226,241,226,241,-277,-299,-309,226,241,226,241,226,241,226,241,226,241,226,241,226,241,226,241,226,226,241,226,241,226,241,226,226,226,241,226,241,226,241,226,241,]),'A':([1,4,12,16,18,21,24,36,38,45,46,48,51,56,62,71,73,77,78,81,87,88,223,253,254,262,265,272,273,274,278,279,281,282,283,284,451,462,463,],[-167,-137,94,-133,-166,107,131,152,-165,-169,-134,-170,158,-135,172,-164,-136,-163,-168,198,202,172,292,345,349,366,380,398,413,417,422,423,431,436,440,444,468,480,481,]),'OR':([0,31,40,57,79,143,145,162,266,353,354,],[16,16,-6,16,-13,-7,-12,-10,-11,-8,-9,]),'_LINE':([0,31,40,57,79,143,145,162,266,353,354,],[2,2,-6,2,-13,-7,-12,-10,-11,-8,-9,]),'IY':([22,36,60,62,87,88,111,135,175,192,205,261,280,282,369,406,464,],[129,129,129,129,129,129,237,237,237,129,237,129,129,129,237,237,129,]),'LDDR':([0,31,40,57,79,143,145,162,266,353,354,],[3,3,-6,3,-13,-7,-12,-10,-11,-8,-9,]),'DEFW':([0,31,40,57,79,143,145,162,266,353,354,],[44,44,-6,44,-13,-7,-12,-10,-11,-8,-9,]),'CP':([0,31,40,57,79,143,145,162,266,353,354,],[4,4,-6,4,-13,-7,-12,-10,-11,-8,-9,]),'NOP':([0,31,40,57,79,143,145,162,266,353,354,],[33,33,-6,33,-13,-7,-12,-10,-11,-8,-9,]),'ADDR':([4,16,21,27,29,34,35,43,44,46,52,55,56,61,64,65,68,69,73,82,85,104,111,115,122,136,139,142,192,205,226,227,228,229,230,231,232,233,234,235,236,241,242,243,244,245,246,247,248,249,250,251,262,263,265,267,268,270,272,273,274,275,280,281,283,284,290,317,318,319,320,369,406,],[-137,-133,108,108,-160,108,108,108,108,-134,-162,108,-135,108,-161,108,108,108,-136,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'Z':([61,65,69,80,],[166,166,166,166,]),'IYL':([4,16,21,46,56,62,73,87,88,262,265,272,273,281,284,],[-137,-133,112,-134,-135,112,-136,112,112,112,112,112,112,112,112,]),'END':([31,40,79,143,145,162,266,353,354,],[142,-6,-13,-7,-12,-10,-11,-8,-9,]),'LP':([1,4,16,18,19,21,24,27,29,34,35,38,43,44,45,46,48,52,55,56,61,62,64,65,68,69,71,73,77,78,82,85,87,88,90,104,111,115,122,136,139,142,192,205,221,222,226,227,228,229,230,231,232,233,234,235,236,241,242,243,244,245,246,247,248,249,250,251,253,254,262,263,265,267,268,270,272,273,274,275,280,281,283,284,290,317,318,319,320,369,406,],[-167,-137,-133,-166,104,111,135,136,-160,136,136,-165,136,136,-169,-134,-170,-162,136,-135,136,175,-161,136,136,192,-164,-136,-163,-168,136,136,205,175,216,136,136,136,136,136,136,136,136,136,290,291,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,135,135,369,136,369,136,136,136,369,406,136,136,136,111,136,136,136,136,136,136,136,136,136,]),'LDI':([0,31,40,57,79,143,145,162,266,353,354,],[6,6,-6,6,-13,-7,-12,-10,-11,-8,-9,]),'SUB':([0,31,40,57,79,143,145,162,266,353,354,],[73,73,-6,73,-13,-7,-12,-10,-11,-8,-9,]),'INDR':([0,31,40,57,79,143,145,162,266,353,354,],[8,8,-6,8,-13,-7,-12,-10,-11,-8,-9,]),'R':([87,273,],[206,407,]),'CPDR':([0,31,40,57,79,143,145,162,266,353,354,],[9,9,-6,9,-13,-7,-12,-10,-11,-8,-9,]),'INIR':([0,31,40,57,79,143,145,162,266,353,354,],[10,10,-6,10,-13,-7,-12,-10,-11,-8,-9,]),'NC':([61,65,69,80,],[170,170,170,170,]),'IND':([0,31,40,57,79,143,145,162,266,353,354,],[11,11,-6,11,-13,-7,-12,-10,-11,-8,-9,]),'IN':([0,31,40,57,79,143,145,162,266,353,354,],[12,12,-6,12,-13,-7,-12,-10,-11,-8,-9,]),'RETN':([0,31,40,57,79,143,145,162,266,353,354,],[14,14,-6,14,-13,-7,-12,-10,-11,-8,-9,]),'BC':([22,60,62,87,88,205,260,261,264,271,282,406,],[126,126,126,126,126,277,360,363,378,396,126,461,]),'EI':([0,31,40,57,79,143,145,162,266,353,354,],[15,15,-6,15,-13,-7,-12,-10,-11,-8,-9,]),'SLA':([0,31,40,57,79,143,145,162,266,353,354,],[1,1,-6,1,-13,-7,-12,-10,-11,-8,-9,]),'OTDR':([0,31,40,57,79,143,145,162,266,353,354,],[17,17,-6,17,-13,-7,-12,-10,-11,-8,-9,]),'IYH':([4,16,21,46,56,62,73,87,88,262,265,272,273,281,284,],[-137,-133,114,-134,-135,114,-136,114,114,114,114,114,114,114,114,]),'RLC':([0,31,40,57,79,143,145,162,266,353,354,],[18,18,-6,18,-13,-7,-12,-10,-11,-8,-9,]),'COMMA':([94,95,96,97,98,99,100,101,102,103,106,108,112,113,114,117,121,123,124,126,127,128,129,137,138,150,151,152,153,154,155,156,157,158,165,166,168,169,170,181,183,184,185,187,188,189,194,197,198,202,203,204,206,207,208,209,210,211,212,215,217,218,219,240,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,374,375,420,421,446,448,470,471,472,473,474,475,476,477,],[221,-178,222,-182,-180,-179,-181,-177,-183,223,-308,-310,-187,-185,-186,-307,-184,-190,-189,-188,-192,-191,-193,253,254,260,261,262,-46,263,-47,263,264,265,-208,-206,267,-207,-209,-199,-203,-200,268,-202,-201,263,270,271,272,273,274,275,278,279,280,281,282,283,284,285,287,288,-40,-306,-305,451,-268,-290,-267,-289,-269,-291,-270,-292,-265,-287,-271,-293,-263,-285,-261,-283,-262,-284,-264,-286,-266,-288,-54,-279,-301,-278,-300,-280,-302,-281,-303,-276,-298,-282,-304,-274,-296,-272,-294,-273,-295,-275,-297,-277,-299,-309,-48,-49,462,463,464,-41,-57,-61,-58,-62,-55,-59,-56,-60,]),'PE':([65,69,80,],[187,187,187,]),'OUT':([0,31,40,57,79,143,145,162,266,353,354,],[19,19,-6,19,-13,-7,-12,-10,-11,-8,-9,]),'INI':([0,31,40,57,79,143,145,162,266,353,354,],[26,26,-6,26,-13,-7,-12,-10,-11,-8,-9,]),'$end':([23,31,40,79,143,144,145,162,258,266,353,354,355,356,],[0,-1,-6,-13,-7,-2,-12,-10,-3,-11,-8,-9,-4,-5,]),'NEG':([0,31,40,57,79,143,145,162,266,353,354,],[74,74,-6,74,-13,-7,-12,-10,-11,-8,-9,]),'AF':([22,60,90,287,],[130,164,217,447,]),'OUTI':([0,31,40,57,79,143,145,162,266,353,354,],[59,59,-6,59,-13,-7,-12,-10,-11,-8,-9,]),'HL':([22,36,51,60,62,81,87,88,111,135,175,192,205,260,261,264,271,280,282,285,369,406,464,],[123,150,157,123,123,197,123,123,239,239,239,239,239,357,365,376,394,426,123,445,239,239,482,]),'RP':([106,108,117,127,129,224,225,239,240,269,276,277,286,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,449,450,452,453,454,455,456,457,458,459,460,461,],[-308,-310,-307,-192,-193,293,294,321,-306,391,420,421,446,-305,-268,-290,-267,-289,-269,-291,-270,-292,-265,-287,-271,-293,-263,-285,-261,-283,-262,-284,-264,-286,-266,-288,-279,-301,-278,-300,-280,-302,-281,-303,-276,-298,-282,-304,-274,-296,-272,-294,-273,-295,-275,-297,-277,-299,-309,466,467,470,471,472,473,474,475,476,477,478,479,]),'LSHIFT':([106,108,110,117,118,137,138,146,147,148,149,153,155,159,160,167,171,182,186,191,195,199,200,201,224,240,252,255,256,257,259,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,368,371,374,375,382,384,387,388,389,390,392,393,400,402,412,414,416,418,419,425,427,430,432,439,441,452,453,454,455,456,457,458,459,],[-308,-310,229,-307,244,229,244,229,244,229,244,229,244,229,244,229,244,229,244,229,244,229,229,244,229,-306,229,229,244,229,244,-305,-268,-290,-267,-289,-269,-291,-270,-292,-265,-287,-271,-293,-263,-285,-261,-283,-262,-284,-264,-286,-266,-288,-279,-301,-278,-300,-280,-302,-281,-303,-276,-298,-282,-304,-274,-296,-272,-294,-273,-295,-275,-297,-277,-299,-309,229,244,229,244,229,244,229,244,229,244,229,244,229,244,229,244,229,229,244,229,244,229,244,229,229,229,244,229,244,229,244,229,244,]),'L':([1,4,12,16,18,21,24,38,45,46,48,56,62,71,73,77,78,87,88,253,254,262,265,272,273,274,281,283,451,],[-167,-137,95,-133,-166,95,95,-165,-169,-134,-170,-135,95,-164,-136,-163,-168,95,95,95,95,95,95,95,95,95,95,95,95,]),'DI':([0,31,40,57,79,143,145,162,266,353,354,],[25,25,-6,25,-13,-7,-12,-10,-11,-8,-9,]),'RETI':([0,31,40,57,79,143,145,162,266,353,354,],[75,75,-6,75,-13,-7,-12,-10,-11,-8,-9,]),'RPP':([106,108,117,240,252,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,],[-308,-310,-307,-306,344,-305,-268,-290,-267,-289,-269,-291,-270,-292,-265,-287,-271,-293,-263,-285,-261,-283,-262,-284,-264,-286,-266,-288,-279,-301,-278,-300,-280,-302,-281,-303,-276,-298,-282,-304,-274,-296,-272,-294,-273,-295,-275,-297,-277,-299,-309,]),'PLUS':([106,108,110,117,118,137,138,146,147,148,149,153,155,159,160,167,171,182,186,191,195,199,200,201,224,237,238,240,252,255,256,257,259,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,368,371,374,375,382,384,387,388,389,390,392,393,400,402,412,414,416,418,419,425,427,430,432,439,441,452,453,454,455,456,457,458,459,],[-308,-310,235,-307,250,235,250,235,250,235,250,235,250,235,250,235,250,235,250,235,250,235,235,250,235,317,319,-306,235,235,250,235,250,-305,-268,-290,-267,-289,-269,-291,235,250,-265,-287,235,250,235,250,235,250,235,250,-264,-286,-266,-288,-279,-301,-278,-300,-280,-302,235,250,-276,-298,235,250,235,250,235,250,235,250,-275,-297,-277,-299,-309,235,250,235,250,235,250,235,250,235,250,235,250,235,250,235,250,235,235,250,235,250,235,250,235,235,235,250,235,250,235,250,235,250,]),'INTEGER':([2,4,16,21,27,29,34,35,43,44,46,52,55,56,61,64,65,68,69,73,82,85,104,111,115,122,136,139,142,192,205,226,227,228,229,230,231,232,233,234,235,236,241,242,243,244,245,246,247,248,249,250,251,262,263,265,267,268,270,272,273,274,275,280,281,283,284,290,317,318,319,320,369,406,],[92,-137,-133,117,117,-160,117,117,117,117,-134,-162,117,-135,117,-161,117,117,117,-136,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'ID':([0,4,5,16,21,27,29,30,31,34,35,40,43,44,46,52,55,56,61,64,65,68,69,73,79,82,85,91,104,111,115,122,136,139,142,143,145,162,192,205,226,227,228,229,230,231,232,233,234,235,236,241,242,243,244,245,246,247,248,249,250,251,262,263,265,266,267,268,270,272,273,274,275,280,281,283,284,288,290,317,318,319,320,353,354,369,406,],[28,-137,93,-133,106,106,-160,140,28,106,106,-6,106,106,-134,-162,106,-135,106,-161,106,106,106,-136,-13,106,106,219,106,106,106,106,106,106,106,-7,-12,-10,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-11,106,106,106,106,106,106,106,106,106,106,106,448,106,106,106,106,106,-8,-9,106,106,]),'DIV':([106,108,110,117,118,137,138,146,147,148,149,153,155,159,160,167,171,182,186,191,195,199,200,201,224,240,252,255,256,257,259,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,368,371,374,375,382,384,387,388,389,390,392,393,400,402,412,414,416,418,419,425,427,430,432,439,441,452,453,454,455,456,457,458,459,],[-308,-310,227,-307,242,227,242,227,242,227,242,227,242,227,242,227,242,227,242,227,242,227,227,242,227,-306,227,227,242,227,242,-305,-268,-290,-267,-289,-269,-291,227,242,227,242,227,242,227,242,227,242,227,242,227,242,-266,-288,-279,-301,-278,-300,-280,-302,227,242,227,242,227,242,227,242,227,242,227,242,227,242,-277,-299,-309,227,242,227,242,227,242,227,242,227,242,227,242,227,242,227,242,227,227,242,227,242,227,242,227,227,227,242,227,242,227,242,227,242,]),'NAMESPACE':([0,31,40,57,79,143,145,162,266,353,354,],[30,30,-6,30,-13,-7,-12,-10,-11,-8,-9,]),'BIT':([0,31,40,57,79,143,145,162,266,353,354,],[29,29,-6,29,-13,-7,-12,-10,-11,-8,-9,]),'RLCA':([0,31,40,57,79,143,145,162,266,353,354,],[13,13,-6,13,-13,-7,-12,-10,-11,-8,-9,]),'SP':([62,87,88,216,260,261,264,271,282,],[176,208,176,286,358,362,379,397,435,]),'ALIGN':([0,31,40,57,79,143,145,162,266,353,354,],[34,34,-6,34,-13,-7,-12,-10,-11,-8,-9,]),'RST':([0,31,40,57,79,143,145,162,266,353,354,],[35,35,-6,35,-13,-7,-12,-10,-11,-8,-9,]),'D':([1,4,12,16,18,21,24,38,45,46,48,56,62,71,73,77,78,87,88,253,254,262,265,272,273,274,281,283,284,451,],[-167,-137,97,-133,-166,97,97,-165,-169,-134,-170,-135,97,-164,-136,-163,-168,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'ADD':([0,31,40,57,79,143,145,162,266,353,354,],[36,36,-6,36,-13,-7,-12,-10,-11,-8,-9,]),'RRC':([0,31,40,57,79,143,145,162,266,353,354,],[38,38,-6,38,-13,-7,-12,-10,-11,-8,-9,]),'CPD':([0,31,40,57,79,143,145,162,266,353,354,],[39,39,-6,39,-13,-7,-12,-10,-11,-8,-9,]),'DAA':([0,31,40,57,79,143,145,162,266,353,354,],[41,41,-6,41,-13,-7,-12,-10,-11,-8,-9,]),'CPIR':([0,31,40,57,79,143,145,162,266,353,354,],[42,42,-6,42,-13,-7,-12,-10,-11,-8,-9,]),'INC':([0,31,40,57,79,143,145,162,266,353,354,],[62,62,-6,62,-13,-7,-12,-10,-11,-8,-9,]),'SLL':([0,31,40,57,79,143,145,162,266,353,354,],[78,78,-6,78,-13,-7,-12,-10,-11,-8,-9,]),'RRA':([0,31,40,57,79,143,145,162,266,353,354,],[84,84,-6,84,-13,-7,-12,-10,-11,-8,-9,]),'PO':([65,69,80,],[188,188,188,]),'SRA':([0,31,40,57,79,143,145,162,266,353,354,],[45,45,-6,45,-13,-7,-12,-10,-11,-8,-9,]),'AND':([0,31,40,57,79,143,145,162,266,353,354,],[46,46,-6,46,-13,-7,-12,-10,-11,-8,-9,]),'MINUS':([4,16,21,27,29,34,35,43,44,46,52,55,56,61,64,65,68,69,73,82,85,104,106,108,110,111,115,117,118,122,136,137,138,139,142,146,147,148,149,153,155,159,160,167,171,182,186,191,192,195,199,200,201,205,224,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,255,256,257,259,262,263,265,267,268,270,272,273,274,275,280,281,283,284,290,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,368,369,371,374,375,382,384,387,388,389,390,392,393,400,402,406,412,414,416,418,419,425,427,430,432,439,441,452,453,454,455,456,457,458,459,],[-137,-133,115,115,-160,115,115,115,115,-134,-162,115,-135,115,-161,115,115,115,-136,115,115,115,-308,-310,230,115,115,-307,245,115,115,230,245,115,115,230,245,230,245,230,245,230,245,230,245,230,245,230,115,245,230,230,245,115,230,115,115,115,115,115,115,115,115,115,115,115,318,320,-306,115,115,115,115,115,115,115,115,115,115,115,230,230,245,230,245,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,-305,-268,-290,-267,-289,-269,-291,230,245,-265,-287,230,245,230,245,230,245,230,245,-264,-286,-266,-288,115,115,115,115,-279,-301,-278,-300,-280,-302,230,245,-276,-298,230,245,230,245,230,245,230,245,-275,-297,-277,-299,-309,230,115,245,230,245,230,245,230,245,230,245,230,245,230,245,115,230,245,230,230,245,230,245,230,245,230,230,230,245,230,245,230,245,230,245,]),'EQU':([28,],[139,]),'DE':([22,60,62,87,88,90,205,260,261,264,271,282,406,],[124,124,124,124,124,215,276,359,361,377,395,124,460,]),'IX':([22,36,60,62,87,88,111,135,175,192,205,261,280,282,369,406,464,],[127,127,127,127,127,127,238,238,238,127,238,127,127,127,238,238,127,]),'INCBIN':([0,31,40,57,79,143,145,162,266,353,354,],[20,20,-6,20,-13,-7,-12,-10,-11,-8,-9,]),'PROC':([0,31,40,57,79,143,145,162,266,353,354,],[47,47,-6,47,-13,-7,-12,-10,-11,-8,-9,]),'SRL':([0,31,40,57,79,143,145,162,266,353,354,],[48,48,-6,48,-13,-7,-12,-10,-11,-8,-9,]),'SCF':([0,31,40,57,79,143,145,162,266,353,354,],[49,49,-6,49,-13,-7,-12,-10,-11,-8,-9,]),'CCF':([0,31,40,57,79,143,145,162,266,353,354,],[50,50,-6,50,-13,-7,-12,-10,-11,-8,-9,]),'ADC':([0,31,40,57,79,143,145,162,266,353,354,],[51,51,-6,51,-13,-7,-12,-10,-11,-8,-9,]),'OUTD':([0,31,40,57,79,143,145,162,266,353,354,],[7,7,-6,7,-13,-7,-12,-10,-11,-8,-9,]),'SET':([0,31,40,57,79,143,145,162,266,353,354,],[52,52,-6,52,-13,-7,-12,-10,-11,-8,-9,]),'IXL':([4,16,21,46,56,62,73,87,88,262,265,272,273,281,284,],[-137,-133,113,-134,-135,113,-136,113,113,113,113,113,113,113,113,]),'I':([87,273,],[207,408,]),'STRING':([20,68,92,],[105,190,220,]),'LDD':([0,31,40,57,79,143,145,162,266,353,354,],[53,53,-6,53,-13,-7,-12,-10,-11,-8,-9,]),'BXOR':([106,108,110,117,118,137,138,146,147,148,149,153,155,159,160,167,171,182,186,191,195,199,200,201,224,240,252,255,256,257,259,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,368,371,374,375,382,384,387,388,389,390,392,393,400,402,412,414,416,418,419,425,427,430,432,439,441,452,453,454,455,456,457,458,459,],[-308,-310,232,-307,247,232,247,232,247,232,247,232,247,232,247,232,247,232,247,232,247,232,232,247,232,-306,232,232,247,232,247,-305,-268,-290,-267,-289,-269,-291,-270,-292,-265,-287,-271,-293,-263,-285,-261,-283,-262,-284,-264,-286,-266,-288,-279,-301,-278,-300,-280,-302,-281,-303,-276,-298,-282,-304,-274,-296,-272,-294,-273,-295,-275,-297,-277,-299,-309,232,247,232,247,232,247,232,247,232,247,232,247,232,247,232,247,232,232,247,232,247,232,247,232,232,232,247,232,247,232,247,232,247,]),'EXX':([0,31,40,57,79,143,145,162,266,353,354,],[54,54,-6,54,-13,-7,-12,-10,-11,-8,-9,]),'ORG':([0,31,40,57,79,143,145,162,266,353,354,],[55,55,-6,55,-13,-7,-12,-10,-11,-8,-9,]),'XOR':([0,31,40,57,79,143,145,162,266,353,354,],[56,56,-6,56,-13,-7,-12,-10,-11,-8,-9,]),'LABEL':([0,31,40,79,143,145,162,266,353,354,],[57,57,-6,-13,-7,-12,-10,-11,-8,-9,]),'LDIR':([0,31,40,57,79,143,145,162,266,353,354,],[58,58,-6,58,-13,-7,-12,-10,-11,-8,-9,]),'RRD':([0,31,40,57,79,143,145,162,266,353,354,],[37,37,-6,37,-13,-7,-12,-10,-11,-8,-9,]),'POP':([0,31,40,57,79,143,145,162,266,353,354,],[60,60,-6,60,-13,-7,-12,-10,-11,-8,-9,]),'LPP':([4,16,21,27,29,34,35,43,44,46,52,55,56,61,64,65,68,69,73,82,85,104,111,115,122,136,139,142,192,205,226,227,228,229,230,231,232,233,234,235,236,241,242,243,244,245,246,247,248,249,250,251,262,263,265,267,268,270,272,273,274,275,280,281,283,284,290,317,318,319,320,369,406,],[-137,-133,122,122,-160,122,122,122,122,-134,-162,122,-135,122,-161,122,122,122,-136,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'JR':([0,31,40,57,79,143,145,162,266,353,354,],[61,61,-6,61,-13,-7,-12,-10,-11,-8,-9,]),'DEFS':([0,31,40,57,79,143,145,162,266,353,354,],[43,43,-6,43,-13,-7,-12,-10,-11,-8,-9,]),'NZ':([61,65,69,80,],[165,165,165,165,]),'RLD':([0,31,40,57,79,143,145,162,266,353,354,],[63,63,-6,63,-13,-7,-12,-10,-11,-8,-9,]),'APO':([447,],[465,]),'_INIT':([0,31,40,57,79,143,145,162,266,353,354,],[5,5,-6,5,-13,-7,-12,-10,-11,-8,-9,]),'RES':([0,31,40,57,79,143,145,162,266,353,354,],[64,64,-6,64,-13,-7,-12,-10,-11,-8,-9,]),'P':([65,69,80,],[181,181,181,]),'CALL':([0,31,40,57,79,143,145,162,266,353,354,],[65,65,-6,65,-13,-7,-12,-10,-11,-8,-9,]),'IXH':([4,16,21,46,56,62,73,87,88,262,265,272,273,281,284,],[-137,-133,121,-134,-135,121,-136,121,121,121,121,121,121,121,121,]),'HALT':([0,31,40,57,79,143,145,162,266,353,354,],[67,67,-6,67,-13,-7,-12,-10,-11,-8,-9,]),'IM':([0,31,40,57,79,143,145,162,266,353,354,],[82,82,-6,82,-13,-7,-12,-10,-11,-8,-9,]),'DEFB':([0,31,40,57,79,143,145,162,266,353,354,],[68,68,-6,68,-13,-7,-12,-10,-11,-8,-9,]),'JP':([0,31,40,57,79,143,145,162,266,353,354,],[69,69,-6,69,-13,-7,-12,-10,-11,-8,-9,]),'CPL':([0,31,40,57,79,143,145,162,266,353,354,],[70,70,-6,70,-13,-7,-12,-10,-11,-8,-9,]),'RL':([0,31,40,57,79,143,145,162,266,353,354,],[71,71,-6,71,-13,-7,-12,-10,-11,-8,-9,]),'C':([1,4,12,16,18,21,24,38,45,46,48,56,61,62,65,69,71,73,77,78,80,87,88,104,253,254,262,265,272,273,274,281,283,284,290,291,451,],[-167,-137,100,-133,-166,100,100,-165,-169,-134,-170,-135,169,100,169,169,-164,-136,-163,-168,169,100,100,225,100,100,100,100,100,100,100,100,100,100,449,450,100,]),'RLA':([0,31,40,57,79,143,145,162,266,353,354,],[72,72,-6,72,-13,-7,-12,-10,-11,-8,-9,]),'M':([65,69,80,],[184,184,184,]),'MUL':([106,108,110,117,118,137,138,146,147,148,149,153,155,159,160,167,171,182,186,191,195,199,200,201,224,240,252,255,256,257,259,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,368,371,374,375,382,384,387,388,389,390,392,393,400,402,412,414,416,418,419,425,427,430,432,439,441,452,453,454,455,456,457,458,459,],[-308,-310,236,-307,251,236,251,236,251,236,251,236,251,236,251,236,251,236,251,236,251,236,236,251,236,-306,236,236,251,236,251,-305,-268,-290,-267,-289,-269,-291,236,251,236,251,236,251,236,251,236,251,236,251,236,251,-266,-288,-279,-301,-278,-300,-280,-302,236,251,236,251,236,251,236,251,236,251,236,251,236,251,-277,-299,-309,236,251,236,251,236,251,236,251,236,251,236,251,236,251,236,251,236,236,251,236,251,236,251,236,236,236,251,236,251,236,251,236,251,]),'PUSH':([0,31,40,57,79,143,145,162,266,353,354,],[22,22,-6,22,-13,-7,-12,-10,-11,-8,-9,]),'RR':([0,31,40,57,79,143,145,162,266,353,354,],[77,77,-6,77,-13,-7,-12,-10,-11,-8,-9,]),'OTIR':([0,31,40,57,79,143,145,162,266,353,354,],[76,76,-6,76,-13,-7,-12,-10,-11,-8,-9,]),'POW':([106,108,110,117,118,137,138,146,147,148,149,153,155,159,160,167,171,182,186,191,195,199,200,201,224,240,252,255,256,257,259,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,368,371,374,375,382,384,387,388,389,390,392,393,400,402,412,414,416,418,419,425,427,430,432,439,441,452,453,454,455,456,457,458,459,],[-308,-310,228,-307,243,228,243,228,243,228,243,228,243,228,243,228,243,228,243,228,243,228,228,243,228,-306,228,228,243,228,243,-305,228,243,228,243,228,243,228,243,228,243,228,243,228,243,228,243,228,243,228,243,228,243,228,243,228,243,228,243,228,243,228,243,228,243,228,243,228,243,228,243,228,243,228,243,-309,228,243,228,243,228,243,228,243,228,243,228,243,228,243,228,243,228,228,243,228,243,228,243,228,228,228,243,228,243,228,243,228,243,]),'B':([1,4,12,16,18,21,24,38,45,46,48,56,62,71,73,77,78,87,88,253,254,262,265,272,273,274,281,283,284,451,],[-167,-137,98,-133,-166,98,98,-165,-169,-134,-170,-135,98,-164,-136,-163,-168,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'DEFAULT':([30,],[141,]),'H':([1,4,12,16,18,21,24,38,45,46,48,56,62,71,73,77,78,87,88,253,254,262,265,272,273,274,281,283,451,],[-167,-137,101,-133,-166,101,101,-165,-169,-134,-170,-135,101,-164,-136,-163,-168,101,101,101,101,101,101,101,101,101,101,101,101,]),'NEWLINE':([0,3,6,7,8,9,10,11,13,14,15,17,25,26,31,32,33,37,39,40,41,42,47,49,50,53,54,57,58,59,63,66,67,70,72,74,75,76,79,80,83,84,86,89,92,93,95,97,98,99,100,101,102,105,106,107,108,109,110,112,113,114,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,140,141,142,143,145,146,147,148,153,154,155,156,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,193,195,196,199,200,201,213,214,218,219,220,240,255,256,257,259,266,289,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,407,408,409,410,411,412,413,414,415,416,417,418,419,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,448,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,],[79,-232,-231,-244,-250,-236,-251,-248,-256,-254,-242,-246,-243,-249,79,145,-226,-260,-237,-6,-238,-234,-37,-229,-228,-233,-227,162,-230,-245,-259,-311,-241,-240,-255,-239,-253,-247,-13,-252,-38,-257,-235,-258,-312,-314,-178,-182,-180,-179,-181,-177,-183,-71,-308,-128,-310,-130,-131,-187,-185,-186,-126,-307,-132,-129,-127,-184,-190,-189,-139,-188,-192,-191,-193,-138,-150,-148,-151,-149,-68,-67,258,-7,-12,-69,-70,-218,-46,-44,-47,-45,-65,-66,266,-10,-141,-140,-208,-206,-211,-207,-209,-215,-175,-76,-173,-171,-172,-74,-174,-176,-199,-212,-203,-200,-216,-202,-201,-42,-43,-210,-86,-214,-198,-219,-213,-217,-75,-77,-39,-40,-313,-306,353,354,355,356,-11,-224,-225,-305,-268,-290,-267,-289,-269,-291,-270,-292,-265,-287,-271,-293,-263,-285,-261,-283,-262,-284,-264,-286,-266,-288,-54,-279,-301,-278,-300,-280,-302,-281,-303,-276,-298,-282,-304,-274,-296,-272,-294,-273,-295,-275,-297,-277,-299,-309,-152,-158,-154,-156,-153,-159,-155,-157,-8,-9,-106,-107,-105,-104,-113,-115,-112,-116,-114,-98,-124,-119,-96,-120,-99,-97,-48,-49,-110,-109,-108,-111,-102,-125,-121,-100,-122,-103,-101,-204,-205,-196,-197,-87,-194,-195,-95,-94,-93,-92,-90,-123,-117,-88,-118,-91,-89,-53,-26,-24,-19,-22,-28,-82,-23,-145,-50,-85,-51,-80,-146,-27,-25,-18,-83,-17,-147,-16,-52,-78,-20,-79,-14,-30,-144,-142,-143,-15,-81,-21,-84,-32,-31,-29,-64,-41,-63,-220,-221,-222,-223,-57,-61,-58,-62,-55,-59,-56,-60,-34,-33,-36,-35,-73,-72,]),'RET':([0,31,40,57,79,143,145,162,266,353,354,],[80,80,-6,80,-13,-7,-12,-10,-11,-8,-9,]),'SBC':([0,31,40,57,79,143,145,162,266,353,354,],[81,81,-6,81,-13,-7,-12,-10,-11,-8,-9,]),'ENDP':([0,31,40,57,79,143,145,162,266,353,354,],[83,83,-6,83,-13,-7,-12,-10,-11,-8,-9,]),'E':([1,4,12,16,18,21,24,38,45,46,48,56,62,71,73,77,78,87,88,253,254,262,265,272,273,274,281,283,284,451,],[-167,-137,102,-133,-166,102,102,-165,-169,-134,-170,-135,102,-164,-136,-163,-168,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'DJNZ':([0,31,40,57,79,143,145,162,266,353,354,],[85,85,-6,85,-13,-7,-12,-10,-11,-8,-9,]),'RSHIFT':([106,108,110,117,118,137,138,146,147,148,149,153,155,159,160,167,171,182,186,191,195,199,200,201,224,240,252,255,256,257,259,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,368,371,374,375,382,384,387,388,389,390,392,393,400,402,412,414,416,418,419,425,427,430,432,439,441,452,453,454,455,456,457,458,459,],[-308,-310,231,-307,246,231,246,231,246,231,246,231,246,231,246,231,246,231,246,231,246,231,231,246,231,-306,231,231,246,231,246,-305,-268,-290,-267,-289,-269,-291,-270,-292,-265,-287,-271,-293,-263,-285,-261,-283,-262,-284,-264,-286,-266,-288,-279,-301,-278,-300,-280,-302,-281,-303,-276,-298,-282,-304,-274,-296,-272,-294,-273,-295,-275,-297,-277,-299,-309,231,246,231,246,231,246,231,246,231,246,231,246,231,246,231,246,231,231,246,231,246,231,246,231,231,231,246,231,246,231,246,231,246,]),'CPI':([0,31,40,57,79,143,145,162,266,353,354,],[86,86,-6,86,-13,-7,-12,-10,-11,-8,-9,]),'BAND':([106,108,110,117,118,137,138,146,147,148,149,153,155,159,160,167,171,182,186,191,195,199,200,201,224,240,252,255,256,257,259,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,368,371,374,375,382,384,387,388,389,390,392,393,400,402,412,414,416,418,419,425,427,430,432,439,441,452,453,454,455,456,457,458,459,],[-308,-310,233,-307,248,233,248,233,248,233,248,233,248,233,248,233,248,233,248,233,248,233,233,248,233,-306,233,233,248,233,248,-305,-268,-290,-267,-289,-269,-291,-270,-292,-265,-287,-271,-293,-263,-285,-261,-283,-262,-284,-264,-286,-266,-288,-279,-301,-278,-300,-280,-302,-281,-303,-276,-298,-282,-304,-274,-296,-272,-294,-273,-295,-275,-297,-277,-299,-309,233,248,233,248,233,248,233,248,233,248,233,248,233,248,233,248,233,233,248,233,248,233,248,233,233,233,248,233,248,233,248,233,248,]),'LD':([0,31,40,57,79,143,145,162,266,353,354,],[87,87,-6,87,-13,-7,-12,-10,-11,-8,-9,]),'BOR':([106,108,110,117,118,137,138,146,147,148,149,153,155,159,160,167,171,182,186,191,195,199,200,201,224,240,252,255,256,257,259,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,368,371,374,375,382,384,387,388,389,390,392,393,400,402,412,414,416,418,419,425,427,430,432,439,441,452,453,454,455,456,457,458,459,],[-308,-310,234,-307,249,234,249,234,249,234,249,234,249,234,249,234,249,234,249,234,249,234,234,249,234,-306,234,234,249,234,249,-305,-268,-290,-267,-289,-269,-291,-270,-292,-265,-287,-271,-293,-263,-285,-261,-283,-262,-284,-264,-286,-266,-288,-279,-301,-278,-300,-280,-302,-281,-303,-276,-298,-282,-304,-274,-296,-272,-294,-273,-295,-275,-297,-277,-299,-309,234,249,234,249,234,249,234,249,234,249,234,249,234,249,234,249,234,234,249,234,249,234,249,234,234,234,249,234,249,234,249,234,249,]),'DEC':([0,31,40,57,79,143,145,162,266,353,354,],[88,88,-6,88,-13,-7,-12,-10,-11,-8,-9,]),'RRCA':([0,31,40,57,79,143,145,162,266,353,354,],[89,89,-6,89,-13,-7,-12,-10,-11,-8,-9,]),'EX':([0,31,40,57,79,143,145,162,266,353,354,],[90,90,-6,90,-13,-7,-12,-10,-11,-8,-9,]),'LOCAL':([0,31,40,57,79,143,145,162,266,353,354,],[91,91,-6,91,-13,-7,-12,-10,-11,-8,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inc_reg':([62,88,],[178,213,]),'reg8':([12,21,24,62,87,88,253,254,262,265,272,273,274,281,283,451,],[96,116,132,177,209,177,347,351,370,383,401,409,415,428,438,469,]),'reg16i':([22,36,60,62,87,88,192,261,280,282,464,],[128,151,128,128,128,128,269,364,424,128,483,]),'preproc_line':([0,31,57,],[66,66,66,]),'expr':([21,27,34,35,43,44,55,61,65,68,69,82,85,104,111,115,122,136,139,142,192,205,226,227,228,229,230,231,232,233,234,235,236,241,242,243,244,245,246,247,248,249,250,251,262,263,265,267,268,270,272,273,274,275,280,281,283,284,290,317,318,319,320,369,406,],[110,137,146,148,153,153,159,167,182,153,191,199,200,224,224,240,252,224,255,257,224,224,295,297,299,301,303,305,307,309,311,313,315,322,324,326,328,330,332,334,336,338,340,342,368,374,382,387,389,392,400,412,416,418,425,430,439,441,224,452,454,456,458,224,224,]),'reg16':([22,60,62,87,88,282,],[125,163,174,204,174,437,]),'regBCDE':([12,21,24,62,87,88,253,254,262,265,272,273,274,281,283,284,451,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,443,99,]),'number_list':([43,44,68,],[154,156,189,]),'jr_flags':([61,65,69,80,],[168,183,183,183,]),'reg8_I':([21,24,62,87,88,253,254,262,265,272,273,281,],[109,133,173,203,214,346,350,367,381,399,405,429,]),'id_list':([91,],[218,]),'endline':([31,],[144,]),'program':([0,],[31,]),'asm':([0,31,57,],[32,32,161,]),'bitop':([0,31,57,],[27,27,27,]),'jp_flags':([65,69,80,],[185,194,196,]),'pexpr':([19,21,27,34,35,43,44,55,61,65,68,69,82,85,87,104,111,115,122,136,139,142,192,205,221,226,227,228,229,230,231,232,233,234,235,236,241,242,243,244,245,246,247,248,249,250,251,262,263,265,267,268,270,272,273,274,275,280,281,283,284,290,317,318,319,320,369,406,],[103,118,138,147,149,155,155,160,171,186,155,195,149,201,210,149,149,149,149,149,256,259,149,149,289,296,298,300,302,304,306,308,310,312,314,316,323,325,327,329,331,333,335,337,339,341,343,371,375,384,388,390,393,402,414,149,419,427,432,149,149,149,453,455,457,459,149,149,]),'reg8_hl':([21,24,62,69,87,88,253,254,262,265,272,273,281,],[119,134,179,193,211,179,348,352,372,385,403,410,433,]),'reg8i':([21,62,87,88,262,265,272,273,281,284,],[120,180,212,180,373,386,404,411,434,442,]),'line':([0,31,],[40,143,]),'bitwiseop':([0,31,57,],[21,21,21,]),'start':([0,],[23,]),'rotation':([0,31,57,],[24,24,24,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> program','start',1,'p_start','asmparse.py',538),
  ('start -> program endline','start',2,'p_start','asmparse.py',539),
  ('endline -> END NEWLINE','endline',2,'p_program_endline','asmparse.py',544),
  ('endline -> END expr NEWLINE','endline',3,'p_program_endline2','asmparse.py',549),
  ('endline -> END pexpr NEWLINE','endline',3,'p_program_endline2','asmparse.py',550),
  ('program -> line','program',1,'p_program','asmparse.py',557),
  ('program -> program line','program',2,'p_program_line','asmparse.py',565),
  ('line -> ID EQU expr NEWLINE','line',4,'p_def_label','asmparse.py',573),
  ('line -> ID EQU pexpr NEWLINE','line',4,'p_def_label','asmparse.py',574),
  ('line -> LABEL NEWLINE','line',2,'p_line_label','asmparse.py',583),
  ('line -> LABEL asm NEWLINE','line',3,'p_line_label_asm','asmparse.py',592),
  ('line -> asm NEWLINE','line',2,'p_line_asm','asmparse.py',601),
  ('line -> NEWLINE','line',1,'p_line_newline','asmparse.py',607),
  ('asm -> LD reg8 COMMA reg8_hl','asm',4,'p_asm_ld8','asmparse.py',613),
  ('asm -> LD reg8_hl COMMA reg8','asm',4,'p_asm_ld8','asmparse.py',614),
  ('asm -> LD reg8 COMMA reg8','asm',4,'p_asm_ld8','asmparse.py',615),
  ('asm -> LD SP COMMA HL','asm',4,'p_asm_ld8','asmparse.py',616),
  ('asm -> LD SP COMMA reg16i','asm',4,'p_asm_ld8','asmparse.py',617),
  ('asm -> LD A COMMA reg8','asm',4,'p_asm_ld8','asmparse.py',618),
  ('asm -> LD reg8 COMMA A','asm',4,'p_asm_ld8','asmparse.py',619),
  ('asm -> LD reg8_hl COMMA A','asm',4,'p_asm_ld8','asmparse.py',620),
  ('asm -> LD A COMMA reg8_hl','asm',4,'p_asm_ld8','asmparse.py',621),
  ('asm -> LD A COMMA A','asm',4,'p_asm_ld8','asmparse.py',622),
  ('asm -> LD A COMMA I','asm',4,'p_asm_ld8','asmparse.py',623),
  ('asm -> LD I COMMA A','asm',4,'p_asm_ld8','asmparse.py',624),
  ('asm -> LD A COMMA R','asm',4,'p_asm_ld8','asmparse.py',625),
  ('asm -> LD R COMMA A','asm',4,'p_asm_ld8','asmparse.py',626),
  ('asm -> LD A COMMA reg8i','asm',4,'p_asm_ld8','asmparse.py',627),
  ('asm -> LD reg8i COMMA A','asm',4,'p_asm_ld8','asmparse.py',628),
  ('asm -> LD reg8 COMMA reg8i','asm',4,'p_asm_ld8','asmparse.py',629),
  ('asm -> LD reg8i COMMA regBCDE','asm',4,'p_asm_ld8','asmparse.py',630),
  ('asm -> LD reg8i COMMA reg8i','asm',4,'p_asm_ld8','asmparse.py',631),
  ('asm -> LD A COMMA LP BC RP','asm',6,'p_LDa','asmparse.py',641),
  ('asm -> LD A COMMA LP DE RP','asm',6,'p_LDa','asmparse.py',642),
  ('asm -> LD LP BC RP COMMA A','asm',6,'p_LDa','asmparse.py',643),
  ('asm -> LD LP DE RP COMMA A','asm',6,'p_LDa','asmparse.py',644),
  ('asm -> PROC','asm',1,'p_PROC','asmparse.py',650),
  ('asm -> ENDP','asm',1,'p_ENDP','asmparse.py',657),
  ('asm -> LOCAL id_list','asm',2,'p_LOCAL','asmparse.py',664),
  ('id_list -> ID','id_list',1,'p_idlist','asmparse.py',674),
  ('id_list -> id_list COMMA ID','id_list',3,'p_idlist_id','asmparse.py',680),
  ('asm -> DEFB number_list','asm',2,'p_DEFB','asmparse.py',686),
  ('asm -> DEFB STRING','asm',2,'p_DEFB','asmparse.py',687),
  ('asm -> DEFS number_list','asm',2,'p_DEFS','asmparse.py',693),
  ('asm -> DEFW number_list','asm',2,'p_DEFW','asmparse.py',706),
  ('number_list -> expr','number_list',1,'p_number_list','asmparse.py',712),
  ('number_list -> pexpr','number_list',1,'p_number_list','asmparse.py',713),
  ('number_list -> number_list COMMA expr','number_list',3,'p_number_list_number','asmparse.py',719),
  ('number_list -> number_list COMMA pexpr','number_list',3,'p_number_list_number','asmparse.py',720),
  ('asm -> LD reg8_I COMMA reg8','asm',4,'p_asm_ldind_r8','asmparse.py',726),
  ('asm -> LD reg8_I COMMA A','asm',4,'p_asm_ldind_r8','asmparse.py',727),
  ('asm -> LD reg8 COMMA reg8_I','asm',4,'p_asm_ldr8_ind','asmparse.py',733),
  ('asm -> LD A COMMA reg8_I','asm',4,'p_asm_ldr8_ind','asmparse.py',734),
  ('reg8_hl -> LP HL RP','reg8_hl',3,'p_reg8_hl','asmparse.py',740),
  ('reg8_I -> LP IX PLUS expr RP','reg8_I',5,'p_ind8_I','asmparse.py',746),
  ('reg8_I -> LP IX MINUS expr RP','reg8_I',5,'p_ind8_I','asmparse.py',747),
  ('reg8_I -> LP IY PLUS expr RP','reg8_I',5,'p_ind8_I','asmparse.py',748),
  ('reg8_I -> LP IY MINUS expr RP','reg8_I',5,'p_ind8_I','asmparse.py',749),
  ('reg8_I -> LP IX PLUS pexpr RP','reg8_I',5,'p_ind8_I','asmparse.py',750),
  ('reg8_I -> LP IX MINUS pexpr RP','reg8_I',5,'p_ind8_I','asmparse.py',751),
  ('reg8_I -> LP IY PLUS pexpr RP','reg8_I',5,'p_ind8_I','asmparse.py',752),
  ('reg8_I -> LP IY MINUS pexpr RP','reg8_I',5,'p_ind8_I','asmparse.py',753),
  ('asm -> EX AF COMMA AF APO','asm',5,'p_ex_af_af','asmparse.py',763),
  ('asm -> EX DE COMMA HL','asm',4,'p_ex_de_hl','asmparse.py',769),
  ('asm -> ORG expr','asm',2,'p_org','asmparse.py',775),
  ('asm -> ORG pexpr','asm',2,'p_org','asmparse.py',776),
  ('asm -> NAMESPACE DEFAULT','asm',2,'p_namespace','asmparse.py',782),
  ('asm -> NAMESPACE ID','asm',2,'p_namespace','asmparse.py',783),
  ('asm -> ALIGN expr','asm',2,'p_align','asmparse.py',796),
  ('asm -> ALIGN pexpr','asm',2,'p_align','asmparse.py',797),
  ('asm -> INCBIN STRING','asm',2,'p_incbin','asmparse.py',807),
  ('asm -> EX LP SP RP COMMA reg16i','asm',6,'p_ex_sp_reg8','asmparse.py',818),
  ('asm -> EX LP SP RP COMMA HL','asm',6,'p_ex_sp_reg8','asmparse.py',819),
  ('asm -> INC inc_reg','asm',2,'p_incdec','asmparse.py',825),
  ('asm -> DEC inc_reg','asm',2,'p_incdec','asmparse.py',826),
  ('asm -> INC reg8_I','asm',2,'p_incdeci','asmparse.py',832),
  ('asm -> DEC reg8_I','asm',2,'p_incdeci','asmparse.py',833),
  ('asm -> LD reg8 COMMA expr','asm',4,'p_LD_reg_val','asmparse.py',839),
  ('asm -> LD reg8 COMMA pexpr','asm',4,'p_LD_reg_val','asmparse.py',840),
  ('asm -> LD reg16 COMMA expr','asm',4,'p_LD_reg_val','asmparse.py',841),
  ('asm -> LD reg8_hl COMMA expr','asm',4,'p_LD_reg_val','asmparse.py',842),
  ('asm -> LD A COMMA expr','asm',4,'p_LD_reg_val','asmparse.py',843),
  ('asm -> LD SP COMMA expr','asm',4,'p_LD_reg_val','asmparse.py',844),
  ('asm -> LD reg8i COMMA expr','asm',4,'p_LD_reg_val','asmparse.py',845),
  ('asm -> LD reg8_I COMMA expr','asm',4,'p_LD_regI_val','asmparse.py',855),
  ('asm -> JP reg8_hl','asm',2,'p_JP_hl','asmparse.py',861),
  ('asm -> JP LP reg16i RP','asm',4,'p_JP_hl','asmparse.py',862),
  ('asm -> SBC A COMMA reg8','asm',4,'p_SBCADD','asmparse.py',874),
  ('asm -> SBC A COMMA reg8i','asm',4,'p_SBCADD','asmparse.py',875),
  ('asm -> SBC A COMMA A','asm',4,'p_SBCADD','asmparse.py',876),
  ('asm -> SBC A COMMA reg8_hl','asm',4,'p_SBCADD','asmparse.py',877),
  ('asm -> SBC HL COMMA SP','asm',4,'p_SBCADD','asmparse.py',878),
  ('asm -> SBC HL COMMA BC','asm',4,'p_SBCADD','asmparse.py',879),
  ('asm -> SBC HL COMMA DE','asm',4,'p_SBCADD','asmparse.py',880),
  ('asm -> SBC HL COMMA HL','asm',4,'p_SBCADD','asmparse.py',881),
  ('asm -> ADD A COMMA reg8','asm',4,'p_SBCADD','asmparse.py',882),
  ('asm -> ADD A COMMA reg8i','asm',4,'p_SBCADD','asmparse.py',883),
  ('asm -> ADD A COMMA A','asm',4,'p_SBCADD','asmparse.py',884),
  ('asm -> ADD A COMMA reg8_hl','asm',4,'p_SBCADD','asmparse.py',885),
  ('asm -> ADC A COMMA reg8','asm',4,'p_SBCADD','asmparse.py',886),
  ('asm -> ADC A COMMA reg8i','asm',4,'p_SBCADD','asmparse.py',887),
  ('asm -> ADC A COMMA A','asm',4,'p_SBCADD','asmparse.py',888),
  ('asm -> ADC A COMMA reg8_hl','asm',4,'p_SBCADD','asmparse.py',889),
  ('asm -> ADD HL COMMA BC','asm',4,'p_SBCADD','asmparse.py',890),
  ('asm -> ADD HL COMMA DE','asm',4,'p_SBCADD','asmparse.py',891),
  ('asm -> ADD HL COMMA HL','asm',4,'p_SBCADD','asmparse.py',892),
  ('asm -> ADD HL COMMA SP','asm',4,'p_SBCADD','asmparse.py',893),
  ('asm -> ADC HL COMMA BC','asm',4,'p_SBCADD','asmparse.py',894),
  ('asm -> ADC HL COMMA DE','asm',4,'p_SBCADD','asmparse.py',895),
  ('asm -> ADC HL COMMA HL','asm',4,'p_SBCADD','asmparse.py',896),
  ('asm -> ADC HL COMMA SP','asm',4,'p_SBCADD','asmparse.py',897),
  ('asm -> ADD reg16i COMMA BC','asm',4,'p_SBCADD','asmparse.py',898),
  ('asm -> ADD reg16i COMMA DE','asm',4,'p_SBCADD','asmparse.py',899),
  ('asm -> ADD reg16i COMMA HL','asm',4,'p_SBCADD','asmparse.py',900),
  ('asm -> ADD reg16i COMMA SP','asm',4,'p_SBCADD','asmparse.py',901),
  ('asm -> ADD reg16i COMMA reg16i','asm',4,'p_SBCADD','asmparse.py',902),
  ('asm -> SBC A COMMA expr','asm',4,'p_arith_A_expr','asmparse.py',908),
  ('asm -> SBC A COMMA pexpr','asm',4,'p_arith_A_expr','asmparse.py',909),
  ('asm -> ADD A COMMA expr','asm',4,'p_arith_A_expr','asmparse.py',910),
  ('asm -> ADD A COMMA pexpr','asm',4,'p_arith_A_expr','asmparse.py',911),
  ('asm -> ADC A COMMA expr','asm',4,'p_arith_A_expr','asmparse.py',912),
  ('asm -> ADC A COMMA pexpr','asm',4,'p_arith_A_expr','asmparse.py',913),
  ('asm -> SBC A COMMA reg8_I','asm',4,'p_arith_A_regI','asmparse.py',919),
  ('asm -> ADD A COMMA reg8_I','asm',4,'p_arith_A_regI','asmparse.py',920),
  ('asm -> ADC A COMMA reg8_I','asm',4,'p_arith_A_regI','asmparse.py',921),
  ('asm -> bitwiseop reg8','asm',2,'p_bitwiseop_reg','asmparse.py',927),
  ('asm -> bitwiseop reg8i','asm',2,'p_bitwiseop_reg','asmparse.py',928),
  ('asm -> bitwiseop A','asm',2,'p_bitwiseop_reg','asmparse.py',929),
  ('asm -> bitwiseop reg8_hl','asm',2,'p_bitwiseop_reg','asmparse.py',930),
  ('asm -> bitwiseop reg8_I','asm',2,'p_bitwiseop_regI','asmparse.py',936),
  ('asm -> bitwiseop expr','asm',2,'p_bitwise_expr','asmparse.py',942),
  ('asm -> bitwiseop pexpr','asm',2,'p_bitwise_expr','asmparse.py',943),
  ('bitwiseop -> OR','bitwiseop',1,'p_bitwise','asmparse.py',949),
  ('bitwiseop -> AND','bitwiseop',1,'p_bitwise','asmparse.py',950),
  ('bitwiseop -> XOR','bitwiseop',1,'p_bitwise','asmparse.py',951),
  ('bitwiseop -> SUB','bitwiseop',1,'p_bitwise','asmparse.py',952),
  ('bitwiseop -> CP','bitwiseop',1,'p_bitwise','asmparse.py',953),
  ('asm -> PUSH AF','asm',2,'p_PUSH_POP','asmparse.py',959),
  ('asm -> PUSH reg16','asm',2,'p_PUSH_POP','asmparse.py',960),
  ('asm -> POP AF','asm',2,'p_PUSH_POP','asmparse.py',961),
  ('asm -> POP reg16','asm',2,'p_PUSH_POP','asmparse.py',962),
  ('asm -> LD pexpr COMMA A','asm',4,'p_LD_addr_reg','asmparse.py',968),
  ('asm -> LD pexpr COMMA reg16','asm',4,'p_LD_addr_reg','asmparse.py',969),
  ('asm -> LD pexpr COMMA SP','asm',4,'p_LD_addr_reg','asmparse.py',970),
  ('asm -> LD A COMMA pexpr','asm',4,'p_LD_reg_addr','asmparse.py',976),
  ('asm -> LD reg16 COMMA pexpr','asm',4,'p_LD_reg_addr','asmparse.py',977),
  ('asm -> LD SP COMMA pexpr','asm',4,'p_LD_reg_addr','asmparse.py',978),
  ('asm -> rotation reg8','asm',2,'p_ROTATE','asmparse.py',984),
  ('asm -> rotation reg8_hl','asm',2,'p_ROTATE','asmparse.py',985),
  ('asm -> rotation A','asm',2,'p_ROTATE','asmparse.py',986),
  ('asm -> rotation reg8_I','asm',2,'p_ROTATE_ix','asmparse.py',992),
  ('asm -> bitop expr COMMA A','asm',4,'p_BIT','asmparse.py',998),
  ('asm -> bitop pexpr COMMA A','asm',4,'p_BIT','asmparse.py',999),
  ('asm -> bitop expr COMMA reg8','asm',4,'p_BIT','asmparse.py',1000),
  ('asm -> bitop pexpr COMMA reg8','asm',4,'p_BIT','asmparse.py',1001),
  ('asm -> bitop expr COMMA reg8_hl','asm',4,'p_BIT','asmparse.py',1002),
  ('asm -> bitop pexpr COMMA reg8_hl','asm',4,'p_BIT','asmparse.py',1003),
  ('asm -> bitop expr COMMA reg8_I','asm',4,'p_BIT_ix','asmparse.py',1013),
  ('asm -> bitop pexpr COMMA reg8_I','asm',4,'p_BIT_ix','asmparse.py',1014),
  ('bitop -> BIT','bitop',1,'p_bitop','asmparse.py',1024),
  ('bitop -> RES','bitop',1,'p_bitop','asmparse.py',1025),
  ('bitop -> SET','bitop',1,'p_bitop','asmparse.py',1026),
  ('rotation -> RR','rotation',1,'p_rotation','asmparse.py',1032),
  ('rotation -> RL','rotation',1,'p_rotation','asmparse.py',1033),
  ('rotation -> RRC','rotation',1,'p_rotation','asmparse.py',1034),
  ('rotation -> RLC','rotation',1,'p_rotation','asmparse.py',1035),
  ('rotation -> SLA','rotation',1,'p_rotation','asmparse.py',1036),
  ('rotation -> SLL','rotation',1,'p_rotation','asmparse.py',1037),
  ('rotation -> SRA','rotation',1,'p_rotation','asmparse.py',1038),
  ('rotation -> SRL','rotation',1,'p_rotation','asmparse.py',1039),
  ('inc_reg -> SP','inc_reg',1,'p_reg_inc','asmparse.py',1045),
  ('inc_reg -> reg8','inc_reg',1,'p_reg_inc','asmparse.py',1046),
  ('inc_reg -> reg16','inc_reg',1,'p_reg_inc','asmparse.py',1047),
  ('inc_reg -> reg8_hl','inc_reg',1,'p_reg_inc','asmparse.py',1048),
  ('inc_reg -> A','inc_reg',1,'p_reg_inc','asmparse.py',1049),
  ('inc_reg -> reg8i','inc_reg',1,'p_reg_inc','asmparse.py',1050),
  ('reg8 -> H','reg8',1,'p_reg8','asmparse.py',1056),
  ('reg8 -> L','reg8',1,'p_reg8','asmparse.py',1057),
  ('reg8 -> regBCDE','reg8',1,'p_reg8','asmparse.py',1058),
  ('regBCDE -> B','regBCDE',1,'p_regBCDE','asmparse.py',1064),
  ('regBCDE -> C','regBCDE',1,'p_regBCDE','asmparse.py',1065),
  ('regBCDE -> D','regBCDE',1,'p_regBCDE','asmparse.py',1066),
  ('regBCDE -> E','regBCDE',1,'p_regBCDE','asmparse.py',1067),
  ('reg8i -> IXH','reg8i',1,'p_reg8i','asmparse.py',1073),
  ('reg8i -> IXL','reg8i',1,'p_reg8i','asmparse.py',1074),
  ('reg8i -> IYH','reg8i',1,'p_reg8i','asmparse.py',1075),
  ('reg8i -> IYL','reg8i',1,'p_reg8i','asmparse.py',1076),
  ('reg16 -> BC','reg16',1,'p_reg16','asmparse.py',1082),
  ('reg16 -> DE','reg16',1,'p_reg16','asmparse.py',1083),
  ('reg16 -> HL','reg16',1,'p_reg16','asmparse.py',1084),
  ('reg16 -> reg16i','reg16',1,'p_reg16','asmparse.py',1085),
  ('reg16i -> IX','reg16i',1,'p_reg16i','asmparse.py',1091),
  ('reg16i -> IY','reg16i',1,'p_reg16i','asmparse.py',1092),
  ('asm -> JP jp_flags COMMA expr','asm',4,'p_jp','asmparse.py',1098),
  ('asm -> JP jp_flags COMMA pexpr','asm',4,'p_jp','asmparse.py',1099),
  ('asm -> CALL jp_flags COMMA expr','asm',4,'p_jp','asmparse.py',1100),
  ('asm -> CALL jp_flags COMMA pexpr','asm',4,'p_jp','asmparse.py',1101),
  ('asm -> RET jp_flags','asm',2,'p_ret','asmparse.py',1107),
  ('jp_flags -> P','jp_flags',1,'p_jpflags_other','asmparse.py',1113),
  ('jp_flags -> M','jp_flags',1,'p_jpflags_other','asmparse.py',1114),
  ('jp_flags -> PO','jp_flags',1,'p_jpflags_other','asmparse.py',1115),
  ('jp_flags -> PE','jp_flags',1,'p_jpflags_other','asmparse.py',1116),
  ('jp_flags -> jr_flags','jp_flags',1,'p_jpflags_other','asmparse.py',1117),
  ('asm -> JR jr_flags COMMA expr','asm',4,'p_jr','asmparse.py',1123),
  ('asm -> JR jr_flags COMMA pexpr','asm',4,'p_jr','asmparse.py',1124),
  ('jr_flags -> Z','jr_flags',1,'p_jr_flags','asmparse.py',1131),
  ('jr_flags -> C','jr_flags',1,'p_jr_flags','asmparse.py',1132),
  ('jr_flags -> NZ','jr_flags',1,'p_jr_flags','asmparse.py',1133),
  ('jr_flags -> NC','jr_flags',1,'p_jr_flags','asmparse.py',1134),
  ('asm -> JP expr','asm',2,'p_jrjp','asmparse.py',1140),
  ('asm -> JR expr','asm',2,'p_jrjp','asmparse.py',1141),
  ('asm -> CALL expr','asm',2,'p_jrjp','asmparse.py',1142),
  ('asm -> DJNZ expr','asm',2,'p_jrjp','asmparse.py',1143),
  ('asm -> JP pexpr','asm',2,'p_jrjp','asmparse.py',1144),
  ('asm -> JR pexpr','asm',2,'p_jrjp','asmparse.py',1145),
  ('asm -> CALL pexpr','asm',2,'p_jrjp','asmparse.py',1146),
  ('asm -> DJNZ pexpr','asm',2,'p_jrjp','asmparse.py',1147),
  ('asm -> RST expr','asm',2,'p_rst','asmparse.py',1159),
  ('asm -> IM expr','asm',2,'p_im','asmparse.py',1170),
  ('asm -> IN A COMMA LP C RP','asm',6,'p_in','asmparse.py',1180),
  ('asm -> IN reg8 COMMA LP C RP','asm',6,'p_in','asmparse.py',1181),
  ('asm -> OUT LP C RP COMMA A','asm',6,'p_out','asmparse.py',1187),
  ('asm -> OUT LP C RP COMMA reg8','asm',6,'p_out','asmparse.py',1188),
  ('asm -> IN A COMMA pexpr','asm',4,'p_in_expr','asmparse.py',1194),
  ('asm -> OUT pexpr COMMA A','asm',4,'p_out_expr','asmparse.py',1200),
  ('asm -> NOP','asm',1,'p_single','asmparse.py',1206),
  ('asm -> EXX','asm',1,'p_single','asmparse.py',1207),
  ('asm -> CCF','asm',1,'p_single','asmparse.py',1208),
  ('asm -> SCF','asm',1,'p_single','asmparse.py',1209),
  ('asm -> LDIR','asm',1,'p_single','asmparse.py',1210),
  ('asm -> LDI','asm',1,'p_single','asmparse.py',1211),
  ('asm -> LDDR','asm',1,'p_single','asmparse.py',1212),
  ('asm -> LDD','asm',1,'p_single','asmparse.py',1213),
  ('asm -> CPIR','asm',1,'p_single','asmparse.py',1214),
  ('asm -> CPI','asm',1,'p_single','asmparse.py',1215),
  ('asm -> CPDR','asm',1,'p_single','asmparse.py',1216),
  ('asm -> CPD','asm',1,'p_single','asmparse.py',1217),
  ('asm -> DAA','asm',1,'p_single','asmparse.py',1218),
  ('asm -> NEG','asm',1,'p_single','asmparse.py',1219),
  ('asm -> CPL','asm',1,'p_single','asmparse.py',1220),
  ('asm -> HALT','asm',1,'p_single','asmparse.py',1221),
  ('asm -> EI','asm',1,'p_single','asmparse.py',1222),
  ('asm -> DI','asm',1,'p_single','asmparse.py',1223),
  ('asm -> OUTD','asm',1,'p_single','asmparse.py',1224),
  ('asm -> OUTI','asm',1,'p_single','asmparse.py',1225),
  ('asm -> OTDR','asm',1,'p_single','asmparse.py',1226),
  ('asm -> OTIR','asm',1,'p_single','asmparse.py',1227),
  ('asm -> IND','asm',1,'p_single','asmparse.py',1228),
  ('asm -> INI','asm',1,'p_single','asmparse.py',1229),
  ('asm -> INDR','asm',1,'p_single','asmparse.py',1230),
  ('asm -> INIR','asm',1,'p_single','asmparse.py',1231),
  ('asm -> RET','asm',1,'p_single','asmparse.py',1232),
  ('asm -> RETI','asm',1,'p_single','asmparse.py',1233),
  ('asm -> RETN','asm',1,'p_single','asmparse.py',1234),
  ('asm -> RLA','asm',1,'p_single','asmparse.py',1235),
  ('asm -> RLCA','asm',1,'p_single','asmparse.py',1236),
  ('asm -> RRA','asm',1,'p_single','asmparse.py',1237),
  ('asm -> RRCA','asm',1,'p_single','asmparse.py',1238),
  ('asm -> RLD','asm',1,'p_single','asmparse.py',1239),
  ('asm -> RRD','asm',1,'p_single','asmparse.py',1240),
  ('expr -> expr BAND expr','expr',3,'p_expr_div_expr','asmparse.py',1246),
  ('expr -> expr BOR expr','expr',3,'p_expr_div_expr','asmparse.py',1247),
  ('expr -> expr BXOR expr','expr',3,'p_expr_div_expr','asmparse.py',1248),
  ('expr -> expr PLUS expr','expr',3,'p_expr_div_expr','asmparse.py',1249),
  ('expr -> expr MINUS expr','expr',3,'p_expr_div_expr','asmparse.py',1250),
  ('expr -> expr MUL expr','expr',3,'p_expr_div_expr','asmparse.py',1251),
  ('expr -> expr DIV expr','expr',3,'p_expr_div_expr','asmparse.py',1252),
  ('expr -> expr MOD expr','expr',3,'p_expr_div_expr','asmparse.py',1253),
  ('expr -> expr POW expr','expr',3,'p_expr_div_expr','asmparse.py',1254),
  ('expr -> expr LSHIFT expr','expr',3,'p_expr_div_expr','asmparse.py',1255),
  ('expr -> expr RSHIFT expr','expr',3,'p_expr_div_expr','asmparse.py',1256),
  ('expr -> pexpr BAND expr','expr',3,'p_expr_div_expr','asmparse.py',1257),
  ('expr -> pexpr BOR expr','expr',3,'p_expr_div_expr','asmparse.py',1258),
  ('expr -> pexpr BXOR expr','expr',3,'p_expr_div_expr','asmparse.py',1259),
  ('expr -> pexpr PLUS expr','expr',3,'p_expr_div_expr','asmparse.py',1260),
  ('expr -> pexpr MINUS expr','expr',3,'p_expr_div_expr','asmparse.py',1261),
  ('expr -> pexpr MUL expr','expr',3,'p_expr_div_expr','asmparse.py',1262),
  ('expr -> pexpr DIV expr','expr',3,'p_expr_div_expr','asmparse.py',1263),
  ('expr -> pexpr MOD expr','expr',3,'p_expr_div_expr','asmparse.py',1264),
  ('expr -> pexpr POW expr','expr',3,'p_expr_div_expr','asmparse.py',1265),
  ('expr -> pexpr LSHIFT expr','expr',3,'p_expr_div_expr','asmparse.py',1266),
  ('expr -> pexpr RSHIFT expr','expr',3,'p_expr_div_expr','asmparse.py',1267),
  ('expr -> expr BAND pexpr','expr',3,'p_expr_div_expr','asmparse.py',1268),
  ('expr -> expr BOR pexpr','expr',3,'p_expr_div_expr','asmparse.py',1269),
  ('expr -> expr BXOR pexpr','expr',3,'p_expr_div_expr','asmparse.py',1270),
  ('expr -> expr PLUS pexpr','expr',3,'p_expr_div_expr','asmparse.py',1271),
  ('expr -> expr MINUS pexpr','expr',3,'p_expr_div_expr','asmparse.py',1272),
  ('expr -> expr MUL pexpr','expr',3,'p_expr_div_expr','asmparse.py',1273),
  ('expr -> expr DIV pexpr','expr',3,'p_expr_div_expr','asmparse.py',1274),
  ('expr -> expr MOD pexpr','expr',3,'p_expr_div_expr','asmparse.py',1275),
  ('expr -> expr POW pexpr','expr',3,'p_expr_div_expr','asmparse.py',1276),
  ('expr -> expr LSHIFT pexpr','expr',3,'p_expr_div_expr','asmparse.py',1277),
  ('expr -> expr RSHIFT pexpr','expr',3,'p_expr_div_expr','asmparse.py',1278),
  ('expr -> pexpr BAND pexpr','expr',3,'p_expr_div_expr','asmparse.py',1279),
  ('expr -> pexpr BOR pexpr','expr',3,'p_expr_div_expr','asmparse.py',1280),
  ('expr -> pexpr BXOR pexpr','expr',3,'p_expr_div_expr','asmparse.py',1281),
  ('expr -> pexpr PLUS pexpr','expr',3,'p_expr_div_expr','asmparse.py',1282),
  ('expr -> pexpr MINUS pexpr','expr',3,'p_expr_div_expr','asmparse.py',1283),
  ('expr -> pexpr MUL pexpr','expr',3,'p_expr_div_expr','asmparse.py',1284),
  ('expr -> pexpr DIV pexpr','expr',3,'p_expr_div_expr','asmparse.py',1285),
  ('expr -> pexpr MOD pexpr','expr',3,'p_expr_div_expr','asmparse.py',1286),
  ('expr -> pexpr POW pexpr','expr',3,'p_expr_div_expr','asmparse.py',1287),
  ('expr -> pexpr LSHIFT pexpr','expr',3,'p_expr_div_expr','asmparse.py',1288),
  ('expr -> pexpr RSHIFT pexpr','expr',3,'p_expr_div_expr','asmparse.py',1289),
  ('pexpr -> LP expr RP','pexpr',3,'p_expr_lprp','asmparse.py',1295),
  ('expr -> MINUS expr','expr',2,'p_expr_uminus','asmparse.py',1301),
  ('expr -> INTEGER','expr',1,'p_expr_int','asmparse.py',1307),
  ('expr -> ID','expr',1,'p_expr_label','asmparse.py',1313),
  ('expr -> LPP expr RPP','expr',3,'p_expr_paren','asmparse.py',1319),
  ('expr -> ADDR','expr',1,'p_expr_addr','asmparse.py',1325),
  ('asm -> preproc_line','asm',1,'p_preprocessor_line','asmparse.py',1333),
  ('preproc_line -> _LINE INTEGER','preproc_line',2,'p_preprocessor_line_line','asmparse.py',1339),
  ('preproc_line -> _LINE INTEGER STRING','preproc_line',3,'p_preprocessor_line_line_file','asmparse.py',1345),
  ('preproc_line -> _INIT ID','preproc_line',2,'p_preproc_line_init','asmparse.py',1354),
]
