from ....tl.mtproto_request import MTProtoRequest


class FileCdnRedirect(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    upload.fileCdnRedirect#1508485a dc_id:int file_token:bytes encryption_key:bytes encryption_iv:bytes = upload.File"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0x1508485a
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x6c9bd728

    def __init__(self, dc_id, file_token, encryption_key, encryption_iv):
        """
        :param dc_id: Telegram type: "int".
        :param file_token: Telegram type: "bytes".
        :param encryption_key: Telegram type: "bytes".
        :param encryption_iv: Telegram type: "bytes".

        Constructor for upload.File: Instance of either File, FileCdnRedirect.
        """
        super().__init__()

        self.dc_id = dc_id
        self.file_token = file_token
        self.encryption_key = encryption_key
        self.encryption_iv = encryption_iv

    def to_dict(self):
        return {
            'dc_id': self.dc_id,
            'file_token': self.file_token,
            'encryption_key': self.encryption_key,
            'encryption_iv': self.encryption_iv,
        }

    def on_send(self, writer):
        writer.write_int(FileCdnRedirect.constructor_id, signed=False)
        writer.write_int(self.dc_id)
        writer.tgwrite_bytes(self.file_token)
        writer.tgwrite_bytes(self.encryption_key)
        writer.tgwrite_bytes(self.encryption_iv)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return FileCdnRedirect(None, None, None, None)

    def on_response(self, reader):
        self.dc_id = reader.read_int()
        self.file_token = reader.tgread_bytes()
        self.encryption_key = reader.tgread_bytes()
        self.encryption_iv = reader.tgread_bytes()

    def __repr__(self):
        return 'upload.fileCdnRedirect#1508485a dc_id:int file_token:bytes encryption_key:bytes encryption_iv:bytes = upload.File'

    def __str__(self):
        return MTProtoRequest.pretty_format(self)

    def stringify(self):
        return MTProtoRequest.pretty_format(self, indent=0)
