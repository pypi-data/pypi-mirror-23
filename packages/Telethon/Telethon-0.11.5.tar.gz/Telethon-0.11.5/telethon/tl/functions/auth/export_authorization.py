from ....tl.mtproto_request import MTProtoRequest


class ExportAuthorizationRequest(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    auth.exportAuthorization#e5bfffcd dc_id:int = auth.ExportedAuthorization"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0xe5bfffcd
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x5fd1ec51

    def __init__(self, dc_id):
        """
        :param dc_id: Telegram type: "int".

        :returns auth.ExportedAuthorization: Instance of ExportedAuthorization.
        """
        super().__init__()
        self.result = None
        self.confirmed = True  # Confirmed by default

        self.dc_id = dc_id

    def to_dict(self):
        return {
            'dc_id': self.dc_id,
        }

    def on_send(self, writer):
        writer.write_int(ExportAuthorizationRequest.constructor_id, signed=False)
        writer.write_int(self.dc_id)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return ExportAuthorizationRequest(None)

    def on_response(self, reader):
        self.result = reader.tgread_object()

    def __repr__(self):
        return 'auth.exportAuthorization#e5bfffcd dc_id:int = auth.ExportedAuthorization'

    def __str__(self):
        return MTProtoRequest.pretty_format(self)

    def stringify(self):
        return MTProtoRequest.pretty_format(self, indent=0)
