from ...tl.mtproto_request import MTProtoRequest


class ChannelParticipantKicked(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    channelParticipantKicked#8cc5e69a user_id:int kicked_by:int date:date = ChannelParticipant"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0x8cc5e69a
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0xd9c7fc18

    def __init__(self, user_id, kicked_by, date):
        """
        :param user_id: Telegram type: "int".
        :param kicked_by: Telegram type: "int".
        :param date: Telegram type: "date".

        Constructor for ChannelParticipant: Instance of either ChannelParticipant, ChannelParticipantSelf, ChannelParticipantModerator, ChannelParticipantEditor, ChannelParticipantKicked, ChannelParticipantCreator.
        """
        super().__init__()

        self.user_id = user_id
        self.kicked_by = kicked_by
        self.date = date

    def to_dict(self):
        return {
            'user_id': self.user_id,
            'kicked_by': self.kicked_by,
            'date': self.date,
        }

    def on_send(self, writer):
        writer.write_int(ChannelParticipantKicked.constructor_id, signed=False)
        writer.write_int(self.user_id)
        writer.write_int(self.kicked_by)
        writer.tgwrite_date(self.date)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return ChannelParticipantKicked(None, None, None)

    def on_response(self, reader):
        self.user_id = reader.read_int()
        self.kicked_by = reader.read_int()
        self.date = reader.tgread_date()

    def __repr__(self):
        return 'channelParticipantKicked#8cc5e69a user_id:int kicked_by:int date:date = ChannelParticipant'

    def __str__(self):
        return '(channelParticipantKicked (ID: 0x8cc5e69a) = (user_id={}, kicked_by={}, date={}))'.format(str(self.user_id), str(self.kicked_by), str(self.date))
