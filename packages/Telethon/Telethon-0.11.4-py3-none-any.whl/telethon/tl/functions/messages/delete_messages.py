from ....tl.mtproto_request import MTProtoRequest


class DeleteMessagesRequest(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    messages.deleteMessages#e58e95d2 flags:# revoke:flags.0?true id:Vector<int> = messages.AffectedMessages"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0xe58e95d2
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0xced3c06e

    def __init__(self, id, revoke=None):
        """
        :param revoke: Telegram type: "true".
        :param id: Telegram type: "int". Must be a list.

        :returns messages.AffectedMessages: Instance of AffectedMessages.
        """
        super().__init__()
        self.result = None
        self.confirmed = True  # Confirmed by default

        self.revoke = revoke
        self.id = id

    def to_dict(self):
        return {
            'revoke': self.revoke,
            'id': [] if self.id is None else self.id[:],
        }

    def on_send(self, writer):
        writer.write_int(DeleteMessagesRequest.constructor_id, signed=False)
        # Calculate the flags. This equals to those flag arguments which are NOT None
        flags = 0
        flags |= (1 << 0) if self.revoke else 0
        writer.write_int(flags)

        writer.write_int(0x1cb5c415, signed=False)  # Vector's constructor ID
        writer.write_int(len(self.id))
        for id_item in self.id:
            writer.write_int(id_item)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return DeleteMessagesRequest(None, None)

    def on_response(self, reader):
        self.result = reader.tgread_object()

    def __repr__(self):
        return 'messages.deleteMessages#e58e95d2 flags:# revoke:flags.0?true id:Vector<int> = messages.AffectedMessages'

    def __str__(self):
        return MTProtoRequest.pretty_format(self)

    def stringify(self):
        return MTProtoRequest.pretty_format(self, indent=0)
