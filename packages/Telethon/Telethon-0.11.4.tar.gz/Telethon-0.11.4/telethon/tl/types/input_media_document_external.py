from ...tl.mtproto_request import MTProtoRequest


class InputMediaDocumentExternal(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    inputMediaDocumentExternal#e5e9607c url:string caption:string = InputMedia"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0xe5e9607c
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0xfaf846f4

    def __init__(self, url, caption):
        """
        :param url: Telegram type: "string".
        :param caption: Telegram type: "string".

        Constructor for InputMedia: Instance of either InputMediaEmpty, InputMediaUploadedPhoto, InputMediaPhoto, InputMediaGeoPoint, InputMediaContact, InputMediaUploadedDocument, InputMediaUploadedThumbDocument, InputMediaDocument, InputMediaVenue, InputMediaGifExternal, InputMediaPhotoExternal, InputMediaDocumentExternal, InputMediaGame, InputMediaInvoice.
        """
        super().__init__()

        self.url = url
        self.caption = caption

    def to_dict(self):
        return {
            'url': self.url,
            'caption': self.caption,
        }

    def on_send(self, writer):
        writer.write_int(InputMediaDocumentExternal.constructor_id, signed=False)
        writer.tgwrite_string(self.url)
        writer.tgwrite_string(self.caption)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return InputMediaDocumentExternal(None, None)

    def on_response(self, reader):
        self.url = reader.tgread_string()
        self.caption = reader.tgread_string()

    def __repr__(self):
        return 'inputMediaDocumentExternal#e5e9607c url:string caption:string = InputMedia'

    def __str__(self):
        return MTProtoRequest.pretty_format(self)

    def stringify(self):
        return MTProtoRequest.pretty_format(self, indent=0)
