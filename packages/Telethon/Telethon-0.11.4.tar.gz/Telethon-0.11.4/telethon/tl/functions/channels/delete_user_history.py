from ....tl.mtproto_request import MTProtoRequest
from ....utils import get_input_user, get_input_channel


class DeleteUserHistoryRequest(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. TL definition below.
    channels.deleteUserHistory#d10dd71b channel:InputChannel user_id:InputUser = messages.AffectedHistory"""

    # Telegram's constructor (U)ID for this class
    constructor_id = 0xd10dd71b
    # Also the ID of its resulting type for fast checks
    subclass_of_id = 0x2c49c116

    def __init__(self, channel, user_id):
        """
        :param channel: Telegram type: "InputChannel".
        :param user_id: Telegram type: "InputUser".

        :returns messages.AffectedHistory: Instance of AffectedHistory.
        """
        super().__init__()
        self.result = None
        self.confirmed = True  # Confirmed by default

        self.channel = get_input_channel(channel)
        self.user_id = get_input_user(user_id)

    def to_dict(self):
        return {
            'channel': None if self.channel is None else self.channel.to_dict(),
            'user_id': None if self.user_id is None else self.user_id.to_dict(),
        }

    def on_send(self, writer):
        writer.write_int(DeleteUserHistoryRequest.constructor_id, signed=False)
        self.channel.on_send(writer)
        self.user_id.on_send(writer)

    @staticmethod
    def empty():
        """Returns an "empty" instance (attributes=None)"""
        return DeleteUserHistoryRequest(None, None)

    def on_response(self, reader):
        self.result = reader.tgread_object()

    def __repr__(self):
        return 'channels.deleteUserHistory#d10dd71b channel:InputChannel user_id:InputUser = messages.AffectedHistory'

    def __str__(self):
        return MTProtoRequest.pretty_format(self)

    def stringify(self):
        return MTProtoRequest.pretty_format(self, indent=0)
