Metadata-Version: 1.1
Name: django-dandelion
Version: 0.1.4
Summary: Use the Dandelion API with Django
Home-page: https://github.com/AlessioBazzanella/django-dandelion
Author: Alessio Bazzanella
Author-email: alessio.bazzanella@me.com
License: MIT
Description: .. _Dandelion: https://dandelion.eu
        
        Django Dandelion
        =============================
        
        .. image:: https://badge.fury.io/py/django-dandelion.svg
            :target: https://badge.fury.io/py/django-dandelion
            :alt: Version
        
        .. image:: https://travis-ci.org/AlessioBazzanella/django-dandelion.svg?branch=master
            :target: https://travis-ci.org/AlessioBazzanella/django-dandelion
            :alt: Build
        
        .. image:: https://codecov.io/gh/AlessioBazzanella/django-dandelion/branch/master/graph/badge.svg
            :target: https://codecov.io/gh/AlessioBazzanella/django-dandelion
            :alt: Codecov
        
        .. image:: https://requires.io/github/AlessioBazzanella/django-dandelion/requirements.svg?branch=master
            :target: https://requires.io/github/AlessioBazzanella/django-dandelion/requirements/?branch=master
            :alt: Requirements Status
            
        .. image:: https://img.shields.io/github/issues/AlessioBazzanella/django-dandelion.svg
            :target: https://github.com/AlessioBazzanella/django-dandelion/issues
            :alt: Issues
            
        .. image:: https://img.shields.io/pypi/pyversions/django-dandelion.svg
            :target: https://img.shields.io/pypi/pyversions/django-dandelion.svg
            :alt: Py versions
        
        .. image:: https://img.shields.io/badge/license-MIT-blue.svg
            :target: https://raw.githubusercontent.com/AlessioBazzanella/django-dandelion/master/LICENSE
            :alt: License
        
        Use the Dandelion_ API with Django
        
        Documentation
        -------------
        
        The full documentation is at https://django-dandelion.readthedocs.io.
        
        Quickstart
        ----------
        
        Install Django Dandelion:
        
        .. code-block:: bash
        
            $ pip install django-dandelion
        
        Add ``django_dandelion`` to your ``INSTALLED_APPS``
        
        .. code-block:: python
        
            INSTALLED_APPS = [
                # ...
                'django_dandelion',
            ]
        
        Add the entry DANDELION_TOKEN. The recommended method is to setup your production keys using environment
        variables. This helps to keep them more secure. Your test keys can be displayed in your code directly.
        
        The following entry look for your DANDELION_TOKEN in your environment and, if it canâ€™t find them,uses your test keys
        values instead:
        
        .. code-block:: python
        
            DANDELION_TOKEN = os.environ.get("DANDELION_TOKEN", "<your dandelion token>")
        
        Register on dandelion_ to obtain your authentication keys and enrich your application with our semantic intelligence.
        
        You can also change the url of the host and decide whether to use the cache:
        
        .. code-block:: python
        
            DANDELION_HOST = 'api.dandelion.eu'  # Default 'api.dandelion.eu'
            DANDELION_USE_CACHE = True  # Default True
        
        Running Tests
        -------------
        
        Does the code actually work?
        
        .. code-block:: bash
        
            # Add "export DANDELION_TOKEN=<your dandelion token>" to <YOURVIRTUALENV>/bin/activate
            $ source <YOURVIRTUALENV>/bin/activate
            $ (myenv) $ pip install tox
            $ (myenv) $ tox
        
        
        
        
        .. _KeepAChangelog: http://keepachangelog.com/
        .. _SemanticVersioning: http://semver.org/
        
        Change Log
        ----------
        
        All notable changes to this project will be documented in this file.
        
        The format is based on KeepAChangelog_ and this project adheres to SemanticVersioning_.
        
        
        [0.1.4] - 2017-06-29
        ++++++++++++++++++++
        
        Added
        ~~~~~
        * Added ``top_entities`` and ``epsilon`` params to ``EntityExtraction``
        * Added ``nex.top_entities`` and ``nex.epsilon`` params to ``TextSimilarity``
        * Added ``nex.top_entities``, ``nex.min_confidence``, ``nex.min_length``, ``nex.social.hashtag``, ``nex.social.mention``, ``nex.include``,
        ``nex.extra_types``, ``nex.country``, ``nex.custom_spots`` and ``nex.epsilon`` params to ``TextSimilarity``
        
        
        [0.1.3] - 2017-03-14
        ++++++++++++++++++++
        
        Fixed
        ~~~~~
        * Merge extra_dict with params in BaseDandelionParamsRequest._do_request
        * Fixed app name in documentation to add to ``INSTALLED_APPS``
        
        
        [0.1.2] - 2017-03-10
        ++++++++++++++++++++
        
        Added
        ~~~~~
        * User-defined spots (EntityExtraction.UserDefinedSpots())
        
        
        [0.1.1] - 2017-03-10
        ++++++++++++++++++++
        
        Fixed
        ~~~~~
        * PyPI version release
        
        
        [0.1.0] - 2017-03-10
        ++++++++++++++++++++
        
        * First release on PyPI.
        
Keywords: django-dandelion,dandelion,api,semantic text analytics
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Framework :: Django
Classifier: Framework :: Django :: 1.8
Classifier: Framework :: Django :: 1.9
Classifier: Framework :: Django :: 1.10
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
