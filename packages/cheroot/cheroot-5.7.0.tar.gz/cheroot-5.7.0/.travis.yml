language: python
_base_envs:
- &stage_lint
  stage: lint
- &stage_test
  stage: test
- &stage_test_priority
  stage: test against latest Python versions first (under GNU/Linux)
- &stage_test_osx
  stage: test under OS X (last chance to fail before deploy available)
- &stage_deploy
  stage: upload new version of python package to PYPI (only for tagged commits)
- &linux_base
  os: linux
  sudo: false
- &pyenv_base
  <<: *stage_test
  language: generic
  python: pypy
  dist: trusty
  sudo: required
  group: edge
  addons:
    apt:
      packages:
      - make
      - build-essential
      - libssl-dev
      - zlib1g-dev
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - wget
      - curl
      - llvm
      - libncurses5-dev
      - libncursesw5-dev
      - xz-utils
      - tk-dev
  env:
  - PYTHON_VERSION=pypy2-5.7.1
  - &env_pyenv PYENV_ROOT="$HOME/.pyenv"
  - &env_path PATH="$PYENV_ROOT/bin:$PATH"
  before_install:
  - &ensure_pyenv_installed |
    if [ -f "$PYENV_ROOT/bin/pyenv" ]
    then
      eval "$(pyenv init -)"
      eval "$(pyenv virtualenv-init -)"
      pyenv update
    else
      rm -rf "$PYENV_ROOT"
      curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash
      eval "$(pyenv init -)"
      eval "$(pyenv virtualenv-init -)"
    fi
  - &install_python pyenv install --skip-existing --keep --verbose "$PYTHON_VERSION"
  - &switch_python pyenv shell "$PYTHON_VERSION"
  - &python_version python --version
- &linux_python_base
  <<: *linux_base
  <<: *pyenv_base
- &osx_python_base
  <<: *pyenv_base
  <<: *stage_test_osx
  os: osx
  language: generic
  before_install:
  - brew update
  - brew install readline xz
  - *ensure_pyenv_installed
  - *install_python
  - *switch_python
  - *python_version
  before_cache:
  - brew --cache
- &pure_python_base
  <<: *stage_test
  sudo: false
  python: &mainstream_python 3.6
- &pure_python_base_priority
  <<: *pure_python_base
  <<: *stage_test_priority
- &lint_python_base
  <<: *stage_lint
  python: *mainstream_python
  after_failure: skip
jobs:
  fast_finish: true
  allow_failures:
  - env: TOXENV=pre-commit-pep257
  include:
  - <<: *lint_python_base
    env: TOXENV=pre-commit
  - <<: *lint_python_base
    env: TOXENV=pre-commit-pep257
  - <<: *pure_python_base_priority
    # mainstream here (3.6)
  - <<: *pure_python_base_priority
    python: nightly
  - <<: *pure_python_base
    python: 2.6
  - <<: *pure_python_base
    python: 2.7
  - <<: *pure_python_base
    python: 3.3
  - <<: *pure_python_base
    python: 3.4
  - <<: *pure_python_base
    python: 3.5
  - <<: *linux_python_base
    python: pypy
    env:
    - PYTHON_VERSION=pypy2-5.7.1
    - *env_pyenv
    - *env_path
  - <<: *linux_python_base
    python: pypy3
    env:
    - PYTHON_VERSION=pypy3.5-5.7.1-beta
    - *env_pyenv
    - *env_path
  - <<: *osx_python_base
    python: 2.6
    env:
    - PYTHON_VERSION=2.6.9
    - *env_pyenv
    - *env_path
  - <<: *osx_python_base
    python: 2.7
    env:
    - PYTHON_VERSION=2.7.13
    - *env_pyenv
    - *env_path
  - <<: *osx_python_base
    python: 3.3
    env:
    - PYTHON_VERSION=3.3.6
    - *env_pyenv
    - *env_path
  - <<: *osx_python_base
    python: 3.4
    env:
    - PYTHON_VERSION=3.4.6
    - *env_pyenv
    - *env_path
  - <<: *osx_python_base
    python: 3.5
    env:
    - PYTHON_VERSION=3.5.3
    - *env_pyenv
    - *env_path
  - <<: *osx_python_base
    python: *mainstream_python
    env:
    - PYTHON_VERSION=3.6.1
    - *env_pyenv
    - *env_path
  - <<: *osx_python_base
    python: nightly
    env:
    - PYTHON_VERSION=3.7-dev
    - *env_pyenv
    - *env_path
  - <<: *osx_python_base
    python: pypy2-5.7.1
    env:
    - PYTHON_VERSION=pypy2-5.7.1
    - *env_pyenv
    - *env_path
  # pypy3.5-5.7.1-beta fails under OS X because it's unsupported (PR #26)
  - <<: *stage_deploy
    python: *mainstream_python
    install: skip
    script: skip
    deploy:
      provider: pypi
      server: https://upload.pypi.org/legacy/
      on:
        tags: true
        all_branches: true
        python: *mainstream_python
      user: jaraco
      distributions: dists
      skip_upload_docs: true
      password:
        secure: RAfz06AINvz7bfij/YhfkAreRqamgxS8a6jSRNxntYhtJke3ZszUbIDag8+n1I+G5XT2LnMhHqPNR7Plc+AeMz7VXTuy+b81Li5kse20NYlPhd7mBVmTUpXtqYQashV5J39F4qkATBLznCOrMEomM07VTXjO/o2hmQuXniab2Uo=
cache:
  pip: true
  directories:
  - $HOME/.pre-commit
  - $HOME/Library/Caches/Homebrew
install:
- pip install tox "setuptools>=28.2"
script:
- tox
after_failure:
- echo "Here's a list of installed Python packages:"
- pip list --format=columns
- echo Dumping logs, because tests failed to succeed
- |
    for log in `ls cheroot/test/*.log`
    do
      echo Outputting $log
      cat $log
    done
- py_log=/home/travis/build/cherrypy/cheroot/.tox/python/log/python-0.log
- echo Outputting python invokation log from $py_log
- cat $py_log
branches:
  except:
  - skeleton
