# coding: utf-8

"""
    Apprenda.DeveloperPortal.Web

    The Application Management REST API can be leveraged to customize the Developer experience of deploying and managing applications  on the Apprenda Platform. This allows some of the functionality of the Platform's [Developer Portal](/current/developer-portal)to be accomplished through a variety of means such as custom-built UX or command-line interfaces.     ##Authentication    Before making a request, you must be authenticated. Learn how to [get authenticated](/restapi/appmanagement/v1/authentication).    ##Making a Request    ###Prerequisites    * Installed Platform of version 4.5.0 or later     * Authentication token     * To use this API you must be part of a [Development Team or Tenant](/current/create-users) and have an [active subscription](/current/dev-portal-setup#create) to Developer Portal    ###Request URL    All requests must use **https**.    The URL for every request you make is the Cloud URI of your Platform followed by \"/developer\" and the path structure of the endpoint. For example, if your Cloud URI is apps.apprenda.harp and you want to get the Add-ons for your Platform, the request URI will be **apps.apprenda.harp/developer/api/v1/addons**.      For more information, see our documentation on [using API resources](/restapi/appmanagement/v1/resources) and [finding your Cloud URI](/current/clouduri).

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class InlineResponse2005DeployedAddOns(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, deploy_time=None, alias=None, connection_data=None, add_on=None, instance_alias=None, href=None):
        """
        InlineResponse2005DeployedAddOns - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'deploy_time': 'datetime',
            'alias': 'str',
            'connection_data': 'str',
            'add_on': 'InlineResponse200Roles',
            'instance_alias': 'str',
            'href': 'str'
        }

        self.attribute_map = {
            'deploy_time': 'deployTime',
            'alias': 'alias',
            'connection_data': 'connectionData',
            'add_on': 'addOn',
            'instance_alias': 'instanceAlias',
            'href': 'href'
        }

        self._deploy_time = deploy_time
        self._alias = alias
        self._connection_data = connection_data
        self._add_on = add_on
        self._instance_alias = instance_alias
        self._href = href

    @property
    def deploy_time(self):
        """
        Gets the deploy_time of this InlineResponse2005DeployedAddOns.

        :return: The deploy_time of this InlineResponse2005DeployedAddOns.
        :rtype: datetime
        """
        return self._deploy_time

    @deploy_time.setter
    def deploy_time(self, deploy_time):
        """
        Sets the deploy_time of this InlineResponse2005DeployedAddOns.

        :param deploy_time: The deploy_time of this InlineResponse2005DeployedAddOns.
        :type: datetime
        """

        self._deploy_time = deploy_time

    @property
    def alias(self):
        """
        Gets the alias of this InlineResponse2005DeployedAddOns.

        :return: The alias of this InlineResponse2005DeployedAddOns.
        :rtype: str
        """
        return self._alias

    @alias.setter
    def alias(self, alias):
        """
        Sets the alias of this InlineResponse2005DeployedAddOns.

        :param alias: The alias of this InlineResponse2005DeployedAddOns.
        :type: str
        """

        self._alias = alias

    @property
    def connection_data(self):
        """
        Gets the connection_data of this InlineResponse2005DeployedAddOns.

        :return: The connection_data of this InlineResponse2005DeployedAddOns.
        :rtype: str
        """
        return self._connection_data

    @connection_data.setter
    def connection_data(self, connection_data):
        """
        Sets the connection_data of this InlineResponse2005DeployedAddOns.

        :param connection_data: The connection_data of this InlineResponse2005DeployedAddOns.
        :type: str
        """

        self._connection_data = connection_data

    @property
    def add_on(self):
        """
        Gets the add_on of this InlineResponse2005DeployedAddOns.

        :return: The add_on of this InlineResponse2005DeployedAddOns.
        :rtype: InlineResponse200Roles
        """
        return self._add_on

    @add_on.setter
    def add_on(self, add_on):
        """
        Sets the add_on of this InlineResponse2005DeployedAddOns.

        :param add_on: The add_on of this InlineResponse2005DeployedAddOns.
        :type: InlineResponse200Roles
        """

        self._add_on = add_on

    @property
    def instance_alias(self):
        """
        Gets the instance_alias of this InlineResponse2005DeployedAddOns.

        :return: The instance_alias of this InlineResponse2005DeployedAddOns.
        :rtype: str
        """
        return self._instance_alias

    @instance_alias.setter
    def instance_alias(self, instance_alias):
        """
        Sets the instance_alias of this InlineResponse2005DeployedAddOns.

        :param instance_alias: The instance_alias of this InlineResponse2005DeployedAddOns.
        :type: str
        """

        self._instance_alias = instance_alias

    @property
    def href(self):
        """
        Gets the href of this InlineResponse2005DeployedAddOns.

        :return: The href of this InlineResponse2005DeployedAddOns.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """
        Sets the href of this InlineResponse2005DeployedAddOns.

        :param href: The href of this InlineResponse2005DeployedAddOns.
        :type: str
        """

        self._href = href

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, InlineResponse2005DeployedAddOns):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
