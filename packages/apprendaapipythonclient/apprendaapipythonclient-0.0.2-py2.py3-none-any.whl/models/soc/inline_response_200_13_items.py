# coding: utf-8

"""
    Platform Operations Rest API

    The Platform Operations REST API can be leveraged to customize the Platform Operator experience of managing infrastructure and applications for the Apprenda Platform. This allows some of the functionality of the Platform's System Operations Center (SOC) to be accomplished through a variety of means such as custom-built UX or command-line interfaces.   For more information about the abilities of Platform Operators, see our documentation on the [SOC](/current/SOC).   ##Authentication   Before making a request, you must be authenticated. Learn how to [get authenticated](/restapi/platformops/v1/authentication).   ##Making a Request   ###Prerequisites   * Installed Platform of version 6.5.1 or later (Note that most endpoints are only available in version 6.7.0 and later)    * Authentication token   * If SOC authorization is enabled on your Platform, you must be assigned as an active Platform Operator   ###Request URL   All requests must use **https**.   The URL for every request you make is the Cloud URI of your Platform followed by \"/soc\" and the path structure of the endpoint. For example, if your Cloud URI is apps.apprenda.harp and you want to get the Add-ons for your Platform, the request URI will be **apps.apprenda.harp/soc/api/v1/addons**.   For more information, see our documentation on [using API resources](/restapi/platformops/v1/using-resources) and [finding your Cloud URI](/current/clouduri).   ###Request Headers   Your authenication token must be passed in the header of all requests using the key **ApprendaSessionToken** (not case sensitive).  

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class InlineResponse20013Items(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, name=None, href=None, state=None, profiles=None, is_transitioning=None, transition_reason=None, is_container_running=None, os_version=None, apprenda_platform_version=None, is_ghost=None, total_memory=None, total_actual_memory=None, clock_speed=None, processor_count=None, allocated_memory=None, total_storage=None, allocated_storage=None, allocated_cpu=None, architecture=None, cloud_name=None, resource_allocation=None, workloads=None):
        """
        InlineResponse20013Items - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'name': 'str',
            'href': 'str',
            'state': 'InlineResponse20013State',
            'profiles': 'list[InlineResponse20013Profiles]',
            'is_transitioning': 'bool',
            'transition_reason': 'str',
            'is_container_running': 'bool',
            'os_version': 'str',
            'apprenda_platform_version': 'str',
            'is_ghost': 'bool',
            'total_memory': 'int',
            'total_actual_memory': 'int',
            'clock_speed': 'int',
            'processor_count': 'int',
            'allocated_memory': 'int',
            'total_storage': 'int',
            'allocated_storage': 'int',
            'allocated_cpu': 'int',
            'architecture': 'float',
            'cloud_name': 'str',
            'resource_allocation': 'InlineResponse2005ResourceAllocation',
            'workloads': 'InlineResponse2001Version'
        }

        self.attribute_map = {
            'name': 'name',
            'href': 'href',
            'state': 'state',
            'profiles': 'profiles',
            'is_transitioning': 'isTransitioning',
            'transition_reason': 'transitionReason',
            'is_container_running': 'isContainerRunning',
            'os_version': 'osVersion',
            'apprenda_platform_version': 'apprendaPlatformVersion',
            'is_ghost': 'isGhost',
            'total_memory': 'totalMemory',
            'total_actual_memory': 'totalActualMemory',
            'clock_speed': 'clockSpeed',
            'processor_count': 'processorCount',
            'allocated_memory': 'allocatedMemory',
            'total_storage': 'totalStorage',
            'allocated_storage': 'allocatedStorage',
            'allocated_cpu': 'allocatedCpu',
            'architecture': 'architecture',
            'cloud_name': 'cloudName',
            'resource_allocation': 'resourceAllocation',
            'workloads': 'workloads'
        }

        self._name = name
        self._href = href
        self._state = state
        self._profiles = profiles
        self._is_transitioning = is_transitioning
        self._transition_reason = transition_reason
        self._is_container_running = is_container_running
        self._os_version = os_version
        self._apprenda_platform_version = apprenda_platform_version
        self._is_ghost = is_ghost
        self._total_memory = total_memory
        self._total_actual_memory = total_actual_memory
        self._clock_speed = clock_speed
        self._processor_count = processor_count
        self._allocated_memory = allocated_memory
        self._total_storage = total_storage
        self._allocated_storage = allocated_storage
        self._allocated_cpu = allocated_cpu
        self._architecture = architecture
        self._cloud_name = cloud_name
        self._resource_allocation = resource_allocation
        self._workloads = workloads

    @property
    def name(self):
        """
        Gets the name of this InlineResponse20013Items.

        :return: The name of this InlineResponse20013Items.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this InlineResponse20013Items.

        :param name: The name of this InlineResponse20013Items.
        :type: str
        """

        self._name = name

    @property
    def href(self):
        """
        Gets the href of this InlineResponse20013Items.

        :return: The href of this InlineResponse20013Items.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """
        Sets the href of this InlineResponse20013Items.

        :param href: The href of this InlineResponse20013Items.
        :type: str
        """

        self._href = href

    @property
    def state(self):
        """
        Gets the state of this InlineResponse20013Items.

        :return: The state of this InlineResponse20013Items.
        :rtype: InlineResponse20013State
        """
        return self._state

    @state.setter
    def state(self, state):
        """
        Sets the state of this InlineResponse20013Items.

        :param state: The state of this InlineResponse20013Items.
        :type: InlineResponse20013State
        """

        self._state = state

    @property
    def profiles(self):
        """
        Gets the profiles of this InlineResponse20013Items.

        :return: The profiles of this InlineResponse20013Items.
        :rtype: list[InlineResponse20013Profiles]
        """
        return self._profiles

    @profiles.setter
    def profiles(self, profiles):
        """
        Sets the profiles of this InlineResponse20013Items.

        :param profiles: The profiles of this InlineResponse20013Items.
        :type: list[InlineResponse20013Profiles]
        """

        self._profiles = profiles

    @property
    def is_transitioning(self):
        """
        Gets the is_transitioning of this InlineResponse20013Items.

        :return: The is_transitioning of this InlineResponse20013Items.
        :rtype: bool
        """
        return self._is_transitioning

    @is_transitioning.setter
    def is_transitioning(self, is_transitioning):
        """
        Sets the is_transitioning of this InlineResponse20013Items.

        :param is_transitioning: The is_transitioning of this InlineResponse20013Items.
        :type: bool
        """

        self._is_transitioning = is_transitioning

    @property
    def transition_reason(self):
        """
        Gets the transition_reason of this InlineResponse20013Items.

        :return: The transition_reason of this InlineResponse20013Items.
        :rtype: str
        """
        return self._transition_reason

    @transition_reason.setter
    def transition_reason(self, transition_reason):
        """
        Sets the transition_reason of this InlineResponse20013Items.

        :param transition_reason: The transition_reason of this InlineResponse20013Items.
        :type: str
        """

        self._transition_reason = transition_reason

    @property
    def is_container_running(self):
        """
        Gets the is_container_running of this InlineResponse20013Items.

        :return: The is_container_running of this InlineResponse20013Items.
        :rtype: bool
        """
        return self._is_container_running

    @is_container_running.setter
    def is_container_running(self, is_container_running):
        """
        Sets the is_container_running of this InlineResponse20013Items.

        :param is_container_running: The is_container_running of this InlineResponse20013Items.
        :type: bool
        """

        self._is_container_running = is_container_running

    @property
    def os_version(self):
        """
        Gets the os_version of this InlineResponse20013Items.

        :return: The os_version of this InlineResponse20013Items.
        :rtype: str
        """
        return self._os_version

    @os_version.setter
    def os_version(self, os_version):
        """
        Sets the os_version of this InlineResponse20013Items.

        :param os_version: The os_version of this InlineResponse20013Items.
        :type: str
        """

        self._os_version = os_version

    @property
    def apprenda_platform_version(self):
        """
        Gets the apprenda_platform_version of this InlineResponse20013Items.

        :return: The apprenda_platform_version of this InlineResponse20013Items.
        :rtype: str
        """
        return self._apprenda_platform_version

    @apprenda_platform_version.setter
    def apprenda_platform_version(self, apprenda_platform_version):
        """
        Sets the apprenda_platform_version of this InlineResponse20013Items.

        :param apprenda_platform_version: The apprenda_platform_version of this InlineResponse20013Items.
        :type: str
        """

        self._apprenda_platform_version = apprenda_platform_version

    @property
    def is_ghost(self):
        """
        Gets the is_ghost of this InlineResponse20013Items.

        :return: The is_ghost of this InlineResponse20013Items.
        :rtype: bool
        """
        return self._is_ghost

    @is_ghost.setter
    def is_ghost(self, is_ghost):
        """
        Sets the is_ghost of this InlineResponse20013Items.

        :param is_ghost: The is_ghost of this InlineResponse20013Items.
        :type: bool
        """

        self._is_ghost = is_ghost

    @property
    def total_memory(self):
        """
        Gets the total_memory of this InlineResponse20013Items.

        :return: The total_memory of this InlineResponse20013Items.
        :rtype: int
        """
        return self._total_memory

    @total_memory.setter
    def total_memory(self, total_memory):
        """
        Sets the total_memory of this InlineResponse20013Items.

        :param total_memory: The total_memory of this InlineResponse20013Items.
        :type: int
        """

        self._total_memory = total_memory

    @property
    def total_actual_memory(self):
        """
        Gets the total_actual_memory of this InlineResponse20013Items.

        :return: The total_actual_memory of this InlineResponse20013Items.
        :rtype: int
        """
        return self._total_actual_memory

    @total_actual_memory.setter
    def total_actual_memory(self, total_actual_memory):
        """
        Sets the total_actual_memory of this InlineResponse20013Items.

        :param total_actual_memory: The total_actual_memory of this InlineResponse20013Items.
        :type: int
        """

        self._total_actual_memory = total_actual_memory

    @property
    def clock_speed(self):
        """
        Gets the clock_speed of this InlineResponse20013Items.

        :return: The clock_speed of this InlineResponse20013Items.
        :rtype: int
        """
        return self._clock_speed

    @clock_speed.setter
    def clock_speed(self, clock_speed):
        """
        Sets the clock_speed of this InlineResponse20013Items.

        :param clock_speed: The clock_speed of this InlineResponse20013Items.
        :type: int
        """

        self._clock_speed = clock_speed

    @property
    def processor_count(self):
        """
        Gets the processor_count of this InlineResponse20013Items.

        :return: The processor_count of this InlineResponse20013Items.
        :rtype: int
        """
        return self._processor_count

    @processor_count.setter
    def processor_count(self, processor_count):
        """
        Sets the processor_count of this InlineResponse20013Items.

        :param processor_count: The processor_count of this InlineResponse20013Items.
        :type: int
        """

        self._processor_count = processor_count

    @property
    def allocated_memory(self):
        """
        Gets the allocated_memory of this InlineResponse20013Items.

        :return: The allocated_memory of this InlineResponse20013Items.
        :rtype: int
        """
        return self._allocated_memory

    @allocated_memory.setter
    def allocated_memory(self, allocated_memory):
        """
        Sets the allocated_memory of this InlineResponse20013Items.

        :param allocated_memory: The allocated_memory of this InlineResponse20013Items.
        :type: int
        """

        self._allocated_memory = allocated_memory

    @property
    def total_storage(self):
        """
        Gets the total_storage of this InlineResponse20013Items.

        :return: The total_storage of this InlineResponse20013Items.
        :rtype: int
        """
        return self._total_storage

    @total_storage.setter
    def total_storage(self, total_storage):
        """
        Sets the total_storage of this InlineResponse20013Items.

        :param total_storage: The total_storage of this InlineResponse20013Items.
        :type: int
        """

        self._total_storage = total_storage

    @property
    def allocated_storage(self):
        """
        Gets the allocated_storage of this InlineResponse20013Items.

        :return: The allocated_storage of this InlineResponse20013Items.
        :rtype: int
        """
        return self._allocated_storage

    @allocated_storage.setter
    def allocated_storage(self, allocated_storage):
        """
        Sets the allocated_storage of this InlineResponse20013Items.

        :param allocated_storage: The allocated_storage of this InlineResponse20013Items.
        :type: int
        """

        self._allocated_storage = allocated_storage

    @property
    def allocated_cpu(self):
        """
        Gets the allocated_cpu of this InlineResponse20013Items.

        :return: The allocated_cpu of this InlineResponse20013Items.
        :rtype: int
        """
        return self._allocated_cpu

    @allocated_cpu.setter
    def allocated_cpu(self, allocated_cpu):
        """
        Sets the allocated_cpu of this InlineResponse20013Items.

        :param allocated_cpu: The allocated_cpu of this InlineResponse20013Items.
        :type: int
        """

        self._allocated_cpu = allocated_cpu

    @property
    def architecture(self):
        """
        Gets the architecture of this InlineResponse20013Items.

        :return: The architecture of this InlineResponse20013Items.
        :rtype: float
        """
        return self._architecture

    @architecture.setter
    def architecture(self, architecture):
        """
        Sets the architecture of this InlineResponse20013Items.

        :param architecture: The architecture of this InlineResponse20013Items.
        :type: float
        """

        self._architecture = architecture

    @property
    def cloud_name(self):
        """
        Gets the cloud_name of this InlineResponse20013Items.

        :return: The cloud_name of this InlineResponse20013Items.
        :rtype: str
        """
        return self._cloud_name

    @cloud_name.setter
    def cloud_name(self, cloud_name):
        """
        Sets the cloud_name of this InlineResponse20013Items.

        :param cloud_name: The cloud_name of this InlineResponse20013Items.
        :type: str
        """

        self._cloud_name = cloud_name

    @property
    def resource_allocation(self):
        """
        Gets the resource_allocation of this InlineResponse20013Items.

        :return: The resource_allocation of this InlineResponse20013Items.
        :rtype: InlineResponse2005ResourceAllocation
        """
        return self._resource_allocation

    @resource_allocation.setter
    def resource_allocation(self, resource_allocation):
        """
        Sets the resource_allocation of this InlineResponse20013Items.

        :param resource_allocation: The resource_allocation of this InlineResponse20013Items.
        :type: InlineResponse2005ResourceAllocation
        """

        self._resource_allocation = resource_allocation

    @property
    def workloads(self):
        """
        Gets the workloads of this InlineResponse20013Items.

        :return: The workloads of this InlineResponse20013Items.
        :rtype: InlineResponse2001Version
        """
        return self._workloads

    @workloads.setter
    def workloads(self, workloads):
        """
        Sets the workloads of this InlineResponse20013Items.

        :param workloads: The workloads of this InlineResponse20013Items.
        :type: InlineResponse2001Version
        """

        self._workloads = workloads

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, InlineResponse20013Items):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
