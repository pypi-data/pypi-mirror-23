
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "NUM VAR COMMA SQ_LPARENT SQ_RPARENT LPARENT RPARENT TRUE FALSE IN SUBSET EQ LT GT LE NE GE AND OR EQU STRING NOT kwl : kwv\n                | kwv ';'\n         kwl : kwv ';' kwl  kwl : mexp\n                | mexp ';'\n         kwl : \n         kwv : VAR EQU mexp  mexp   : NOT mexp\n         mexp   : LPARENT mexp RPARENT\n         mexp    : mexp '+' mexp\n                    | mexp '-' mexp\n         mexp    : mexp2  mexp2   :   mexp '*' mexp\n                    |   mexp '/' mexp\n         mexp2   :   mexp AND mexp\n                    |   mexp OR mexp\n         mexp2   :   mexp GE mexp\n                    |   mexp LE mexp \n                    |   mexp LT mexp \n                    |   mexp GT mexp\n         mexp2   :   mexp NE mexp \n                    |   mexp EQ mexp\n         mexp2   :   mexp IN lexp  mexp2   :   mexp IN VAR  mexp2   :   mexp SUBSET lexp  mexp2   :   mexp SUBSET VAR  mexp2   :   term  lexp    :   SQ_LPARENT l SQ_RPARENT\n         l       :    l       :   mexp     l       :   mexp COMMA l term   :    VAR  term   :    '-' VAR  term    :   TRUE\n                    |   FALSE  term    :   NUM  term    :   '-' NUM  term    :   lexp  term    :   STRING  term    :   "
    
_lr_action_items = {'SUBSET':([0,1,2,5,6,7,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[-40,-12,-40,-34,-40,-38,-36,-39,-32,-27,-35,25,-40,-32,25,-40,25,-33,-37,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,25,-28,-40,-9,25,25,-25,-26,25,25,25,25,25,25,25,25,25,-23,-24,25,25,]),'SQ_LPARENT':([0,2,6,15,19,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,41,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'TRUE':([0,2,6,15,19,23,24,26,27,28,29,30,31,32,33,34,37,38,41,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'LPARENT':([0,2,6,15,19,23,24,26,27,28,29,30,31,32,33,34,37,38,41,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'SQ_RPARENT':([1,2,5,7,9,10,12,13,15,16,17,18,21,22,24,26,27,28,29,30,31,32,33,34,37,38,39,40,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,],[-12,-29,-34,-38,-36,-39,-27,-35,-40,-32,40,-30,-33,-37,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-8,-28,-29,-9,-15,-25,-26,-18,-10,-13,-11,-19,-21,-17,-20,-14,-23,-24,-22,-16,-31,]),'+':([0,1,2,5,6,7,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[-40,-12,-40,-34,-40,-38,-36,-39,-32,-27,-35,27,-40,-32,27,-40,27,-33,-37,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,27,-28,-40,-9,27,27,-25,-26,27,27,27,27,27,27,27,27,27,-23,-24,27,27,]),'*':([0,1,2,5,6,7,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[-40,-12,-40,-34,-40,-38,-36,-39,-32,-27,-35,28,-40,-32,28,-40,28,-33,-37,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,28,-28,-40,-9,28,28,-25,-26,28,28,28,28,28,28,28,28,28,-23,-24,28,28,]),'-':([0,1,2,5,6,7,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[8,-12,8,-34,8,-38,-36,-39,-32,-27,-35,29,8,-32,29,8,29,-33,-37,8,8,8,8,8,8,8,8,8,8,8,8,8,29,-28,8,-9,29,29,-25,-26,29,29,29,29,29,29,29,29,29,-23,-24,29,29,]),'NE':([0,1,2,5,6,7,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[-40,-12,-40,-34,-40,-38,-36,-39,-32,-27,-35,31,-40,-32,31,-40,31,-33,-37,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,31,-28,-40,-9,31,31,-25,-26,31,31,31,31,31,31,31,31,31,-23,-24,31,31,]),'/':([0,1,2,5,6,7,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[-40,-12,-40,-34,-40,-38,-36,-39,-32,-27,-35,34,-40,-32,34,-40,34,-33,-37,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,34,-28,-40,-9,34,34,-25,-26,34,34,34,34,34,34,34,34,34,-23,-24,34,34,]),'LT':([0,1,2,5,6,7,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[-40,-12,-40,-34,-40,-38,-36,-39,-32,-27,-35,30,-40,-32,30,-40,30,-33,-37,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,30,-28,-40,-9,30,30,-25,-26,30,30,30,30,30,30,30,30,30,-23,-24,30,30,]),'NUM':([0,2,6,8,15,19,23,24,26,27,28,29,30,31,32,33,34,37,38,41,],[9,9,9,22,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'COMMA':([1,2,5,7,9,10,12,13,15,16,18,21,22,24,26,27,28,29,30,31,32,33,34,37,38,39,40,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[-12,-40,-34,-38,-36,-39,-27,-35,-40,-32,41,-33,-37,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-8,-28,-40,-9,-15,-25,-26,-18,-10,-13,-11,-19,-21,-17,-20,-14,-23,-24,-22,-16,]),'RPARENT':([1,5,6,7,9,10,12,13,15,16,20,21,22,24,26,27,28,29,30,31,32,33,34,37,38,39,40,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[-12,-34,-40,-38,-36,-39,-27,-35,-40,-32,43,-33,-37,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-8,-28,-9,-15,-25,-26,-18,-10,-13,-11,-19,-21,-17,-20,-14,-23,-24,-22,-16,]),';':([0,1,4,5,7,9,10,11,12,13,14,15,16,19,21,22,23,24,26,27,28,29,30,31,32,33,34,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[-40,-12,19,-34,-38,-36,-39,-32,-27,-35,36,-40,-32,-40,-33,-37,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-8,-28,-9,-7,-15,-25,-26,-18,-10,-13,-11,-19,-21,-17,-20,-14,-23,-24,-22,-16,]),'$end':([0,1,3,4,5,7,9,10,11,12,13,14,15,16,19,21,22,23,24,26,27,28,29,30,31,32,33,34,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[-6,-12,0,-1,-34,-38,-36,-39,-32,-27,-35,-4,-40,-32,-2,-33,-37,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-5,-40,-40,-8,-28,-3,-9,-7,-15,-25,-26,-18,-10,-13,-11,-19,-21,-17,-20,-14,-23,-24,-22,-16,]),'GT':([0,1,2,5,6,7,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[-40,-12,-40,-34,-40,-38,-36,-39,-32,-27,-35,33,-40,-32,33,-40,33,-33,-37,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,33,-28,-40,-9,33,33,-25,-26,33,33,33,33,33,33,33,33,33,-23,-24,33,33,]),'STRING':([0,2,6,15,19,23,24,26,27,28,29,30,31,32,33,34,37,38,41,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'EQU':([11,],[23,]),'GE':([0,1,2,5,6,7,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[-40,-12,-40,-34,-40,-38,-36,-39,-32,-27,-35,32,-40,-32,32,-40,32,-33,-37,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,32,-28,-40,-9,32,32,-25,-26,32,32,32,32,32,32,32,32,32,-23,-24,32,32,]),'LE':([0,1,2,5,6,7,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[-40,-12,-40,-34,-40,-38,-36,-39,-32,-27,-35,26,-40,-32,26,-40,26,-33,-37,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,26,-28,-40,-9,26,26,-25,-26,26,26,26,26,26,26,26,26,26,-23,-24,26,26,]),'IN':([0,1,2,5,6,7,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[-40,-12,-40,-34,-40,-38,-36,-39,-32,-27,-35,35,-40,-32,35,-40,35,-33,-37,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,35,-28,-40,-9,35,35,-25,-26,35,35,35,35,35,35,35,35,35,-23,-24,35,35,]),'VAR':([0,2,6,8,15,19,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,41,],[11,16,16,21,16,11,16,16,47,16,16,16,16,16,16,16,16,16,58,16,16,16,]),'EQ':([0,1,2,5,6,7,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[-40,-12,-40,-34,-40,-38,-36,-39,-32,-27,-35,37,-40,-32,37,-40,37,-33,-37,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,37,-28,-40,-9,37,37,-25,-26,37,37,37,37,37,37,37,37,37,-23,-24,37,37,]),'AND':([0,1,2,5,6,7,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[-40,-12,-40,-34,-40,-38,-36,-39,-32,-27,-35,24,-40,-32,24,-40,24,-33,-37,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,24,-28,-40,-9,24,24,-25,-26,24,24,24,24,24,24,24,24,24,-23,-24,24,24,]),'FALSE':([0,2,6,15,19,23,24,26,27,28,29,30,31,32,33,34,37,38,41,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'NOT':([0,2,6,15,19,23,24,26,27,28,29,30,31,32,33,34,37,38,41,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'OR':([0,1,2,5,6,7,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[-40,-12,-40,-34,-40,-38,-36,-39,-32,-27,-35,38,-40,-32,38,-40,38,-33,-37,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,38,-28,-40,-9,38,38,-25,-26,38,38,38,38,38,38,38,38,38,-23,-24,38,38,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term':([0,2,6,15,19,23,24,26,27,28,29,30,31,32,33,34,37,38,41,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'lexp':([0,2,6,15,19,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,41,],[7,7,7,7,7,7,7,46,7,7,7,7,7,7,7,7,7,57,7,7,7,]),'mexp2':([0,2,6,15,19,23,24,26,27,28,29,30,31,32,33,34,37,38,41,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'kwl':([0,19,],[3,42,]),'mexp':([0,2,6,15,19,23,24,26,27,28,29,30,31,32,33,34,37,38,41,],[14,18,20,39,14,44,45,48,49,50,51,52,53,54,55,56,59,60,18,]),'l':([2,41,],[17,61,]),'kwv':([0,19,],[4,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> kwl","S'",1,None,None,None),
  ('kwl -> kwv','kwl',1,'p_kwl_kwv','evaluate.py',310),
  ('kwl -> kwv ;','kwl',2,'p_kwl_kwv','evaluate.py',311),
  ('kwl -> kwv ; kwl','kwl',3,'p_kwl_kwl','evaluate.py',318),
  ('kwl -> mexp','kwl',1,'p_kwl_v','evaluate.py',328),
  ('kwl -> mexp ;','kwl',2,'p_kwl_v','evaluate.py',329),
  ('kwl -> <empty>','kwl',0,'p_kwl_empty','evaluate.py',335),
  ('kwv -> VAR EQU mexp','kwv',3,'p_kwv_kv','evaluate.py',340),
  ('mexp -> NOT mexp','mexp',2,'p_v_bexp','evaluate.py',345),
  ('mexp -> LPARENT mexp RPARENT','mexp',3,'p_v_parent_mexp','evaluate.py',353),
  ('mexp -> mexp + mexp','mexp',3,'p_mexp_sum','evaluate.py',386),
  ('mexp -> mexp - mexp','mexp',3,'p_mexp_sum','evaluate.py',387),
  ('mexp -> mexp2','mexp',1,'p_mexp_mexp2','evaluate.py',409),
  ('mexp2 -> mexp * mexp','mexp2',3,'p_mexp2_mult','evaluate.py',414),
  ('mexp2 -> mexp / mexp','mexp2',3,'p_mexp2_mult','evaluate.py',415),
  ('mexp2 -> mexp AND mexp','mexp2',3,'p_mexp2_and','evaluate.py',434),
  ('mexp2 -> mexp OR mexp','mexp2',3,'p_mexp2_and','evaluate.py',435),
  ('mexp2 -> mexp GE mexp','mexp2',3,'p_mexp2_boolexp','evaluate.py',452),
  ('mexp2 -> mexp LE mexp','mexp2',3,'p_mexp2_boolexp','evaluate.py',453),
  ('mexp2 -> mexp LT mexp','mexp2',3,'p_mexp2_boolexp','evaluate.py',454),
  ('mexp2 -> mexp GT mexp','mexp2',3,'p_mexp2_boolexp','evaluate.py',455),
  ('mexp2 -> mexp NE mexp','mexp2',3,'p_mexp2_booleq','evaluate.py',475),
  ('mexp2 -> mexp EQ mexp','mexp2',3,'p_mexp2_booleq','evaluate.py',476),
  ('mexp2 -> mexp IN lexp','mexp2',3,'p_mexp2_inlist','evaluate.py',491),
  ('mexp2 -> mexp IN VAR','mexp2',3,'p_mexp2_invar','evaluate.py',507),
  ('mexp2 -> mexp SUBSET lexp','mexp2',3,'p_mexp2_subsetlist','evaluate.py',523),
  ('mexp2 -> mexp SUBSET VAR','mexp2',3,'p_mexp2_subsetvar','evaluate.py',543),
  ('mexp2 -> term','mexp2',1,'p_mexp2_term','evaluate.py',559),
  ('lexp -> SQ_LPARENT l SQ_RPARENT','lexp',3,'p_lexp','evaluate.py',564),
  ('l -> <empty>','l',0,'p_l_empty','evaluate.py',570),
  ('l -> mexp','l',1,'p_l','evaluate.py',574),
  ('l -> mexp COMMA l','l',3,'p_l_comma','evaluate.py',580),
  ('term -> VAR','term',1,'p_term_var','evaluate.py',587),
  ('term -> - VAR','term',2,'p_term_minvar','evaluate.py',602),
  ('term -> TRUE','term',1,'p_term_bool','evaluate.py',615),
  ('term -> FALSE','term',1,'p_term_bool','evaluate.py',616),
  ('term -> NUM','term',1,'p_term_num','evaluate.py',625),
  ('term -> - NUM','term',2,'p_term_minnum','evaluate.py',630),
  ('term -> lexp','term',1,'p_term_lexp','evaluate.py',635),
  ('term -> STRING','term',1,'p_term_string','evaluate.py',640),
  ('term -> <empty>','term',0,'p_term_empty','evaluate.py',645),
]
