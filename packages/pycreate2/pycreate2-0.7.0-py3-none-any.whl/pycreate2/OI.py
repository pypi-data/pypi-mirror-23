from __future__ import print_function
from __future__ import division
from . import opcodes
from .sensorPacketLengths import sensor_packet_lengths

charging_states = [
	"not-charging",
	"charging-recovery",
	"charging",
	"trickle-charging",
	"waiting",
	"charging-error"
]


def calc_query_data_len(pkts):
	packet_size = 0
	for p in pkts:
		packet_size += sensor_packet_lengths[str(p)]
	return packet_size


oi_modes = [
	"off",
	"passive",
	"safe",
	"full"
]

midi_table = {
	"rest": 0,
	"G#1": 32,
	"G#3": 56,
	"G#2": 44,
	"G#5": 80,
	"G#4": 68,
	"G#7": 104,
	"G#6": 92,
	"G#8": 116,
	"G7": 103,
	"G6": 91,
	"G5": 79,
	"G4": 67,
	"G3": 55,
	"G2": 43,
	"G1": 31,
	"G9": 127,
	"G8": 115,
	"A7": 105,
	"D#9": 123,
	"A8": 117,
	"B4": 71,
	"B5": 83,
	"B6": 95,
	"B7": 107,
	"B1": 35,
	"B2": 47,
	"B3": 59,
	"B8": 119,
	"F#2": 42,
	"F#3": 54,
	"F#4": 66,
	"F#5": 78,
	"F#6": 90,
	"F#7": 102,
	"F#8": 114,
	"F#9": 126,
	"E9": 124,
	"E8": 112,
	"E5": 76,
	"E4": 64,
	"E7": 100,
	"E6": 88,
	"E3": 52,
	"E2": 40,
	"A#3": 58,
	"A#2": 46,
	"A#1": 34,
	"pause": 0,
	"A#7": 106,
	"A#6": 94,
	"A#5": 82,
	"A#4": 70,
	"A#8": 118,
	"C9": 120,
	"C8": 108,
	"C3": 48,
	"C2": 36,
	"C7": 96,
	"C6": 84,
	"C5": 72,
	"C4": 60,
	"R": 0,
	"F2": 41,
	"F3": 53,
	"F4": 65,
	"F5": 77,
	"F6": 89,
	"F7": 101,
	"F8": 113,
	"F9": 125,
	"A1": 33,
	"A3": 57,
	"A2": 45,
	"A5": 81,
	"A4": 69,
	"D#8": 111,
	"A6": 93,
	"D#6": 87,
	"D#7": 99,
	"D#4": 63,
	"D#5": 75,
	"D#2": 39,
	"D#3": 51,
	"C#9": 121,
	"C#8": 109,
	"C#5": 73,
	"C#4": 61,
	"C#7": 97,
	"C#6": 85,
	"C#3": 49,
	"C#2": 37,
	"D8": 110,
	"D9": 122,
	"D6": 86,
	"D7": 98,
	"D4": 62,
	"D5": 74,
	"D2": 38,
	"D3": 50
}

# ascii_table = {
# 	" ": 32,
# 	"\"": 34,
# 	"&": 38,
# 	",": 44,
# 	".": 46,
# 	"0": 48,
# 	"2": 50,
# 	"4": 52,
# 	"6": 54,
# 	"8": 56,
# 	":": 58,
# 	"<": 60,
# 	">": 62,
# 	"B": 66,
# 	"D": 68,
# 	"F": 70,
# 	"H": 72,
# 	"J": 74,
# 	"L": 76,
# 	"N": 78,
# 	"P": 80,
# 	"R": 82,
# 	"T": 84,
# 	"V": 86,
# 	"X": 88,
# 	"Z": 90,
# 	"\\": 92,
# 	"^": 94,
# 	"`": 96,
# 	"|": 124,
# 	"~": 126,
# 	"!": 33,
# 	"#": 35,
# 	"%": 37,
# 	"'": 39,
# 	"-": 45,
# 	"/": 47,
# 	"1": 49,
# 	"3": 51,
# 	"5": 53,
# 	"7": 55,
# 	"9": 57,
# 	";": 59,
# 	"=": 61,
# 	"?": 63,
# 	"A": 65,
# 	"C": 67,
# 	"E": 69,
# 	"G": 71,
# 	"I": 73,
# 	"K": 75,
# 	"M": 77,
# 	"O": 79,
# 	"Q": 81,
# 	"S": 83,
# 	"U": 85,
# 	"W": 87,
# 	"Y": 89,
# 	"[": 40,
# 	"]": 41,
# 	"_": 95,
# 	"{": 123,
# 	"}": 125
# }

baudrates = {
	300: 0,
	600: 1,
	1200: 2,
	2400: 3,
	4800: 4,
	9600: 5,
	14400: 6,
	19200: 7,
	28800: 8,
	38400: 9,
	57600: 10,
	115200: 11
}

remote_opcodes = {
	"0": "none",
	"129": "left",
	"130": "forward",
	"131": "right",
	"132": "spot",
	"133": "max",
	"134": "small",
	"135": "medium",
	"136": "clean",
	"137": "pause",
	"138": "power",
	"139": "arc-left",
	"140": "arc-right",
	"141": "drive-stop",
	"142": "send-all",
	"143": "seek-dock",
	"160": "reserved",
	"161": "force-field",
	"162": "virtual-wall",
	"164": "green-buoy",
	"165": "green-buoy-and-force-field",
	"168": "red-buoy",
	"169": "red-buoy-and-force-field",
	"172": "red-buoy-and-green-buoy",
	"173": "red-buoy-and-green-buoy-and-force-field",
	"240": "reserved",
	"242": "force-field",
	"244": "green-buoy",
	"246": "green-buoy-and-force-field",
	"248": "red-buoy",
	"250": "red-buoy-and-force-field",
	"252": "red-buoy-and-green-buoy",
	"254": "red-buoy-and-green-buoy-and-force-field",
	"255": "none"
}
