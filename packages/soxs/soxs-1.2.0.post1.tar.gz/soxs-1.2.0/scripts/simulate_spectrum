#!/usr/bin/env python

import argparse
import os
from soxs.instrument import simulate_spectrum
from soxs.spectra import Spectrum
from soxs.instrument_registry import \
    add_instrument_to_registry, instrument_registry

parser = argparse.ArgumentParser(description='Convolve a spectrum with an ARF and RMF and '
                                             'produce a PHA or PI spectrum.')
parser.add_argument("spec_file", type=str, help="The file containing the spectrum to be used.")
parser.add_argument("instrument", type=str, help='The name of the instrument to use, '
                                                 'or alternatively the name of a JSON file '
                                                 'which contains an instrument specification.')
parser.add_argument("exp_time", type=float, help='The exposure time to use, in seconds.')
parser.add_argument("out_file", type=str, help="The file to write the convolved spectrum to.")
parser.add_argument("--overwrite", action='store_true',
                    help='Overwrite an existing file with the same name.')
parser.add_argument("--random_seed", type=int,
                    help="A constant integer random seed to produce a consistent set of random numbers.")

args = parser.parse_args()

if args.instrument not in instrument_registry and os.path.exists(args.instrument):
    instrument = add_instrument_to_registry(args.instrument)
else:
    instrument = args.instrument

spec = Spectrum.from_file(args.spec_file)
simulate_spectrum(spec, instrument, args.exp_time, args.out_file, 
                  overwrite=args.overwrite, prng=args.random_seed)