# Configuration file for packaging and rst files
# These are user specific settings

# See:
# https://docs.python.org/3.4/library/configparser.html
# All key = value pairs are treated as strings
# Values in this file get copied across to other files such as setup.py and key = values can also be used in rst files.

# For substitution in rst files see for example:
# http://stackoverflow.com/questions/10030149/how-do-i-output-a-config-value-in-a-sphinx-rst-file
# http://www.sphinx-doc.org/en/stable/ext/extlinks.html
# http://stackoverflow.com/questions/7250659/python-code-to-generate-part-of-sphinx-documentation-is-it-possible?rq=1
# http://stackoverflow.com/questions/42158111/variable-substitution-not-working-properly-in-sphinx?rq=1


# Many arguments for setup.py can be specified here. Check both files and the 'official' tutorial though:
# https://python-packaging.readthedocs.io/en/latest/index.html

###############
[metadata]
# The following is mainly for setup.py:
project_name = project_quickstart

author_name = Antonio J Berlanga-Taylor

date = 24 April 2017

project_url = https://github.com/AntonioJBT/project_quickstart

download_url = https://github.com/|author_name|/|project_name|.git

author_email = 

license = GPL-3.0

project_short_description = 
license_year = 2017
keywords = 

# long_description is read from README.rst within setup.py
long_description = 

# The same version is used for pipelines, scripts and project:
# This is easier to edit directly in the file version.py 

classifiers = """
              Development Status :: 3 - Alpha
              Intended Audience :: Science/Research
              Intended Audience :: Developers
              License :: OSI Approved
              Programming Language :: Python
              Topic :: Software Development
              Topic :: Scientific/Engineering
              Topic :: Utilities
              Operating System :: POSIX
              Operating System :: Unix
              Operating System :: MacOS
              """

# setup.py uses find_packages() instead
#packages = %(project_name)s
# This is then converted to a list within setup.py.
# To test: use comma separated elements to pass if more than one, e.g.pack_a,pack_b,pack_c
# Otherwise just edit setup.py and pass directly there to avoid problems as this is designed for simple packages.

# If the package layout is not conventional you need to specify it. Edit setup.oy directly if needed though.
#package_dirs = 

platforms = 'any'

# Consider adding:
#github_username = AntonioJBT
#folders_to_create = data,code,results,manuscript,external_data
#python_namespace =
###############
