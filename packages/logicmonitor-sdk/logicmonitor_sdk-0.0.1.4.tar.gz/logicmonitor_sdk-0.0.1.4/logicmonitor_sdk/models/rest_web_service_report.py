# coding: utf-8

"""
    logicmonitor_sdk

    LogicMonitor is a cloud-based, full stack, IT infrastructure monitoring solution that allows you to manage your infrastructure from the cloud. logicmonitor_sdk lets you manage your LogicMonitor account programmatically.

    OpenAPI spec version: 1.0.0
    Contact: sdk@logicmonitor.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class RestWebServiceReport(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'lastmodify_user_id': 'int',
        'delivery': 'str',
        'user_permission': 'str',
        'last_generate_on': 'int',
        'report_link_num': 'int',
        'group_id': 'int',
        'format': 'str',
        'description': 'str',
        'last_generate_size': 'int',
        'custom_report_type_id': 'int',
        'type': 'str',
        'last_generate_pages': 'int',
        'schedule': 'str',
        'recipients': 'list[RestRecipient]',
        'custom_report_type_name': 'str',
        'name': 'str',
        'enable_view_as_other_user': 'bool',
        'lastmodify_user_name': 'str',
        'id': 'int',
        'include_types': 'list[int]',
        'services_val_type': 'str',
        'display_type': 'int',
        'date_range': 'str',
        'services_val': 'str'
    }

    attribute_map = {
        'lastmodify_user_id': 'lastmodifyUserId',
        'delivery': 'delivery',
        'user_permission': 'userPermission',
        'last_generate_on': 'lastGenerateOn',
        'report_link_num': 'reportLinkNum',
        'group_id': 'groupId',
        'format': 'format',
        'description': 'description',
        'last_generate_size': 'lastGenerateSize',
        'custom_report_type_id': 'customReportTypeId',
        'type': 'type',
        'last_generate_pages': 'lastGeneratePages',
        'schedule': 'schedule',
        'recipients': 'recipients',
        'custom_report_type_name': 'customReportTypeName',
        'name': 'name',
        'enable_view_as_other_user': 'enableViewAsOtherUser',
        'lastmodify_user_name': 'lastmodifyUserName',
        'id': 'id',
        'include_types': 'includeTypes',
        'services_val_type': 'servicesValType',
        'display_type': 'displayType',
        'date_range': 'dateRange',
        'services_val': 'servicesVal'
    }

    def __init__(self, lastmodify_user_id=None, delivery=None, user_permission=None, last_generate_on=None, report_link_num=None, group_id=None, format=None, description=None, last_generate_size=None, custom_report_type_id=None, type=None, last_generate_pages=None, schedule=None, recipients=None, custom_report_type_name=None, name=None, enable_view_as_other_user=None, lastmodify_user_name=None, id=None, include_types=None, services_val_type=None, display_type=None, date_range=None, services_val=None):
        """
        RestWebServiceReport - a model defined in Swagger
        """

        self._lastmodify_user_id = None
        self._delivery = None
        self._user_permission = None
        self._last_generate_on = None
        self._report_link_num = None
        self._group_id = None
        self._format = None
        self._description = None
        self._last_generate_size = None
        self._custom_report_type_id = None
        self._type = None
        self._last_generate_pages = None
        self._schedule = None
        self._recipients = None
        self._custom_report_type_name = None
        self._name = None
        self._enable_view_as_other_user = None
        self._lastmodify_user_name = None
        self._id = None
        self._include_types = None
        self._services_val_type = None
        self._display_type = None
        self._date_range = None
        self._services_val = None
        self.discriminator = None

        if lastmodify_user_id is not None:
          self.lastmodify_user_id = lastmodify_user_id
        if delivery is not None:
          self.delivery = delivery
        if user_permission is not None:
          self.user_permission = user_permission
        if last_generate_on is not None:
          self.last_generate_on = last_generate_on
        if report_link_num is not None:
          self.report_link_num = report_link_num
        self.group_id = group_id
        if format is not None:
          self.format = format
        if description is not None:
          self.description = description
        if last_generate_size is not None:
          self.last_generate_size = last_generate_size
        if custom_report_type_id is not None:
          self.custom_report_type_id = custom_report_type_id
        if type is not None:
          self.type = type
        if last_generate_pages is not None:
          self.last_generate_pages = last_generate_pages
        if schedule is not None:
          self.schedule = schedule
        if recipients is not None:
          self.recipients = recipients
        if custom_report_type_name is not None:
          self.custom_report_type_name = custom_report_type_name
        self.name = name
        if enable_view_as_other_user is not None:
          self.enable_view_as_other_user = enable_view_as_other_user
        if lastmodify_user_name is not None:
          self.lastmodify_user_name = lastmodify_user_name
        if id is not None:
          self.id = id
        if include_types is not None:
          self.include_types = include_types
        self.services_val_type = services_val_type
        if display_type is not None:
          self.display_type = display_type
        if date_range is not None:
          self.date_range = date_range
        if services_val is not None:
          self.services_val = services_val

    @property
    def lastmodify_user_id(self):
        """
        Gets the lastmodify_user_id of this RestWebServiceReport.

        :return: The lastmodify_user_id of this RestWebServiceReport.
        :rtype: int
        """
        return self._lastmodify_user_id

    @lastmodify_user_id.setter
    def lastmodify_user_id(self, lastmodify_user_id):
        """
        Sets the lastmodify_user_id of this RestWebServiceReport.

        :param lastmodify_user_id: The lastmodify_user_id of this RestWebServiceReport.
        :type: int
        """

        self._lastmodify_user_id = lastmodify_user_id

    @property
    def delivery(self):
        """
        Gets the delivery of this RestWebServiceReport.

        :return: The delivery of this RestWebServiceReport.
        :rtype: str
        """
        return self._delivery

    @delivery.setter
    def delivery(self, delivery):
        """
        Sets the delivery of this RestWebServiceReport.

        :param delivery: The delivery of this RestWebServiceReport.
        :type: str
        """

        self._delivery = delivery

    @property
    def user_permission(self):
        """
        Gets the user_permission of this RestWebServiceReport.

        :return: The user_permission of this RestWebServiceReport.
        :rtype: str
        """
        return self._user_permission

    @user_permission.setter
    def user_permission(self, user_permission):
        """
        Sets the user_permission of this RestWebServiceReport.

        :param user_permission: The user_permission of this RestWebServiceReport.
        :type: str
        """

        self._user_permission = user_permission

    @property
    def last_generate_on(self):
        """
        Gets the last_generate_on of this RestWebServiceReport.

        :return: The last_generate_on of this RestWebServiceReport.
        :rtype: int
        """
        return self._last_generate_on

    @last_generate_on.setter
    def last_generate_on(self, last_generate_on):
        """
        Sets the last_generate_on of this RestWebServiceReport.

        :param last_generate_on: The last_generate_on of this RestWebServiceReport.
        :type: int
        """

        self._last_generate_on = last_generate_on

    @property
    def report_link_num(self):
        """
        Gets the report_link_num of this RestWebServiceReport.

        :return: The report_link_num of this RestWebServiceReport.
        :rtype: int
        """
        return self._report_link_num

    @report_link_num.setter
    def report_link_num(self, report_link_num):
        """
        Sets the report_link_num of this RestWebServiceReport.

        :param report_link_num: The report_link_num of this RestWebServiceReport.
        :type: int
        """

        self._report_link_num = report_link_num

    @property
    def group_id(self):
        """
        Gets the group_id of this RestWebServiceReport.

        :return: The group_id of this RestWebServiceReport.
        :rtype: int
        """
        return self._group_id

    @group_id.setter
    def group_id(self, group_id):
        """
        Sets the group_id of this RestWebServiceReport.

        :param group_id: The group_id of this RestWebServiceReport.
        :type: int
        """
        if group_id is None:
            raise ValueError("Invalid value for `group_id`, must not be `None`")

        self._group_id = group_id

    @property
    def format(self):
        """
        Gets the format of this RestWebServiceReport.

        :return: The format of this RestWebServiceReport.
        :rtype: str
        """
        return self._format

    @format.setter
    def format(self, format):
        """
        Sets the format of this RestWebServiceReport.

        :param format: The format of this RestWebServiceReport.
        :type: str
        """

        self._format = format

    @property
    def description(self):
        """
        Gets the description of this RestWebServiceReport.

        :return: The description of this RestWebServiceReport.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this RestWebServiceReport.

        :param description: The description of this RestWebServiceReport.
        :type: str
        """

        self._description = description

    @property
    def last_generate_size(self):
        """
        Gets the last_generate_size of this RestWebServiceReport.

        :return: The last_generate_size of this RestWebServiceReport.
        :rtype: int
        """
        return self._last_generate_size

    @last_generate_size.setter
    def last_generate_size(self, last_generate_size):
        """
        Sets the last_generate_size of this RestWebServiceReport.

        :param last_generate_size: The last_generate_size of this RestWebServiceReport.
        :type: int
        """

        self._last_generate_size = last_generate_size

    @property
    def custom_report_type_id(self):
        """
        Gets the custom_report_type_id of this RestWebServiceReport.

        :return: The custom_report_type_id of this RestWebServiceReport.
        :rtype: int
        """
        return self._custom_report_type_id

    @custom_report_type_id.setter
    def custom_report_type_id(self, custom_report_type_id):
        """
        Sets the custom_report_type_id of this RestWebServiceReport.

        :param custom_report_type_id: The custom_report_type_id of this RestWebServiceReport.
        :type: int
        """

        self._custom_report_type_id = custom_report_type_id

    @property
    def type(self):
        """
        Gets the type of this RestWebServiceReport.

        :return: The type of this RestWebServiceReport.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """
        Sets the type of this RestWebServiceReport.

        :param type: The type of this RestWebServiceReport.
        :type: str
        """

        self._type = type

    @property
    def last_generate_pages(self):
        """
        Gets the last_generate_pages of this RestWebServiceReport.

        :return: The last_generate_pages of this RestWebServiceReport.
        :rtype: int
        """
        return self._last_generate_pages

    @last_generate_pages.setter
    def last_generate_pages(self, last_generate_pages):
        """
        Sets the last_generate_pages of this RestWebServiceReport.

        :param last_generate_pages: The last_generate_pages of this RestWebServiceReport.
        :type: int
        """

        self._last_generate_pages = last_generate_pages

    @property
    def schedule(self):
        """
        Gets the schedule of this RestWebServiceReport.

        :return: The schedule of this RestWebServiceReport.
        :rtype: str
        """
        return self._schedule

    @schedule.setter
    def schedule(self, schedule):
        """
        Sets the schedule of this RestWebServiceReport.

        :param schedule: The schedule of this RestWebServiceReport.
        :type: str
        """

        self._schedule = schedule

    @property
    def recipients(self):
        """
        Gets the recipients of this RestWebServiceReport.

        :return: The recipients of this RestWebServiceReport.
        :rtype: list[RestRecipient]
        """
        return self._recipients

    @recipients.setter
    def recipients(self, recipients):
        """
        Sets the recipients of this RestWebServiceReport.

        :param recipients: The recipients of this RestWebServiceReport.
        :type: list[RestRecipient]
        """

        self._recipients = recipients

    @property
    def custom_report_type_name(self):
        """
        Gets the custom_report_type_name of this RestWebServiceReport.

        :return: The custom_report_type_name of this RestWebServiceReport.
        :rtype: str
        """
        return self._custom_report_type_name

    @custom_report_type_name.setter
    def custom_report_type_name(self, custom_report_type_name):
        """
        Sets the custom_report_type_name of this RestWebServiceReport.

        :param custom_report_type_name: The custom_report_type_name of this RestWebServiceReport.
        :type: str
        """

        self._custom_report_type_name = custom_report_type_name

    @property
    def name(self):
        """
        Gets the name of this RestWebServiceReport.

        :return: The name of this RestWebServiceReport.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this RestWebServiceReport.

        :param name: The name of this RestWebServiceReport.
        :type: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def enable_view_as_other_user(self):
        """
        Gets the enable_view_as_other_user of this RestWebServiceReport.

        :return: The enable_view_as_other_user of this RestWebServiceReport.
        :rtype: bool
        """
        return self._enable_view_as_other_user

    @enable_view_as_other_user.setter
    def enable_view_as_other_user(self, enable_view_as_other_user):
        """
        Sets the enable_view_as_other_user of this RestWebServiceReport.

        :param enable_view_as_other_user: The enable_view_as_other_user of this RestWebServiceReport.
        :type: bool
        """

        self._enable_view_as_other_user = enable_view_as_other_user

    @property
    def lastmodify_user_name(self):
        """
        Gets the lastmodify_user_name of this RestWebServiceReport.

        :return: The lastmodify_user_name of this RestWebServiceReport.
        :rtype: str
        """
        return self._lastmodify_user_name

    @lastmodify_user_name.setter
    def lastmodify_user_name(self, lastmodify_user_name):
        """
        Sets the lastmodify_user_name of this RestWebServiceReport.

        :param lastmodify_user_name: The lastmodify_user_name of this RestWebServiceReport.
        :type: str
        """

        self._lastmodify_user_name = lastmodify_user_name

    @property
    def id(self):
        """
        Gets the id of this RestWebServiceReport.

        :return: The id of this RestWebServiceReport.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this RestWebServiceReport.

        :param id: The id of this RestWebServiceReport.
        :type: int
        """

        self._id = id

    @property
    def include_types(self):
        """
        Gets the include_types of this RestWebServiceReport.

        :return: The include_types of this RestWebServiceReport.
        :rtype: list[int]
        """
        return self._include_types

    @include_types.setter
    def include_types(self, include_types):
        """
        Sets the include_types of this RestWebServiceReport.

        :param include_types: The include_types of this RestWebServiceReport.
        :type: list[int]
        """

        self._include_types = include_types

    @property
    def services_val_type(self):
        """
        Gets the services_val_type of this RestWebServiceReport.

        :return: The services_val_type of this RestWebServiceReport.
        :rtype: str
        """
        return self._services_val_type

    @services_val_type.setter
    def services_val_type(self, services_val_type):
        """
        Sets the services_val_type of this RestWebServiceReport.

        :param services_val_type: The services_val_type of this RestWebServiceReport.
        :type: str
        """
        if services_val_type is None:
            raise ValueError("Invalid value for `services_val_type`, must not be `None`")

        self._services_val_type = services_val_type

    @property
    def display_type(self):
        """
        Gets the display_type of this RestWebServiceReport.

        :return: The display_type of this RestWebServiceReport.
        :rtype: int
        """
        return self._display_type

    @display_type.setter
    def display_type(self, display_type):
        """
        Sets the display_type of this RestWebServiceReport.

        :param display_type: The display_type of this RestWebServiceReport.
        :type: int
        """

        self._display_type = display_type

    @property
    def date_range(self):
        """
        Gets the date_range of this RestWebServiceReport.

        :return: The date_range of this RestWebServiceReport.
        :rtype: str
        """
        return self._date_range

    @date_range.setter
    def date_range(self, date_range):
        """
        Sets the date_range of this RestWebServiceReport.

        :param date_range: The date_range of this RestWebServiceReport.
        :type: str
        """

        self._date_range = date_range

    @property
    def services_val(self):
        """
        Gets the services_val of this RestWebServiceReport.

        :return: The services_val of this RestWebServiceReport.
        :rtype: str
        """
        return self._services_val

    @services_val.setter
    def services_val(self, services_val):
        """
        Sets the services_val of this RestWebServiceReport.

        :param services_val: The services_val of this RestWebServiceReport.
        :type: str
        """

        self._services_val = services_val

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, RestWebServiceReport):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
