# coding: utf-8

"""
    logicmonitor_sdk

    LogicMonitor is a cloud-based, full stack, IT infrastructure monitoring solution that allows you to manage your infrastructure from the cloud. logicmonitor_sdk lets you manage your LogicMonitor account programmatically.

    OpenAPI spec version: 1.0.0
    Contact: sdk@logicmonitor.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class RestDeviceDataSourceInstanceGroup(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'alert_status': 'str',
        'device_data_source_id': 'int',
        'description': 'str',
        'device_id': 'int',
        'sdt_status': 'str',
        'device_display_name': 'str',
        'groups_disabled_this_source': 'list[TreeNode]',
        'disabled_instances_num': 'int',
        'sdt_at': 'str',
        'name': 'str',
        'create_on': 'int',
        'alerting_disabled_on': 'TreeNode',
        'id': 'int',
        'alert_status_priority': 'int',
        'alert_disable_status': 'str',
        'instances_num': 'int'
    }

    attribute_map = {
        'alert_status': 'alertStatus',
        'device_data_source_id': 'deviceDataSourceId',
        'description': 'description',
        'device_id': 'deviceId',
        'sdt_status': 'sdtStatus',
        'device_display_name': 'deviceDisplayName',
        'groups_disabled_this_source': 'groupsDisabledThisSource',
        'disabled_instances_num': 'disabledInstancesNum',
        'sdt_at': 'sdtAt',
        'name': 'name',
        'create_on': 'createOn',
        'alerting_disabled_on': 'alertingDisabledOn',
        'id': 'id',
        'alert_status_priority': 'alertStatusPriority',
        'alert_disable_status': 'alertDisableStatus',
        'instances_num': 'instancesNum'
    }

    def __init__(self, alert_status=None, device_data_source_id=None, description=None, device_id=None, sdt_status=None, device_display_name=None, groups_disabled_this_source=None, disabled_instances_num=None, sdt_at=None, name=None, create_on=None, alerting_disabled_on=None, id=None, alert_status_priority=None, alert_disable_status=None, instances_num=None):
        """
        RestDeviceDataSourceInstanceGroup - a model defined in Swagger
        """

        self._alert_status = None
        self._device_data_source_id = None
        self._description = None
        self._device_id = None
        self._sdt_status = None
        self._device_display_name = None
        self._groups_disabled_this_source = None
        self._disabled_instances_num = None
        self._sdt_at = None
        self._name = None
        self._create_on = None
        self._alerting_disabled_on = None
        self._id = None
        self._alert_status_priority = None
        self._alert_disable_status = None
        self._instances_num = None
        self.discriminator = None

        if alert_status is not None:
          self.alert_status = alert_status
        if device_data_source_id is not None:
          self.device_data_source_id = device_data_source_id
        self.description = description
        if device_id is not None:
          self.device_id = device_id
        if sdt_status is not None:
          self.sdt_status = sdt_status
        if device_display_name is not None:
          self.device_display_name = device_display_name
        if groups_disabled_this_source is not None:
          self.groups_disabled_this_source = groups_disabled_this_source
        if disabled_instances_num is not None:
          self.disabled_instances_num = disabled_instances_num
        if sdt_at is not None:
          self.sdt_at = sdt_at
        self.name = name
        if create_on is not None:
          self.create_on = create_on
        if alerting_disabled_on is not None:
          self.alerting_disabled_on = alerting_disabled_on
        if id is not None:
          self.id = id
        if alert_status_priority is not None:
          self.alert_status_priority = alert_status_priority
        if alert_disable_status is not None:
          self.alert_disable_status = alert_disable_status
        if instances_num is not None:
          self.instances_num = instances_num

    @property
    def alert_status(self):
        """
        Gets the alert_status of this RestDeviceDataSourceInstanceGroup.

        :return: The alert_status of this RestDeviceDataSourceInstanceGroup.
        :rtype: str
        """
        return self._alert_status

    @alert_status.setter
    def alert_status(self, alert_status):
        """
        Sets the alert_status of this RestDeviceDataSourceInstanceGroup.

        :param alert_status: The alert_status of this RestDeviceDataSourceInstanceGroup.
        :type: str
        """

        self._alert_status = alert_status

    @property
    def device_data_source_id(self):
        """
        Gets the device_data_source_id of this RestDeviceDataSourceInstanceGroup.

        :return: The device_data_source_id of this RestDeviceDataSourceInstanceGroup.
        :rtype: int
        """
        return self._device_data_source_id

    @device_data_source_id.setter
    def device_data_source_id(self, device_data_source_id):
        """
        Sets the device_data_source_id of this RestDeviceDataSourceInstanceGroup.

        :param device_data_source_id: The device_data_source_id of this RestDeviceDataSourceInstanceGroup.
        :type: int
        """

        self._device_data_source_id = device_data_source_id

    @property
    def description(self):
        """
        Gets the description of this RestDeviceDataSourceInstanceGroup.

        :return: The description of this RestDeviceDataSourceInstanceGroup.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this RestDeviceDataSourceInstanceGroup.

        :param description: The description of this RestDeviceDataSourceInstanceGroup.
        :type: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")

        self._description = description

    @property
    def device_id(self):
        """
        Gets the device_id of this RestDeviceDataSourceInstanceGroup.

        :return: The device_id of this RestDeviceDataSourceInstanceGroup.
        :rtype: int
        """
        return self._device_id

    @device_id.setter
    def device_id(self, device_id):
        """
        Sets the device_id of this RestDeviceDataSourceInstanceGroup.

        :param device_id: The device_id of this RestDeviceDataSourceInstanceGroup.
        :type: int
        """

        self._device_id = device_id

    @property
    def sdt_status(self):
        """
        Gets the sdt_status of this RestDeviceDataSourceInstanceGroup.

        :return: The sdt_status of this RestDeviceDataSourceInstanceGroup.
        :rtype: str
        """
        return self._sdt_status

    @sdt_status.setter
    def sdt_status(self, sdt_status):
        """
        Sets the sdt_status of this RestDeviceDataSourceInstanceGroup.

        :param sdt_status: The sdt_status of this RestDeviceDataSourceInstanceGroup.
        :type: str
        """

        self._sdt_status = sdt_status

    @property
    def device_display_name(self):
        """
        Gets the device_display_name of this RestDeviceDataSourceInstanceGroup.

        :return: The device_display_name of this RestDeviceDataSourceInstanceGroup.
        :rtype: str
        """
        return self._device_display_name

    @device_display_name.setter
    def device_display_name(self, device_display_name):
        """
        Sets the device_display_name of this RestDeviceDataSourceInstanceGroup.

        :param device_display_name: The device_display_name of this RestDeviceDataSourceInstanceGroup.
        :type: str
        """

        self._device_display_name = device_display_name

    @property
    def groups_disabled_this_source(self):
        """
        Gets the groups_disabled_this_source of this RestDeviceDataSourceInstanceGroup.

        :return: The groups_disabled_this_source of this RestDeviceDataSourceInstanceGroup.
        :rtype: list[TreeNode]
        """
        return self._groups_disabled_this_source

    @groups_disabled_this_source.setter
    def groups_disabled_this_source(self, groups_disabled_this_source):
        """
        Sets the groups_disabled_this_source of this RestDeviceDataSourceInstanceGroup.

        :param groups_disabled_this_source: The groups_disabled_this_source of this RestDeviceDataSourceInstanceGroup.
        :type: list[TreeNode]
        """

        self._groups_disabled_this_source = groups_disabled_this_source

    @property
    def disabled_instances_num(self):
        """
        Gets the disabled_instances_num of this RestDeviceDataSourceInstanceGroup.

        :return: The disabled_instances_num of this RestDeviceDataSourceInstanceGroup.
        :rtype: int
        """
        return self._disabled_instances_num

    @disabled_instances_num.setter
    def disabled_instances_num(self, disabled_instances_num):
        """
        Sets the disabled_instances_num of this RestDeviceDataSourceInstanceGroup.

        :param disabled_instances_num: The disabled_instances_num of this RestDeviceDataSourceInstanceGroup.
        :type: int
        """

        self._disabled_instances_num = disabled_instances_num

    @property
    def sdt_at(self):
        """
        Gets the sdt_at of this RestDeviceDataSourceInstanceGroup.

        :return: The sdt_at of this RestDeviceDataSourceInstanceGroup.
        :rtype: str
        """
        return self._sdt_at

    @sdt_at.setter
    def sdt_at(self, sdt_at):
        """
        Sets the sdt_at of this RestDeviceDataSourceInstanceGroup.

        :param sdt_at: The sdt_at of this RestDeviceDataSourceInstanceGroup.
        :type: str
        """

        self._sdt_at = sdt_at

    @property
    def name(self):
        """
        Gets the name of this RestDeviceDataSourceInstanceGroup.

        :return: The name of this RestDeviceDataSourceInstanceGroup.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this RestDeviceDataSourceInstanceGroup.

        :param name: The name of this RestDeviceDataSourceInstanceGroup.
        :type: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def create_on(self):
        """
        Gets the create_on of this RestDeviceDataSourceInstanceGroup.

        :return: The create_on of this RestDeviceDataSourceInstanceGroup.
        :rtype: int
        """
        return self._create_on

    @create_on.setter
    def create_on(self, create_on):
        """
        Sets the create_on of this RestDeviceDataSourceInstanceGroup.

        :param create_on: The create_on of this RestDeviceDataSourceInstanceGroup.
        :type: int
        """

        self._create_on = create_on

    @property
    def alerting_disabled_on(self):
        """
        Gets the alerting_disabled_on of this RestDeviceDataSourceInstanceGroup.

        :return: The alerting_disabled_on of this RestDeviceDataSourceInstanceGroup.
        :rtype: TreeNode
        """
        return self._alerting_disabled_on

    @alerting_disabled_on.setter
    def alerting_disabled_on(self, alerting_disabled_on):
        """
        Sets the alerting_disabled_on of this RestDeviceDataSourceInstanceGroup.

        :param alerting_disabled_on: The alerting_disabled_on of this RestDeviceDataSourceInstanceGroup.
        :type: TreeNode
        """

        self._alerting_disabled_on = alerting_disabled_on

    @property
    def id(self):
        """
        Gets the id of this RestDeviceDataSourceInstanceGroup.

        :return: The id of this RestDeviceDataSourceInstanceGroup.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this RestDeviceDataSourceInstanceGroup.

        :param id: The id of this RestDeviceDataSourceInstanceGroup.
        :type: int
        """

        self._id = id

    @property
    def alert_status_priority(self):
        """
        Gets the alert_status_priority of this RestDeviceDataSourceInstanceGroup.

        :return: The alert_status_priority of this RestDeviceDataSourceInstanceGroup.
        :rtype: int
        """
        return self._alert_status_priority

    @alert_status_priority.setter
    def alert_status_priority(self, alert_status_priority):
        """
        Sets the alert_status_priority of this RestDeviceDataSourceInstanceGroup.

        :param alert_status_priority: The alert_status_priority of this RestDeviceDataSourceInstanceGroup.
        :type: int
        """

        self._alert_status_priority = alert_status_priority

    @property
    def alert_disable_status(self):
        """
        Gets the alert_disable_status of this RestDeviceDataSourceInstanceGroup.

        :return: The alert_disable_status of this RestDeviceDataSourceInstanceGroup.
        :rtype: str
        """
        return self._alert_disable_status

    @alert_disable_status.setter
    def alert_disable_status(self, alert_disable_status):
        """
        Sets the alert_disable_status of this RestDeviceDataSourceInstanceGroup.

        :param alert_disable_status: The alert_disable_status of this RestDeviceDataSourceInstanceGroup.
        :type: str
        """

        self._alert_disable_status = alert_disable_status

    @property
    def instances_num(self):
        """
        Gets the instances_num of this RestDeviceDataSourceInstanceGroup.

        :return: The instances_num of this RestDeviceDataSourceInstanceGroup.
        :rtype: int
        """
        return self._instances_num

    @instances_num.setter
    def instances_num(self, instances_num):
        """
        Sets the instances_num of this RestDeviceDataSourceInstanceGroup.

        :param instances_num: The instances_num of this RestDeviceDataSourceInstanceGroup.
        :type: int
        """

        self._instances_num = instances_num

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, RestDeviceDataSourceInstanceGroup):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
