<component xmlns="https://raw.githubusercontent.com/zopefoundation/ZConfig/master/doc/schema.dtd"
           prefix="dhcpkit.common.server.logging">

    <!-- Abstract type and base class for log-handlers -->
    <abstracttype name="loghandler">
        <description>
            Log-handlers output log entries to somewhere. If you want to send your logs somewhere configure one of
            these. There are log-handlers to show log entries on the console. Send them to a syslog process, server,
            etc.
        </description>
    </abstracttype>

    <sectiontype name="loghandler_base">
        <description>
            This provides the base attributes that every log handler must implement. This section type cannot be
            used directly as it does not return a HandlerFactory.
        </description>

        <key name="level" default="warning" datatype=".config_datatypes.logging_level">
            <description><![CDATA[
                The log level. Only log messages with a priority of this level or higher are logged to this output.
                Possible values are:

                "critical"
                    Log critical errors that prevent the server from working

                "error"
                    Log errors that occur

                "warning"
                    Log warning messages that might indicate a problem

                "info"
                    Log informational messages

                "debug"
                    Log messages that are usually only useful when debugging issues

                "debug-packets"
                    Log the sending and receiving of packets

                "debug-handling"
                    Log everything about how a request is handled
            ]]></description>
        </key>
    </sectiontype>

    <!-- Logging to console -->
    <sectiontype name="console"
                 implements="loghandler"
                 extends="loghandler_base"
                 datatype=".config_elements.ConsoleHandlerFactory">
        <description>
            Log to console.
        </description>
        <example><![CDATA[
            <console>
                level debug-handling
                color yes
            </console>
        ]]></example>

        <key name="color" datatype="boolean">
            <description>Whether to show log entries in colour</description>
            <metadefault>auto-detect colour support</metadefault>
        </key>
    </sectiontype>

    <!-- Logging to file -->
    <sectiontype name="file"
                 implements="loghandler"
                 extends="loghandler_base"
                 datatype=".config_elements.FileHandlerFactory">
        <description>
            Log to a file. The name of the section is the filename of the log file.
        </description>
        <example><![CDATA[
            <file /var/log/dhcpkit/dhcpd.log>
                rotate daily
                keep 7
                level info
            </file>
        ]]></example>

        <key name="rotate" datatype=".config_datatypes.rotation_style">
            <description><![CDATA[
                Rotate the log file automatically. Valid options are:

                "hourly" or "hour"
                    Rotate the log file every hour

                "daily" or "day"
                    Rotate the log file every day

                "weekly" or "week"
                    Rotate the log file every week

                "size"
                    Rotate the log file based on size
            ]]></description>
            <metadefault>do not rotate based</metadefault>
        </key>
        <key name="size" datatype="byte-size">
            <description>
                When rotating based on size a file size must be specified. You can use the suffixed "kb", "mb" or "gb"
                to make the value more readable.
            </description>
        </key>
        <key name="keep" datatype=".config_datatypes.rotation_count">
            <description>
                When rotating log files you must specify how many files to keep.
            </description>
        </key>
    </sectiontype>

    <!-- Logging to local syslog -->
    <sectiontype name="syslog"
                 implements="loghandler"
                 extends="loghandler_base"
                 datatype=".config_elements.SysLogHandlerFactory">
        <description>
            Log to local syslog. The name of the section is the destination, which can be a ``hostname:port`` or a unix
            socket file name. Relative names are resolved relative to the directory containing the configuration file.
        </description>
        <example><![CDATA[
            # This will try to auto-detect the syslog socket using the default level
            <syslog />

            # This logs explicitly to the specified socket using a non-default facility
            <syslog /var/run/syslog>
                facility local3
                level info
            </syslog>

            # This logs explicitly to the specified socket using a non-default protocol
            <syslog collector.example.com:514>
                facility local1
                protocol tcp
            </syslog>
        ]]></example>

        <key name="facility" datatype=".config_datatypes.syslog_facility" default="daemon">
            <description>
                Use the specified log facility. The available facilities are system-dependent but usually include
                "daemon", "local0" to "local7", "auth", "user" and "syslog".
            </description>
        </key>
        <key name="protocol" datatype=".config_datatypes.udp_or_tcp" default="dgram">
            <description>
                Use a datagram ("dgram" or "udp") or stream ("stream" or "tcp") connection
            </description>
        </key>
    </sectiontype>

    <!-- Main section, use this in your configuration schema -->
    <sectiontype name="logging"
                 datatype=".config_elements.Logging">
        <description>
            This section contains the logging configuration. It contains a list of log-handlers that specify where to
            send the log entries.
        </description>
        <example><![CDATA[
            <logging>
                <console>
                    level debug-handling
                    color yes
                </console>

                <syslog />

                log-multiprocessing no
            </logging>
        ]]></example>

        <key name="log-multiprocessing" datatype="boolean" default="no">
            <description>
                Enable this if you want logging of process handling. Mostly useful for debugging server code.
            </description>
        </key>
        <multisection type="loghandler" name="*" attribute="handlers"/>
    </sectiontype>
</component>
