#! /bin/sh
### BEGIN INIT INFO
# Provides:          ipv6-dhcpd
# Required-Start:    $network $remote_fs $syslog
# Required-Stop:     $network $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: DHCPKit IPv6 DHCP server
### END INIT INFO

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="DHCPKit IPv6 DHCP server"
NAME=ipv6-dhcpd
PIDFILE=/run/$NAME.pid
CONTROL_SOCKET=/run/$NAME.sock
DAEMON=/usr/bin/ipv6-dhcpd
DAEMON_ARGS="--pidfile $PIDFILE --control-socket $CONTROL_SOCKET /etc/dhcpkit/ipv6-dhcpd.conf"
SCRIPTNAME=/etc/init.d/$NAME

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started
	start-stop-daemon --start --quiet --pidfile $PIDFILE --background \
	    --exec $DAEMON --test > /dev/null \
		|| return 1
	start-stop-daemon --start --quiet --pidfile $PIDFILE --background \
	    --exec $DAEMON -- \
		$DAEMON_ARGS \
		|| return 2
}

#
# Function that stops the daemon/service
#
do_stop()
{
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred

	# Check if the socket exists
	[ ! -S $CONTROL_SOCKET ] && return 1

    /usr/bin/ipv6-dhcpctl --control-socket $CONTROL_SOCKET shutdown > /dev/null 2> /dev/null
    RETVAL="$?"
    [ "$RETVAL" = 1 ] && return 2

	# Many daemons don't delete their pidfiles when they exit.
	rm -f $PIDFILE $CONTROL_SOCKET

	return "$RETVAL"
}

#
# Function that sends a SIGHUP to the daemon/service
#
do_reload() {
	# Check if the socket exists
	[ ! -S $CONTROL_SOCKET ] && return 1

    /usr/bin/ipv6-dhcpctl --control-socket $CONTROL_SOCKET reload > /dev/null 2> /dev/null
    RETVAL="$?"

	return "$RETVAL"
}

case "$1" in
  start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;

  stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;

  status)
	status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
	;;

  reload)
	log_daemon_msg "Reloading $DESC" "$NAME"
	do_reload
	log_end_msg $?
	;;

  restart|force-reload)
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
		;;
	  *)
		# Failed to stop
		log_end_msg 1
		;;
	esac
	;;

  *)
	echo "$SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
	exit 3
	;;
esac

:
