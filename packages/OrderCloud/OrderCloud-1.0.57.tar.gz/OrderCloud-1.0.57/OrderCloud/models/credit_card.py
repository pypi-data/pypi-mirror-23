# coding: utf-8

"""
    OrderCloud

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 1.0
    Contact: ordercloud@four51.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class CreditCard(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, id=None, token=None, date_created=None, card_type=None, partial_account_number=None, cardholder_name=None, expiration_date=None, xp=None):
        """
        CreditCard - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'str',
            'token': 'str',
            'date_created': 'str',
            'card_type': 'str',
            'partial_account_number': 'str',
            'cardholder_name': 'str',
            'expiration_date': 'str',
            'xp': 'object'
        }

        self.attribute_map = {
            'id': 'ID',
            'token': 'Token',
            'date_created': 'DateCreated',
            'card_type': 'CardType',
            'partial_account_number': 'PartialAccountNumber',
            'cardholder_name': 'CardholderName',
            'expiration_date': 'ExpirationDate',
            'xp': 'xp'
        }

        self._id = id
        self._token = token
        self._date_created = date_created
        self._card_type = card_type
        self._partial_account_number = partial_account_number
        self._cardholder_name = cardholder_name
        self._expiration_date = expiration_date
        self._xp = xp

    @property
    def id(self):
        """
        Gets the id of this CreditCard.


        :return: The id of this CreditCard.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this CreditCard.


        :param id: The id of this CreditCard.
        :type: str
        """

        self._id = id

    @property
    def token(self):
        """
        Gets the token of this CreditCard.


        :return: The token of this CreditCard.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token):
        """
        Sets the token of this CreditCard.


        :param token: The token of this CreditCard.
        :type: str
        """

        self._token = token

    @property
    def date_created(self):
        """
        Gets the date_created of this CreditCard.


        :return: The date_created of this CreditCard.
        :rtype: str
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """
        Sets the date_created of this CreditCard.


        :param date_created: The date_created of this CreditCard.
        :type: str
        """

        self._date_created = date_created

    @property
    def card_type(self):
        """
        Gets the card_type of this CreditCard.


        :return: The card_type of this CreditCard.
        :rtype: str
        """
        return self._card_type

    @card_type.setter
    def card_type(self, card_type):
        """
        Sets the card_type of this CreditCard.


        :param card_type: The card_type of this CreditCard.
        :type: str
        """

        self._card_type = card_type

    @property
    def partial_account_number(self):
        """
        Gets the partial_account_number of this CreditCard.


        :return: The partial_account_number of this CreditCard.
        :rtype: str
        """
        return self._partial_account_number

    @partial_account_number.setter
    def partial_account_number(self, partial_account_number):
        """
        Sets the partial_account_number of this CreditCard.


        :param partial_account_number: The partial_account_number of this CreditCard.
        :type: str
        """

        self._partial_account_number = partial_account_number

    @property
    def cardholder_name(self):
        """
        Gets the cardholder_name of this CreditCard.


        :return: The cardholder_name of this CreditCard.
        :rtype: str
        """
        return self._cardholder_name

    @cardholder_name.setter
    def cardholder_name(self, cardholder_name):
        """
        Sets the cardholder_name of this CreditCard.


        :param cardholder_name: The cardholder_name of this CreditCard.
        :type: str
        """

        self._cardholder_name = cardholder_name

    @property
    def expiration_date(self):
        """
        Gets the expiration_date of this CreditCard.


        :return: The expiration_date of this CreditCard.
        :rtype: str
        """
        return self._expiration_date

    @expiration_date.setter
    def expiration_date(self, expiration_date):
        """
        Sets the expiration_date of this CreditCard.


        :param expiration_date: The expiration_date of this CreditCard.
        :type: str
        """

        self._expiration_date = expiration_date

    @property
    def xp(self):
        """
        Gets the xp of this CreditCard.


        :return: The xp of this CreditCard.
        :rtype: object
        """
        return self._xp

    @xp.setter
    def xp(self, xp):
        """
        Sets the xp of this CreditCard.


        :param xp: The xp of this CreditCard.
        :type: object
        """

        self._xp = xp

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
