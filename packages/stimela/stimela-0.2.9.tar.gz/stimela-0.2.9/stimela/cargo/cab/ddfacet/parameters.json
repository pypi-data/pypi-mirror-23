{
    "task": "ddfacet", 
    "base": "stimela/ddfacet", 
    "tag": "0.2.9", 
    "description": "DDFacet: a facet-based imager", 
    "prefix": "--", 
    "binary": "DDF.py", 
    "msdir": "true", 
    "parameters": [
        {
            "info": "Custom parset file (note: all paths in the parset must be relative to the mount points inside the container). Advance usage only.",
            "name": "Parset",
            "default": null,
            "dtype": "file",
            "io": "input",
            "required": false
        },
        {
            "info": "Name(s) of database to image",
            "name": "Data-MS",
            "default": null,
            "io": "msfile",
            "dtype": "list:file",
            "required": false,
        },
        {
            "info": "ColName to image",
            "name": "Data-ColName",
            "default": "DATA",
            "dtype": "str",
            "required": false, 
            "choices":["DATA",
                       "CORRECTED_DATA",
                       "MODEL_DATA"]
        },
        {
            "info": "Chunk data into time bins of x hours to conserve memory",
            "name": "Data-ChunkHours",
            "default": 0,
            "dtype": "float",
            "required": false, 
        },
        {
            "info": "Sort the data by baseline-time order internally. Can improve processing speed",
            "name": "Data-Sort",
            "default": false,
            "dtype": "bool",
            "required": false, 
        },
        {
            "info": "MS column to write predict to. Can be left empty to disable",
            "name": "Predict-ColName",
            "default": null,
            "dtype": "str",
            "required": false,
            "choices":["DATA",
                       "CORRECTED_DATA",
                       "MODEL_DATA"]
        },
        {
            "info": "Use this field if you want to predict (in/out)side a square region. Syntax is (MaskOutSide,NpixInside). For example setting (0,1000) will predict the outer (1000x1000) square only",
            "name": "Predict-MaskSquare",
            "default": null,
            "dtype": "str",
            "required": false
        },
        {
            "info": "In --Image-Mode=Predict, will predict data from this image, rather than --Data-InitDicoModel",
            "name": "Predict-FromImage",
            "default": null,
            "dtype": "file",
            "io": "input",
            "required": false
        },
        {
            "info": "Resume deconvolution from given DicoModel",
            "name": "Predict-InitDicoModel",
            "default": null,
            "dtype": "file",
            "io": "input",
            "required": false
        },
        {
            "info": "Allow overwriting of predict column",
            "name": "Predict-Overwrite",
            "default": true,
            "dtype": "bool",
            "required": false
        },
        {
            "info": "Default FIELD_ID to read",
            "name": "Selection-Field",
            "default": 0,
            "dtype": "int",
            "required": false
        },
        {
            "info": "Default DATA_DESC_ID to read",
            "name": "Selection-DDID",
            "default": 0,
            "dtype": "int",
            "required": false
        },
        {
            "info": "Additional TaQL selection string",
            "name": "Selection-TaQL",
            "default": "''",
            "dtype": "str",
            "required": false
        },
        {
            "info": "First channel",
            "name": "Selection-ChanStart",
            "default": 0,
            "dtype": "int",
            "required": false
        },
        {
            "info": "Last channel+1, -1 means up and including last channel",
            "name": "Selection-ChanEnd",
            "default": -1,
            "dtype": "int",
            "required": false
        },
        {
            "info": "List of antennas to be flagged, e.g. 'RS,CS017LBA'",
            "name": "Selection-FlagAnts",
            "default": "''",
            "dtype": "str",
            "required": false
        },
        {
            "info": "Select baseline range km_min,km_max",
            "name": "Selection-UVRangeKm",
            "default": "''",
            "dtype": "str",
            "required": false
        },
        {
            "info": "Select time range, in hours, since start of MS. Format H0,H1",
            "name": "Selection-TimeRange",
            "default": "''",
            "dtype": "str",
            "required": false
        },
        {
            "info": "Select antennas by specifying a maximum distance to core",
            "name": "Selection-DistMaxToCore",
            "default": "''",
            "dtype": "str",
            "required": false
        },
        {
            "info": "Output mode",
            "name": "Output-Mode",
            "default": "Clean",
            "dtype": "str",
            "required": false,
            "choices": ["Dirty",
                        "Clean",
                        "Predict",
                        "PSF"]
        },
        {
            "info": "Clobber output",
            "name": "Output-Clobber",
            "default": false,
            "dtype": "bool",
            "required": false
        },
        {
            "info": "Image name prefix",
            "name": "Output-Name",
            "default": "image",
            "dtype": "file",
            "io": "output",
            "required": false
        },
        {
            "info": "Output name for restoring beam",
            "name": "Output-RestoringBeam",
            "default": null,
            "dtype": "str",
            "required": false
        },
        {
            "info": "Additionally output specified set of images. See Output-Images for arguments",
            "name": "Output-Also",
            "default": "''",
            "dtype": "str",
            "required": false
        },
        {
            "info": "Specify cubes to output. Any combination of MmRrIi are acceptable. See Output-Images for explanation on types",
            "name": "Output-Cubes",
            "default": "''",
            "dtype": "str",
            "required": false,
        },
        {
            "info": "Specify images to output. Combination of letter codes indicating what images to save. Uppercase for intrinsic flux scale [D]irty, [M]odel, [C]onvolved model, [R]esiduals, restored [I]mage; Lowercase for apparent flux scale  [d]irty, [m]odel, [c]onvolved model, [r]esiduals, restored [i]mage; Other images: [P]SF, [N]orm, [n]orm facets, [S] flux scale, [A]lpha (spectral index), [X] mixed-scale (intrinsic model, apparent residuals, i.e. Cyrils original output), [o] intermediate mOdels (Model_i), [e] intermediate rEsiduals (Residual_i), [k] intermediate masK image, [z] intermediate auto mask-related noiZe image, [g] intermediate dirty images (only if [Debugging] SaveIntermediateDirtyImages is enabled). Use 'all' to save all. (default: DdPAMRIikz)",
            "name": "Output-Images",
            "default": "DdPAMRIikz",
            "dtype": "str",
            "required": false,
        },
        {
            "info": "Number of pixels in output Image",
            "name": "Image-NPix",
            "default": 5000,
            "dtype": "int",
            "required": false, 
        },
        {
            "info": "Cell size of pixels in output image (in arcseconds)",
            "name": "Image-Cell",
            "default": 5.0,
            "dtype": "float",
            "required": false, 
        },
        {
            "info": "Manually specify image phase centre in format RA,DEC",
            "name": "Image-PhaseCenterRADEC",
            "default": "''",
            "dtype": "str",
            "required": false,
        },
        {
            "info": "Manually specify sidelobe search window when fitting the restoring beam. Specify number of pixels",
            "name": "Image-SidelobeSearchWindow",
            "default": 200,
            "dtype": "float",
            "required": false,
        },
        {
            "info": "Number of facets to use",
            "name": "Facets-NFacets",
            "default": 3,
            "dtype": "int",
            "required": false, 
        },
        {
            "info": "Override facet directions with catalogue",
            "name": "Facets-CatNodes",
            "default": null,
            "dtype": "file",
            "io": "input",
            "required": false, 
        },
        {
            "info": "Maximum facet size (deg). Larger facets will be broken up",
            "name": "Facets-DiamMax",
            "default": 180.0,
            "dtype": "float",
            "required": false, 
        },
        {
            "info": "Minimum facet size (deg). Smaller facets will be merged",
            "name": "Facets-DiamMin",
            "default": 0.0,
            "dtype": "float",
            "required": false, 
        },
        {
            "info": "For cleaning, oversize PSF relative to the size of the facet",
            "name": "Facets-PSFOversize",
            "default": 1.0,
            "dtype": "float",
            "required": false, 
        },
        {
            "info": "Number of PSFs to create. 0: one per facet, 1: one PSF for entire field",
            "name": "Facets-PSFFacets",
            "default": 0,
            "dtype": "int",
            "required": false, 
        },
        {
            "info": "Facet padding factor. Value should be >>> 1.0 to account for anti-aliasing filter rolloff.",
            "name": "Facets-Padding",
            "default": 1.7,
            "dtype": "float",
            "required": false, 
        },
        {
            "info": "Read data weights from specified column. Use WEIGHT_SPECTRUM or WEIGHT, more rarely IMAGING_WEIGHT.",
            "name": "Weight-ColName",
            "default": "WEIGHT_SPECTRUM",
            "dtype": "str",
            "required": false,
            "choices": ["WEIGHT_SPECTRUM", "WEIGHT", "IMAGING_WEIGHT"]
        },
        {
            "info": "UV weighting mode",
            "name": "Weight-Mode",
            "default": "Briggs",
            "dtype": "str",
            "required": false,
            "choices": ["Natural", "Uniform", "Robust", "Briggs"]
        },
        {
            "name": "Weight-MFS",
            "info": "If True, MFS uniform/Briggs weighting is used (all channels binned onto one uv grid). If 0, binning is per-band.",
            "default": true,
            "dtype": "bool",
            "required": false
        },
        {
            "info": "Briggs robustness parameter, from -2 (more uniform) to 2 (more natural)",
            "name": "Weight-Robust",
            "default": 0.0,
            "dtype": "float",
            "required": false
        },
        {
            "info": "Super/subuniform weighting: FoV for weighting purposes is taken as X*Image_Size",
            "name": "Weight-SuperUniform",
            "default": 1.0,
            "dtype": "float",
            "required": false
        },
        {
            "info": "Gridding polarization mode (non-stokes I is only supported in Imager-Mode=Dirty)",
            "name": "RIME-PolMode",
            "default": "I",
            "dtype": "str",
            "required": false,
            "choices": ["I","V","Q","U","IQ","QI","IU","UI","IV","VI","UQ","QU","QV","VQ","UV","VU","IQU","IUQ","UIQ","UQI","QUI","QIU","IQV","IVQ","VIQ","VQI","QVI","QIV","IUV","IVU","VIU","VUI","UVI","UIV","QUV","QVU","VQU","VUQ","UVQ","UQV","IQUV","IQVU","IUQV","IUVQ","IVQU","IVUQ","QIUV","QIVU","VIUQ","VIQU","UIVQ","UIQV","QUIV","UQIV","UVIQ","VUIQ","VQIU","QVIU","QUVI","UQVI","UVQI","VUQI","VQUI","QVUI"]
        },
        {
            "info": "FFTW engine",
            "name": "RIME-FFTMachine",
            "default": "FFTW",
            "dtype": "str",
            "required": false,
            "choices": ["FFTW"]
        },
        {
            "info": "Forward predict engine",
            "name": "RIME-ForwardMode",
            "default": "BDA-degrid",
            "dtype": "str",
            "required": false,
            "choices": ["BDA-degrid", "Classic", "Montblanc"]
        },
        {
            "info": "Backward inversion engine",
            "name": "RIME-BackwardMode",
            "default": "BDA-grid",
            "dtype": "str",
            "required": false,
            "choices": ["BDA-grid"]
        },
        {
            "info": "Decorrelation mode (undocumented ???)",
            "name": "RIME-DecorrMode",
            "default": "''",
            "dtype": "str",
            "required": false
        },
        {
            "info": "Decorrelation location",
            "name": "RIME-DecorrLocation",
            "default": "Edge",
            "dtype": "str",
            "required": false,
            "choices":["Center", "Edge"]
        },
        {
            "info": "Convolution filter oversampling factor",
            "name": "CF-OverS",
            "default": 11,
            "dtype": "int",
            "required": false
        },
        {
            "info": "AA convolution filter support",
            "name": "CF-Support",
            "default": 7,
            "dtype": "int",
            "required": false
        },
        {
            "info": "Number of w-planes. Should be selected such that the projection error at the edge of the facet is << 1 radian per w plane",
            "name": "CF-Nw",
            "default": 100,
            "dtype": "int",
            "required": false
        },
        {
            "info": "Overwrite maximum w (in metres) of the interferometer sampling. This controlls the support needed for the w kernels and can bring down computational costs if more error is tolerated on the longest baselines",
            "name": "CF-wmax",
            "default": 10000.0,
            "dtype": "float",
            "required": false
        },
        {
            "info": "Maximum tolerated BDA decorrelation response factor for gridding",
            "name": "Comp-GridDecorr",
            "default": 0.02,
            "dtype": "float",
            "required": false
        },
        {
            "info": "FoV over which gridding decorrelation factor is computed",
            "name": "Comp-GridFoV",
            "default": "Facet",
            "dtype": "str",
            "required": false,
            "choices": ["Full", "Facet"]
        },
        {
            "info": "Maximum tolerated BDA decorrelation response factor for degridding",
            "name": "Comp-GridDecorr",
            "default": 0.02,
            "dtype": "float",
            "required": false
        },
        {
            "info": "FoV over which degridding decorrelation factor is computed",
            "name": "Comp-DegridFoV",
            "default": "Facet",
            "dtype": "str",
            "required": false,
            "choices": ["Full", "Facet"]
        },
        {
            "info": "Apply sparsification compression to initial major cycles. Sparsification refers to throwing away random visibilities. Supply a list of factors: e.g. 100,30,10 would mean only 1/100 of the data is used for the first major cycle, 1/30 for the second, 1/10 for the third, and full data for the fourth cycle onwards. This can substantially accelerate deconvolution of deep observations, since, in these regimes, very little sensitivity is required for model construction in the initial cycles.",
            "name": "Comp-Sparsification",
            "default": "0",
            "dtype": "str",
            "required": false
        },
        {
            "info": "Number of processes / threads to use in parallel mode. 0 - all available. 1 - disable parallelism",
            "name": "Parallel-NCPU",
            "default": 0,
            "dtype": "int",
            "required": false
        },
        {
            "info": "Sets affinity of the subprocesses / threads.  -1/1/2 determines stepping used in selecting cores. Alternatively specifies a list of length NCPU. Alternatively 'disable' to disable affinity settings Alternatively 'enable_ht' uses stepping of 1 (equivalent to Parallel.Affinity=1), will use all vthreads - the obvious exception is if HT is disabled at BIOS level. Alternatively 'disable_ht' autodetects the NUMA layout of the chip for Debian-based systems and don't use both vthreads per core. Use 1 if unsure.",
            "name": "Parallel-Affinity",
            "default": "1",
            "dtype": "str",
            "required": false
        },
        {
            "info": "Pins parent process to specified core. This should be set to a vcore that is not used by forked processes, this option is ignored when using option 'disable' or 'disable_ht' for Parallel-Affinity.",
            "name": "Parallel-Affinity",
            "default": "0",
            "dtype": "str",
            "required": false
        },
        {
            "info": "Reset all caches (including PSF and dirty image)",
            "name": "Cache-Reset",
            "default": true,
            "dtype": "bool",
            "required": false
        },
        {
            "info": "Reset cached smooth beam",
            "name": "Cache-SmoothBeam",
            "default": "reset",
            "dtype": "str",
            "required": false
        },
        {
            "info": "Cache PSF data",
            "name": "Cache-PSF",
            "default": "auto",
            "dtype": "str",
            "required": false,
            "choices": ["off", "reset", "auto", "force"]
        },
        {
            "info": "Cache dirty image data",
            "name": "Cache-Dirty",
            "default": "auto",
            "dtype": "str",
            "required": false,
            "choices": ["off", "reset", "auto", "force", "forceresidual"]
        },
        {
            "info": "Cache visibility data and flags at runtime",
            "name": "Cache-VisData",
            "default": "auto",
            "dtype": "str",
            "required": false,
            "choices": ["off", "auto", "force"]
        },
        {
            "info": "Cache visibility data and flags at runtime",
            "name": "Cache-VisData",
            "default": "auto",
            "dtype": "str",
            "required": false,
            "choices": ["off", "auto", "force"]
        },
        {
            "info": "Cache last residual data (at end of last minor cycle)",
            "name": "Cache-LastResidual",
            "default": true,
            "dtype": "bool",
            "required": false,
        },
        {
            "info": "Directory to store caches in. Default is to keep cache next to the MS, but this can cause performance issues with e.g. NFS volumes. If you have fast local storage, point to it.",
            "name": "Cache-Dir",
            "default": "''",
            "dtype": "str",
            "required": false,
        },
        {
            "info": "Directory in which to store the FFTW wisdom files",
            "name": "Cache-DirWisdomFFTW",
            "default": ".fftw_wisdom",
            "dtype": "file",
            "io": "output",
            "required": false,
        },
        {
            "info": "Reset wisdom file",
            "name": "Cache-ResetWisdom",
            "default": true,
            "dtype": "bool",
            "required": false,
        },
        {
            "info": "Beam model to use.",
            "name": "Beam-Model",
            "default": null,
            "dtype": "str",
            "choices": [null,"LOFAR","FITS"],
            "required": false
        },
        {
            "info": "LOFAR beam mode.",
            "name": "Beam-LOFARBeamMode",
            "default": "AE",
            "dtype": "str",
            "choices": ["A","AE"],
            "required": false
        },
        {
            "info": "N Number of channels over which same beam value is used. 0 means use every channel.",
            "name": "Beam-NBand",
            "default": 0,
            "dtype": "int",
            "required": false
        },
        {
            "info": "Normalize beam so that its amplitude at the centre is 1.",
            "name": "Beam-CenterNorm",
            "default": "False",
            "dtype": "str",
            "choices": [0,1],
            "required": false
        },
        {
            "info": "BEAM_SMOOTH Compute the interpolated smooth beam",
            "name": "Beam-Smooth",
            "default": false,
            "dtype": "bool",
            "required": false
        },
        {
            "info": "BEAM_SMOOTHNPIX Number of pixels the beam is evaluated and smoothed",
            "name": "Beam-SmoothNPix",
            "default": 11,
            "dtype": "int",
            "required": false
        },
        {
            "info": "PATTERN Beam FITS file pattern. A beam pattern consists of eight FITS files, i.e. a real and imaginary part for each of the four Jones terms. The following substitutions are performed to form up the eight filenames: $(corr) or $(xy) is replaced by the Jones element label (e.g. \"xx\" or \"rr\"), $(reim) is replaced by \"re\" or \"im\", $(realimag) is replaced by \"real\" or \"imag\". Uppercase variables are replaced by uppercase values, e.g. $(REIM) by \"RE\" or \"IM\". Correlation labels (XY or RL) are determined by reading the MS, but may be overridden by the FITSFeed option.",
            "name": "Beam-FITSFile",
            "default": "'beam_$(corr)_$(reim).fits'",
            "dtype": "file",
            "io": "input",
            "required": false,
            "check_io": false,
        },
        {
            "info": "If set, overrides correlation labels given by the MS.",
            "name": "Beam-FITSFeed",
            "default": null,
            "dtype": "str",
            "choices": [null ,"xy","XY","rl","RL"],
            "required": false
        },
        {
            "info": "If set, overrides correlation labels given by the MS.",
            "name": "Beam-FITSFeed",
            "default": null,
            "dtype": "str",
            "choices": [null,"xy","XY","rl","RL"],
            "required": false
        },
        {
            "info": "MIN change in minutes on which the beam is re-evaluated",
            "name": "Beam-DtBeamMin",
            "default": 5.0,
            "dtype": "float",
            "required": false
        },
        {
            "info": "DEG increment in PA in degrees at which the beam is to be re-evaluated (on top of DtBeamMin)",
            "name": "Beam-FITSParAngleIncDeg",
            "default": 5.0,
            "dtype": "float",
            "required": false
        },
        {
            "info": "AXIS L axis of FITS file. Minus sign indicates reverse coordinate convention.",
            "name": "Beam-FITSLAxis",
            "default": "-X",
            "dtype": "str",
            "required": false
        },
        {
            "info": "AXIS M axis of FITS file. Minus sign indicates reverse coordinate convention.",
            "name": "Beam-FITSMAxis",
            "default": "Y",
            "dtype": "str",
            "required": false
        },
        {
            "info": "LEVEL set to >0 to have verbose output from FITS interpolator classes.",
            "name": "Beam-FITSVerbosity",
            "default": 0,
            "dtype": "int",
            "required": false
        },
        {
            "info": "MHz Gridding cube frequency step. If 0, --Freq-NBand is used instead.",
            "name": "Freq-BandMHz",
            "default": 0.0,
            "dtype": "float",
            "required": false
        },
        {
            "info": "MHz Degridding cube frequency step. If 0, --Freq- NDegridBand is used instead.",
            "name": "Freq-DegridBandMHz",
            "default": 0.0,
            "dtype": "float",
            "required": false
        },
        {
            "info": "N Number of image bands for gridding.",
            "name": "Freq-NBand",
            "default": "1",
            "dtype": "int",
            "required": false
        },
        {
            "info": "N Number of image bands for degridding. 0 means degrid each channel.",
            "name": "Freq-NDegridBand",
            "default": 0,
            "dtype": "int",
            "required": false
        },
        {
            "info": "DDESOLUTIONS_DDSOLS (???)",
            "name": "DDESolutions-DDSols",
            "default": "''",
            "io": "input",
            "dtype": "file",
            "required": false
        },
        {
            "info": "DDESOLUTIONS_GLOBALNORM (???)",
            "name": "DDESolutions-GlobalNorm",
            "default": null,
            "dtype": "str",
            "required": false
        },
        {
            "info": "DDESOLUTIONS_JONESNORMLIST (???)",
            "name": "DDESolutions-JonesNormList",
            "default": "AP",
            "dtype": "str",
            "required": false
        },
        {
            "info": "(???)",
            "name": "DDESolutions-JonesMode",
            "default": "Full",
            "dtype": "str",
            "choices": ["Scalar","Diag","Full"],
            "required": false
        },
        {
            "info": "DDESOLUTIONS_DDMODEGRID (???)",
            "name": "DDESolutions-DDModeGrid",
            "default": "AP",
            "dtype": "str",
            "required": false
        },
        {
            "info": "DDESOLUTIONS_DDMODEDEGRID (???)",
            "name": "DDESolutions-DDModeDeGrid",
            "default": "AP",
            "dtype": "str",
            "required": false
        },
        {
            "info": "DDESOLUTIONS_SCALEAMPGRID (???)",
            "name": "DDESolutions-ScaleAmpGrid",
            "default": false,
            "dtype": "bool",
            "required": false
        },
        {
            "info": "DDESOLUTIONS_SCALEAMPDEGRID (???)",
            "name": "DDESolutions-ScaleAmpDeGrid",
            "default": false,
            "dtype": "bool",
            "required": false
        },
        {
            "info": "DDESOLUTIONS_CALIBERR (???)",
            "name": "DDESolutions-CalibErr",
            "default": "10.0",
            "dtype": "float",
            "required": false
        },
        {
            "info": "???",
            "name": "DDESolutions-Type",
            "default": "Nearest",
            "dtype": "str",
            "choices": ["Krigging","Nearest"],
            "required": false
        },
        {
            "info": "DEG (???)",
            "name": "DDESolutions-Scale",
            "default": 1.0,
            "dtype": "float",
            "required": false
        },
        {
            "info": "DDESOLUTIONS_GAMMA (???)",
            "name": "DDESolutions-gamma",
            "default": 4.0,
            "dtype": "float",
            "required": false
        },
        {
            "info": "DDESOLUTIONS_RESTORESUB (???)",
            "name": "DDESolutions-RestoreSub",
            "default": "False",
            "dtype": "str",
            "required": false
        },
        {
            "info": "DDESOLUTIONS_REWEIGHTSNR (???)",
            "name": "DDESolutions-ReWeightSNR",
            "default": 0.0,
            "dtype": "str",
            "required": false
        },
        {
            "info": "Deconvolution algorithm.",
            "name": "Deconv-Mode",
            "default": "HMP",
            "dtype": "str",
            "choices": ["HMP","Hogbom","SSD","GAClean"],
            "required": false
        },
        {
            "info": "N Max number of major cycles.",
            "name": "Deconv-MaxMajorIter",
            "default": 20,
            "dtype": "int",
            "required": false
        },
        {
            "info": "N Max number of (overall) minor cycle iterations (HMP, Hogbom).",
            "name": "Deconv-MaxMinorIter",
            "default": 20000,
            "dtype": "int",
            "required": false
        },
        {
            "info": "Allow negative components (HMP, Hogbom).",
            "name": "Deconv-AllowNegative",
            "default": true,
            "dtype": "bool",
            "required": false
        },
        {
            "info": "GAIN Loop gain (HMP, Hogbom).",
            "name": "Deconv-Gain",
            "default": 0.1,
            "dtype": "float",
            "required": false
        },
        {
            "info": "Jy Absolute flux threshold at which deconvolution is stopped (HMP, Hogbom).",
            "name": "Deconv-FluxThreshold",
            "default": 0.0,
            "dtype": "float",
            "required": false
        },
        {
            "info": "X Cycle factor: used to set a minor cycle stopping threshold based on PSF sidelobe level (HMP, Hogbom). Use 0 to disable, otherwise 2.5 is a reasonable value, but may lead to very shallow minor cycle.",
            "name": "Deconv-CycleFactor",
            "default": 0.0,
            "dtype": "float",
            "required": false
        },
        {
            "info": "X Set minor cycle stopping threshold to X*{residual RMS} (HMP, Hogbom).",
            "name": "Deconv-RMSFactor",
            "default": 0.0,
            "dtype": "float",
            "required": false
        },
        {
            "info": "X Set minor cycle stopping threshold to X*{peak residual} (HMP, Hogbom).",
            "name": "Deconv-PeakFactor",
            "default": 0.15,
            "dtype": "float",
            "required": false
        },
        {
            "info": "N How many samples to draw for RMS computation. Use 0 to use all pixels (most precise).",
            "name": "Deconv-NumRMSSamples",
            "default": 10000,
            "dtype": "float",
            "required": false
        },
        {
            "info": "SF when --Comp-Sparsification is on, use approximate (i.e. central facet) PSF for cleaning while operating above the given sparsification factor (SF). This speeds up HMP reinitialization in major cycles. A value of 1-10 is sensible. Set to 0 to always use precise per-facet PSF.",
            "name": "Deconv-ApproximatePSF",
            "default": 0,
            "dtype": "str",
            "required": false
        },
        {
            "info": "BOX determines the size of the PSF subtraction box used in CLEAN-style deconvolution (if appropriate). Use \"auto\" (or \"sidelobe\") for a Clark-CLEAN-style box taken out to a certain sidelobe (faster). Use \"full\" to subtract the full PSF, Hogbom-style (more accurate, can also combine with --Image-PSFOversize for maximum accuracy). Use an integer number to set an explicit box radius, in pixels. (HMP)",
            "name": "Deconv-PSFBox",
            "default": "auto",
            "dtype": "str",
            "required": false
        },
        {
            "info": "FILENAME External clean mask image (FITS format)",
            "name": "Mask-External",
            "default": null,
            "io": "input",
            "dtype": "file",
            "required": false
        },
        {
            "info": "MASK_AUTO Use automatic masking",
            "name": "Mask-Auto",
            "default": false,
            "dtype": "bool",
            "required": false
        },
        {
            "info": "set Threshold (in sigma) for automatic masking",
            "name": "Mask-SigTh",
            "default": 10,
            "dtype": "float",
            "required": false
        },
        {
            "info": "If Auto enabled, does the cut of SigTh either on the ModelConv or the Restored",
            "name": "Mask-FluxImageType",
            "default": "ModelConv",
            "dtype": "str",
            "required": false,
            "choices": ["ModelConv", "Restored"]
        },
        {
            "info": "MIN,MAX,N String list of alphas to fit. e.g [-1.0, 1.0, 11]",
            "name": "HMP-Alpha",
            "default": "'[-1.0, 1.0, 11]'",
            "dtype": "str",
            "required": false
        },
        {
            "info": "LIST String list of scales to use e.g [0]",
            "name": "HMP-Scales",
            "default": "'[0]'",
            "dtype": "str",
            "required": false
        },
        {
            "info": "HMP_RATIOS (???)",
            "name": "HMP-Ratios",
            "default": "\"['']\"",
            "dtype": "str",
            "required": false
        },
        {
            "info": "N Number of PA steps to use.",
            "name": "HMP-NTheta",
            "default": 6,
            "dtype": "int",
            "required": false
        },
        {
            "info": "Solver mode: pseudoinverse, or non-negative least squares.",
            "name": "HMP-SolverMode",
            "default": "PI",
            "dtype": "str",
            "choices": ["PI","NNLS"],
            "required": false
        },
        {
            "info": "Allow the maximum residual to increase within the minor cycle",
            "name": "HMP-AllowResidIncrease",
            "default": true,
            "dtype": "bool",
            "required": false
        },
        {
            "info": "Weighting taper size for HMP fit. If 0, determined automatically.",
            "name": "HMP-Taper",
            "default": 0,
            "dtype": "float",
            "required": false
        },
        {
            "info": "Basis function support size. If 0, determined automatically.",
            "name": "HMP-Support",
            "default": 0,
            "dtype": "int",
            "required": false
        },
        {
            "info": "HMP_KAPPA Regularization parameter. If stddev of per-alpha solutions exceeds the maximum solution amplitude divided by Kappa, forces a fully-regularized solution. Use 0 for no such regularization.",
            "name": "HMP-Kappa",
            "default": 1.0,
            "dtype": "float",
            "required": false
        },
        {
            "info": "HOGBOM_POLYFITORDER polynomial order for frequency fitting",
            "name": "Hogbom-PolyFitOrder",
            "default": 3,
            "dtype": "int",
            "required": false
        },
        {
            "info": "HOGBOM_MAXLENGTHSCALE the value of L at which we specify bounary data (eg. phi(L) = 0)",
            "name": "Hogbom-MaxLengthScale",
            "default": 5,
            "dtype": "float",
            "required": false
        },
        {
            "info": "HOGBOM_FREQMODE Poly or GPR",
            "name": "Hogbom-FreqMode",
            "default": "Poly",
            "dtype": "str",
            "choices": ["Poly","GPR"],
            "required": false
        },
        {
            "info": "HOGBOM_NUMBASISFUNCS The number of basis functions to use for the RR GPR",
            "name": "Hogbom-NumBasisFuncs",
            "default": 12,
            "dtype": "int",
            "required": false
        },
        {
             "info": "URL for the TensorflowServer, e.g. grpc://tensorflow.server.com:8888/",
             "name": "Montblanc-TensorflowServerTarget",
             "default": "''",
             "dtype": "str",
             "required": false
        },
        {
             "info": "Enable parallel mode in SSD clean",
             "name": "SSDClean-Parallel",
             "default": true,
             "dtype": "bool",
             "required": false
        },
        {
            "info": "SSDCLEAN_ISLANDDECONVMODE (???)",
            "name": "SSDClean-IslandDeconvMode",
            "default": "GA",
            "dtype": "str",
            "required": false,
            "choices": ["GA"]
        },
        {
            "info": "SSDCLEAN_SSDSOLVEPARS (???)",
            "name": "SSDClean-SSDSolvePars",
            "default": "\"['S', 'Alpha']\"",
            "dtype": "str",
            "required": false
        },
        {
            "info": "SSDCLEAN_SSDCOSTFUNC (???)",
            "name": "SSDClean-SSDCostFunc",
            "default": "\"['Chi2', 'MinFlux']\"",
            "dtype": "str",
            "required": false
        },
        {
            "info": "SSDCLEAN_BICFACTOR (???)",
            "name": "SSDClean-BICFactor",
            "default": 0.0,
            "dtype": "float",
            "required": false
        },
        {
            "info": "SSDCLEAN_ARTIFACTROBUST (???)",
            "name": "SSDClean-ArtifactRobust",
            "default": false,
            "dtype": "bool",
            "required": false
        },
        {
            "info": "SSDCLEAN_CONVFFTSWITCH (???)",
            "name": "SSDClean-ConvFFTSwitch",
            "default": 1000,
            "dtype": "int",
            "required": false
        },
        {
            "info": "SSDCLEAN_NENLARGEPARS (???)",
            "name": "SSDClean-NEnlargePars",
            "default": 0,
            "dtype": "int",
            "required": false
        },
        {
            "info": "SSDCLEAN_NENLARGEDATA (???)",
            "name": "SSDClean-NEnlargeData",
            "default": 2,
            "dtype": "int",
            "required": false
        },
        {
            "info": "SSDCLEAN_RESTOREMETROSWITCH (???)",
            "name": "SSDClean-RestoreMetroSwitch",
            "default": 0,
            "dtype": "int",
            "required": false
        },
        {
            "info": "SSDCLEAN_MINSIZEINITHMP (???)",
            "name": "SSDClean-MinSizeInitHMP",
            "default": -1,
            "dtype": "int",
            "required": false
        },
        {
            "info": "SSDCLEAN_MINMAXGROUPDISTANCE (???)",
            "name": "SSDClean-MinMaxGroupDistance",
            "default": "\"[5, 50]\"",
            "dtype": "str",
            "required": false
        },
        {
            "info": "GACLEAN_NSOURCEKIN (???)",
            "name": "GAClean-NSourceKin",
            "default": "100",
            "dtype": "str",
            "required": false
        },
        {
            "info": "GACLEAN_NMAXGEN (???)",
            "name": "GAClean-NMaxGen",
            "default": "100",
            "dtype": "str",
            "required": false
        },
        {
            "info": "MORESANE_MOSOLVEPARS (default=[S]): Solving parameters for MORESANE (only Flux & monochannel for the moment)",
            "name": "MORESANE-MOSolvePars",
            "default": "\"['S']\"",
            "dtype": "str",
            "required": false
        },
        {
            "info": "MORESANE_ACCURACY (default=1e-6): Threshold on the standard deviation of the residual noise. Exit main loop when this threshold is reached.",
            "name": "MORESANE-Accuracy",
            "default": 1e-06,
            "dtype": "float",
            "required": false
        },
        {
            "info": "MORESANE_CONVMODE (default='linear'): Specifier for convolution mode - linear or circular.",
            "name": "MORESANE-ConvMode",
            "default": "linear",
            "dtype": "str",
            "required": false,
            "choices": ["linear","circular"]
        },
        {
            "info": "MORESANE_CORECOUNT (default=1): For multiprocessing, specifies the number of cores.",
            "name": "MORESANE-CoreCount",
            "default": 1,
            "dtype": "int",
            "required": false
        },
        {
            "info": "MORESANE_DECOMMODE (default='ser'): (ser) = serial, (mp) = multiprocessing of the IUWT decomposition",
            "name": "MORESANE-DecomMode",
            "default": "ser",
            "dtype": "str",
            "required": false,
            "choices": ["ser","mp"]
        },
        {
            "info": "MORESANE_EDGEEXCL (default=0) : Width (in pixel) of the area to discard from border",
            "name": "MORESANE-EdgeExcl",
            "default": 0,
            "dtype": "int",
            "required": false
        },
        {
            "info": "MORESANE_EDGEOFFSET (default=0): Numeric value for an additional user- specified number of edge pixels to be ignored. This is added to the minimum suppression.",
            "name": "MORESANE-EdgeOffset",
            "default": 0,
            "dtype": "int",
            "required": false
        },
        {
            "info": "MORESANE_EDGESUPPRESSION (default=False): Boolean specifier for whether or not the edges are to be suppressed.",
            "name": "MORESANE-EdgeSuppression",
            "default": false,
            "dtype": "bool",
            "required": false
        },
        {
            "info": "MORESANE_ENFORCEPOSITIVITY (default=False): Boolean specifier for whether or not a model must be strictly positive.",
            "name": "MORESANE-EnforcePositivity",
            "default": false,
            "dtype": "bool",
            "required": false
        },
        {
            "info": "MORESANE_EXTRACTIONMODE (default='cpu'): Specifier for mode to be used - cpu.",
            "name": "MORESANE-ExtractionMode",
            "default": "cpu",
            "dtype": "str",
            "required": false,
            "choices": ["cpu"]
        },
        {
            "info": "MORESANE_FLUXTHRESHOLD (default=0): Float value, assumed to be in Jy, which specifies an approximate convolution depth.",
            "name": "MORESANE-FluxThreshold",
            "default": 0,
            "dtype": "float",
            "required": false
        },
        {
            "info": "MORESANE_INTEXCL (default=0) : Width of the box (in pixel) to discard from the center.",
            "name": "MORESANE-IntExcl",
            "default": 0,
            "dtype": "int",
            "required": false
        },
        {
            "info": "MORESANE_LOGLEVEL (default=INFO) : Logging level in the python logger.",
            "name": "MORESANE-LogLevel",
            "default": "INFO",
            "dtype": "str",
            "required": false
        },
        {
            "info": "MORESANE_LOOPGAIN (default=0.1): Loop gain for MORESANE deconvolution.",
            "name": "MORESANE-LoopGain",
            "default": 0.5,
            "dtype": "float",
            "required": false
        },
        {
            "info": "MORESANE_MAJORLOOPMITER (default=100): Maximum number of iterations allowed in the major loop. Exit condition.",
            "name": "MORESANE-MajorLoopMiter",
            "default": 100,
            "dtype": "int",
            "required": false
        },
        {
            "info": "MORESANE_MINORLOOPMITER (default=30): Maximum number of iterations allowed in the minor loop. Serves as an exit condition when the SNR is does not reach a maximum.",
            "name": "MORESANE-MinorLoopMiter",
            "default": 30,
            "dtype": "int",
            "required": false
        },
        {
            "info": "MORESANE_NEGCOMP Enable negative components in model",
            "name": "MORESANE-NegComp",
            "default": false,
            "dtype": "bool",
            "required": false
        },
        {
            "info": "MORESANE_SCALECOUNT (default=None): Maximum scale to be considered - maximum scale considered during initialisation.",
            "name": "MORESANE-ScaleCount",
            "default": null,
            "dtype": "str",
            "required": false
        },
        {
            "info": "MORESANE_SIGMALEVEL (default=4): Number of sigma at which thresholding is to be performed.",
            "name": "MORESANE-SigmaLevel",
            "default": 4,
            "dtype": "int",
            "required": false
        },
        {
            "info": "MORESANE_SINGLERUN (default=False). If false, will run moresane sequentially scale by scale from startscale to stopscale, else, will use scalecount as a maximum scale.",
            "name": "MORESANE-SingleRun",
            "default": false,
            "dtype": "bool",
            "required": false
        },
        {
            "info": "MORESANE_STARTSCALE Starting wavelet scale in IUWT",
            "name": "MORESANE-StartScale",
            "default": 1,
            "dtype": "int",
            "required": false
        },
        {
            "info": "MORESANE_STOPSCALE Stopping wavelet scale in IUWT",
            "name": "MORESANE-StopScale",
            "default": 20,
            "dtype": "int",
            "required": false
        },
        {
            "info": "MORESANE_SUBREGION (default=None): Size, in pixels, of the central region to be analyzed and deconvolved.",
            "name": "MORESANE-SubRegion",
            "default": null,
            "dtype": "int",
            "required": false
        },
        {
            "info": "MORESANE_TOLERANCE (default=0.75): Tolerance level for object extraction. Significant objects contain wavelet coefficients greater than the tolerance multiplied by the maximum wavelet coefficient in the scale under consideration.",
            "name": "MORESANE-Tolerance",
            "default": 0.75,
            "dtype": "float",
            "required": false
        },
        {
            "info": "log memory use",
            "name": "Log-Memory",
            "default": false,
            "dtype": "bool",
            "required": false
        },
        {
            "info": "able progress bars and other pretty console output",
            "name": "Log-Boring",
            "default": false,
            "dtype": "bool",
            "required": false
        },
        {
            "info": "append to log file if it exists (default truncates)",
            "name": "Log-Append",
            "default": false,
            "dtype": "bool",
            "required": false
        },
        {
            "info": "grid worker processes upon launch (with SIGSTOP). Useful to attach gdb to workers.",
            "name": "Debug-PauseWorkers",
            "default": false,
            "dtype": "bool",
            "required": false
        },
        {
            "info": "L,M Shift in facet coordinates in arcseconds for l and m (this phase steers the sky over the image plane).",
            "name": "Debug-FacetPhaseShift",
            "default": "\"[0.0, 0.0]\"",
            "dtype": "str",
            "required": false
        },
        {
            "info": "Compute and print RMS in minor cycle iterations.",
            "name": "Debug-PrintMinorCycleRMS",
            "default": false,
            "dtype": "bool",
            "required": false
        },
        {
            "info": "Dump intermediate minor cycle solutions to a file. Use 0 or 1, or give an explicit list of things to dump",
            "name": "Debug-DumpCleanSolutions",
            "default": "0",
            "dtype": "str",
            "required": false
        },
        {
            "info": "X,Y,R Also dump postage stamps when cleaning within a radius R of X,Y. Implies --Debug-DumpCleanSolutions.",
            "name": "Debug-DumpCleanPostageStamps",
            "default": null,
            "dtype": "str",
            "required": false
        },
        {
            "info": "Throw an exception when a fitted CLEAN component is below this threshold in flux. Useful for debugging.",
            "name": "Debug-CleanStallThreshold",
            "default": 0.0,
            "dtype": "float",
            "required": false
        },
        {
            "info": "Enable memory-greedy mode. Retain certain shared arrays in RAM as long as possible.",
            "name": "Debug-MemoryGreedy",
            "default": false,
            "dtype": "bool",
            "required": false
        },
        {
            "info": "Verbosity level for multiprocessing.",
            "name": "Debug-APPVerbose",
            "default": "0",
            "dtype": "int",
            "required": false
        },
        {
            "info": "N seed random number generator with explicit seed, if given. Useful for reproducibility of the random-based optimizations (sparsification, etc.).",
            "name": "Misc-RandomSeed",
            "default": null,
            "dtype": "int",
            "required": false
        }
    ]
}
