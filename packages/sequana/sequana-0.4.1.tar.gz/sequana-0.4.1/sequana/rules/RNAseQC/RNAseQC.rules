rule RNAseQC:
    input :
        __RNAseQC__input_bam
    log :
        __RNAseQC__logs
    output:
        dir = __RNAseQC__output,
        sample_index = __RNAseQC__conf,
        png = __RNAseQC__figure
    params:
        genome = config['genome']['fasta_file'],
        gtf = config['RNAseQC']['gtf_file'],
        rRNA = config['RNAseQC']['BWArRNA_file'],
        kwargs = config['RNAseQC']['options']

    run:
        import pandas as pd
        import matplotlib.pyplot as pl
        pl.style.use('ggplot')
        from re import split

        #create the sample index
        data = [(split(r'.[ATCG]{6,7,8}\_.*',file)[0], file, 'NA') for file in input]
        df = pd.DataFrame(data, columns=['Sample ID','Bam File','Notes'])
        df.to_csv(output.sample_index, sep="\t",index=False)

        #run RNAseQC
        shell("rna-seqc -o {output.dir}  -r {params.genome}  -s {output.sample_index} -t {params.gtf}  -BWArRNA {params.rRNA} {params.kwargs} 2> {log}")

        if os.path.isfile(os.path.join(output.dir,'metrics.tsv')):
            df = pd.DataFrame.from_csv(os.path.join(output.dir,'metrics.tsv'), header = 0, sep="\t")
            #plot results
            if sum(df['rRNA rate']) == 0 :
                frames = [df['rRNA rate'] ,df['Exonic Rate'], df['Intronic Rate'], df['Intergenic Rate']]
            else :
                frames = [df['rRNA rate'], df['Exonic Rate'] - df['rRNA rate'], df['Intronic Rate'],
                     df['Intergenic Rate']]
        res = pd.concat(frames, axis=1)
        ##l√©gender correctement
        res.plot(kind='bar', stacked=True)
        pl.ylim([0,1])
        #pl.legend(('rRNA rate', 'Exonic Rate', 'Intronic Rate', 'Intergenic Rate'), loc='lower center',
        #           bbox_to_anchor=(0.5, +1.00), fancybox=True, shadow=True, ncol=4)
        pl.legend(('rRNA rate', 'Exonic Rate', 'Intronic Rate', 'Intergenic Rate'), loc='best')
        pl.tight_layout()
        pl.savefig(output.png)





