language: python
python:
- 2.7
- 3.3
- 3.4
- 3.5
- 3.6
- 3.7-dev
- nightly

_base_envs:
- &pypy_base
  language: generic
  python: pypy
  env:
  - PYPY_VERSION=pypy2-5.7.1
  - PYENV_ROOT="$HOME/.pyenv"
  - PATH="$PYENV_ROOT/bin:$PATH"
  dist: trusty
  sudo: required
  addons:
    apt:
      packages:
      - make
      - build-essential
      - libssl-dev
      - zlib1g-dev
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - wget
      - curl
      - llvm
      - libncurses5-dev
      - libncursesw5-dev
      - xz-utils
      - tk-dev
  before_install:
  - |
    if [ -f "$PYENV_ROOT/bin/pyenv" ]
    then
      eval "$(pyenv init -)"
      eval "$(pyenv virtualenv-init -)"
      pyenv update
    else
      rm -rf "$PYENV_ROOT"
      curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash
      eval "$(pyenv init -)"
      eval "$(pyenv virtualenv-init -)"
    fi
  - pyenv install --skip-existing --keep --verbose "$PYPY_VERSION"
  - pyenv shell "$PYPY_VERSION"
  - python --version


matrix:
  fast_finish: true
  allow_failures:
    # TODO: check what causes testing stuck
    - python: pypy
    # TODO: fix tests
    - python: pypy3
    - env: TOXENV=pre-commit-pep257
  include:
    - <<: *pypy_base
      python: pypy
      env:
      - PYPY_VERSION=pypy2-5.7.1
      - PYENV_ROOT="$HOME/.pyenv"
      - PATH="$PYENV_ROOT/bin:$PATH"
    - <<: *pypy_base
      python: pypy3
      env:
      - PYPY_VERSION=pypy3.5-5.7.1-beta
      - PYENV_ROOT="$HOME/.pyenv"
      - PATH="$PYENV_ROOT/bin:$PATH"
    - python: 3.6
      env: TOXENV=cheroot-master
    - python: 3.6
      env: TOXENV=pre-commit
      after_failure: skip
    - python: 3.6
      env: TOXENV=pre-commit-pep257
      after_failure: skip
    - python: 3.6
      env: TOXENV=dist-check
      after_failure: skip

cache:
  pip: true
  directories:
    - $HOME/.pre-commit

before_install: |
  if ! [ -z "$PYPY_VERSION" ]
  then
    export PYENV_ROOT="$HOME/.pyenv"
    if [ -f "$PYENV_ROOT/bin/pyenv" ]
    then
      pushd "$PYENV_ROOT" && git pull && popd
    else
      rm -rf "$PYENV_ROOT" \
      && git clone --depth 1 https://github.com/yyuu/pyenv.git "$PYENV_ROOT"
    fi
    "$PYENV_ROOT/bin/pyenv" install "$PYPY_VERSION"
    virtualenv --python="$PYENV_ROOT/versions/$PYPY_VERSION/bin/python" \
               "$HOME/virtualenvs/$PYPY_VERSION"
    source "$HOME/virtualenvs/$PYPY_VERSION/bin/activate"
  fi
install: pip install tox

script: tox

after_failure:
- echo "Here's a list of installed Python packages:"
- pip list --format=columns
- echo Dumping logs, because tests failed to succeed
- |
    for log in `ls cherrypy/test/*.log`
    do
      echo Outputting $log
      cat $log
    done
- py_log=/home/travis/build/cherrypy/cherrypy/.tox/python/log/python-0.log
- echo Outputting python invokation log from $py_log
- cat $py_log

deploy:
  provider: pypi
  on:
    tags: true
    python: 3.6
  user: jaraco
  password:
    secure: CQqUvtssQ4wmRluPcxh6m5lIXi83Qu9dAFAvZLS/+AQNIG78XECXv5xFTEdGSLX9yncKDpDKI3xRJeCKyO4OJUN0t6W1MRycY72+R63i9e9wPjfvtRqYH1TBT+no7jj/DHqXIrWSlpjRNAt4XXeSv7OzKWT4PmTNkNQSKyS1DWCmZGlbCKlV774Z9PbrfltflxL0V6DiX6ZfoY1THBO4rIopjMk/MPLgS5zvwLgXVbT9sK/DcPOgOq47iSLCs0oScbwiFzYW4DbcVZrBMv4ALtQTjk6ZEaBQ7KtKgsyxgi/ToVhjRxYg4rwvhjsyjixUdECLUqL3WgWfzW/lo82lhb79ERwhnjf1DvPNexlXhv9hHwHsFROpaOmM0nyDJsJg0rCNPVfO4SpBHEnd/ujlHO6yorHj0S54jZWqqDwD5gN19v3hEMT48Pc8uvazE9K1kMQbNXEzqn+SJjVB+DG7qK5Jm9Kk7ZC4R88hJAJNsR+SlFCXMGzkS9WUefUGLHQFfezZk43sMPIXMnh9d2XqCQo4QpUawdg3pwaTukFfyaHlK39CIHhZNas5D/UFL5spQPAAkH1IMcPILiSUwYYnXIJFWJIiulfEQalJroAQjrzvst/NVB8BbeYuCfmVLVOZw8Y6GOYONGgiXjT3nfmw/dN+uw+GY3EgAV5jl+fa434=
  distributions: release
  skip_upload_docs: true
