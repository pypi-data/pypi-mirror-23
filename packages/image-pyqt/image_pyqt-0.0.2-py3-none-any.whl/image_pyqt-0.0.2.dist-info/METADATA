Metadata-Version: 2.0
Name: image-pyqt
Version: 0.0.2
Summary: An Image Widget for display OpenCV Mat image
Home-page: http://www.github.com/ausk/imagepyqt
Author: ausk@github.com
Author-email: jincsu@126.com
License: MIT
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Development Status :: 4 - Beta
Classifier: Topic :: Utilities
Classifier: License :: OSI Approved :: MIT License
Requires-Dist: numpy


==========
imagepyqt
==========

A PyQt5/PySide2 Image Widget for quickly displaying OpenCV Mat Image!


Modified @ 2017.07.26 16:47:36 CST

1. Dependency, Install and Uninstall
=====================================

1.1 Dependency
--------------------------

.. code-block:: bash

    numpy
    opencv-python (or you can compile cv2 from the OpenCV Source!)
    PyQt5/PySide2

1.2 Install
--------------------------

.. code-block:: bash

    $ git clone https://github.com/Image-Py/imagepyqt
    $ cd imagepyqt
    $ ls
    ...
    imagepyqt/
    setup.py

    $ python3 setup.py install
    ...


1.3 Uninstall
--------------------------

.. code-block:: bash

    pip3 uninstall imagepyqt



2. Usage
=========

2.1 Test the demo
--------------------------

.. code-block:: bash

    $ python3 -m "imagepyqt.demos"


2.2 A simple demo
--------------------------

.. code-block:: python

    """ [1] Read Image in cv2 """
    import cv2
    imagename = "/home/auss/Pictures/test.png" ## TODO: change to your image path!
    img = cv2.imread(imagename)

    """ [2] Display the OpenCV Mat in imagepyqt """
    import imagepyqt as ipq
    ipq.imshow(img,"Test ImagePyQt")
    ipq.runQApp()


2.3  Other demos
--------------------------

.. code-block:: python

    import os, sys
    from imagepyqt.widgets import imwidget
    from imagepyqt.myQt import mkQApp, runQApp, QtWidgets
    from imagepyqt import qimshow

    ## TODO: change to your own imagepath!
    imagename = "/home/auss/Pictures/test.png"

    def test1():
        """A Simple demo"""
        import cv2
        img = cv2.imread(imagename)
        qApp=mkQApp()
        qimshow(img,"Test MyImageWidget[2]")
        runQApp()

    def test2():
        """Another Simple demo"""
        import cv2
        img = cv2.imread(imagename)
        qApp = mkQApp()
        win = imwidget.MyImageWidget()
        win.setImage(img)
        win.setWindowTitle("Test MyImageWidget[1]")
        win.show()
        runQApp()

    def run():
        test1()
        test2()

    if __name__ == "__main__":
        run()



