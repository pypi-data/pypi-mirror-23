# ===
# PCA
# ===
---

- slug: pca
  name: PCA
  requirements:
    expression-engine: jinja
  data_name: 'PCA'
  version: 1.1.2
  type: data:pca
  category: analyses
  persistence: TEMP
  scheduling_class: interactive
  description: >
    Principal component analysis (PCA)
  input:
    - name: exps
      label: Expressions
      type: list:data:expression
    - name: genes
      label: Filter genes
      type: list:basic:string
      required: false
    - name: filter
      label: Exclude genes with low expression
      type: basic:boolean
      default: true
      description: >
        Exclude/filter unexpressed genes and genes with cumulative normalized expression lower than number of samples.
  output:
    - name: pca
      label: PCA
      type: basic:json
  run:
    runtime: polyglot
    language: bash
    program: |
      EXPSET_TYPE="{{exps.0.exp_type}}"

      {% for e in exps %}
        {% if exps.0.exp_type != e.exp_type %}
          re-save proc.error "Expressions must be of the same expression type"
        {% endif %}
      {% endfor %}

      {% for exp in exps %}
        exp_files=$exp_files"{{ exp.exp.file }},"
        sample_ids=$sample_ids"{{ exp|sample_id }},"
      {% endfor %}

      re-save proc.rc $?
      re-save proc.progress 0.1

      sample_ids=${sample_ids%?}
      exp_files=${exp_files%?}

      re-save proc.rc $?
      re-save proc.progress 0.2

      pca.py ${exp_files} ${sample_ids} {% if genes %}--genes {% for g in genes %}"{{g}}" {% endfor %}{% endif %} {% if filter %}--filter{% endif %}
      re-save proc.rc $?
