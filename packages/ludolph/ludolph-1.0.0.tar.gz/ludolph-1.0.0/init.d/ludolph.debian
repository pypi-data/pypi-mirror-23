#!/bin/sh
### BEGIN INIT INFO
# Provides:          ludolph
# Required-Start:    $all
# Required-Stop:    
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Ludolph
# Description:       Monitoring Jabber Bot
### END INIT INFO
 
NAME="ludolph"
USER="daemon"
PIDDIR="/var/run/${NAME}"
PIDFILE="${PIDDIR}/${NAME}.pid"
DAEMON="/usr/bin/$NAME"
DESC="Ludolph - Monitoring Jabber Bot"

. /lib/lsb/init-functions

test -x ${DAEMON} || exit 4

check_pid_dir() {
    if [ ! -d "${PIDDIR}" ]; then
        mkdir "${PIDDIR}" && chown ${USER} "${PIDDIR}" || return 5
    fi
    return 0
}

do_start() {
    if [ -e "${PIDFILE}" ]; then
        if pidofproc -p "${PIDFILE}" "${DAEMON}" > /dev/null; then
            log_warning_msg "${DESC} ${NAME} is already running"
            RETVAL=0
            return ${RETVAL}
        else
            log_success_msg "Removing stale PID file ${PIDFILE}"
            rm -f "${PIDFILE}"
        fi
    else
        if ! check_pid_dir; then
            log_failure_msg "Cannot create PID directory"
            RETVAL=1
            return ${RETVAL}
        fi
    fi

    log_daemon_msg "Starting ${DESC}" "${NAME}"
    # Use --background --make-pidfile when daemon = false
    start-stop-daemon --start --quiet --oknodo --chuid ${USER} --pidfile "${PIDFILE}" --exec "${DAEMON}"
    RETVAL=$?

    if [ ${RETVAL} -eq 0 ]; then
        sleep 1
        pidofproc -p "${PIDFILE}" "${DAEMON}" > /dev/null 2>&1
        RETVAL=$?
    fi

    log_end_msg ${RETVAL}

    return ${RETVAL}
}

do_stop() {
    if pidofproc -p "${PIDFILE}" "${DAEMON}" > /dev/null; then
        log_daemon_msg "Stopping ${DESC}" "${NAME}"
        start-stop-daemon --stop --quiet --oknodo --retry=TERM/30/KILL/5 --pidfile "${PIDFILE}"
        RETVAL=$?
        log_end_msg ${RETVAL}
        rm -f "${PIDFILE}"
    else
        log_warning_msg "${DESC} ${NAME} is not running"
        RETVAL=0
    fi

    return ${RETVAL}
}

do_reload() {
    if pidofproc -p "${PIDFILE}" "${DAEMON}" > /dev/null; then
        log_daemon_msg "Reloading ${DESC}" "${NAME}"
        start-stop-daemon --stop --signal 1 --quiet --oknodo --pidfile "${PIDFILE}"
        RETVAL=$?
        log_end_msg ${RETVAL}
    else
        log_failure_msg "${DESC} ${NAME} is not running"
        RETVAL=1
    fi

    return ${RETVAL}
}

do_status() {
    status_of_proc -p "${PIDFILE}" "${DAEMON}" "${NAME}"
    RETVAL=$?

    return ${RETVAL}
}

case "$1" in
    start)
        do_start
        ;;
    stop)
        do_stop
        ;;
    reload)
        do_reload
        ;;
    restart|force-reload)
        do_stop
        sleep 1
        do_start
        ;;
    status)
        do_status
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|reload|force-reload|status}" >&2
        RETVAL=64
        ;;
esac

exit ${RETVAL}
