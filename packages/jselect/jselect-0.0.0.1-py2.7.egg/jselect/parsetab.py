
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'queryWHITE WHERE INT FLOAT STR DOT COMMA LPAREN RPAREN LBRACKET RBRACKET SELECT AND OR NOT IN EQ NE GT LT GE LE KEYWORDfields       : expr\n                    | fields field_split exprfield_split  : COMMA\n                    | WHITE COMMA\n                    | COMMA WHITE\n                    | WHITE COMMA WHITEconst        : INT\n                    | FLOAT\n                    | STRfield_picker : DOT KEYWORD\n                    | LBRACKET INT RBRACKET\n                    | LBRACKET STR RBRACKETfield_getter : field_picker\n                    | field_getter field_pickercmp_op       : EQ\n                    | NE\n                    | LT\n                    | GT\n                    | LE\n                    | GE\n                    | INcmp_op       : NOT INexpr         : const\n                    | field_gettercmp          : expr cmp_op exprcmp          : LPAREN cond_expr RPARENcmp          : NOT cmpcond_term    : cmpcond_term    : cond_term AND cmpcond_expr    : cond_termcond_expr    : cond_expr OR cond_termquery        : SELECT fieldsquery        : SELECT fields WHERE cond_expr'
    
_lr_action_items = {'LPAREN':([15,24,27,33,35,],[24,24,24,24,24,]),'KEYWORD':([9,],[19,]),'LBRACKET':([2,10,12,13,15,16,19,20,21,22,24,27,30,31,32,33,35,36,37,38,39,40,41,42,44,49,],[8,8,-13,-3,8,8,-10,-14,-5,-4,8,8,-11,-12,-6,8,8,-18,-15,-16,-20,-17,-19,-21,8,-22,]),'SELECT':([0,],[2,]),'LE':([3,4,5,6,10,12,19,20,26,30,31,],[-8,-23,-9,-7,-24,-13,-10,-14,41,-11,-12,]),'RPAREN':([3,4,5,6,10,12,19,20,25,28,30,31,34,45,46,47,48,50,],[-8,-23,-9,-7,-24,-13,-10,-14,-30,-28,-11,-12,47,-27,-31,-26,-29,-25,]),'EQ':([3,4,5,6,10,12,19,20,26,30,31,],[-8,-23,-9,-7,-24,-13,-10,-14,37,-11,-12,]),'NE':([3,4,5,6,10,12,19,20,26,30,31,],[-8,-23,-9,-7,-24,-13,-10,-14,38,-11,-12,]),'LT':([3,4,5,6,10,12,19,20,26,30,31,],[-8,-23,-9,-7,-24,-13,-10,-14,40,-11,-12,]),'COMMA':([3,4,5,6,7,10,11,12,14,19,20,29,30,31,],[-8,-23,-9,-7,13,-24,-1,-13,22,-10,-14,-2,-11,-12,]),'DOT':([2,10,12,13,15,16,19,20,21,22,24,27,30,31,32,33,35,36,37,38,39,40,41,42,44,49,],[9,9,-13,-3,9,9,-10,-14,-5,-4,9,9,-11,-12,-6,9,9,-18,-15,-16,-20,-17,-19,-21,9,-22,]),'$end':([1,3,4,5,6,7,10,11,12,19,20,23,25,28,29,30,31,45,46,47,48,50,],[0,-8,-23,-9,-7,-32,-24,-1,-13,-10,-14,-33,-30,-28,-2,-11,-12,-27,-31,-26,-29,-25,]),'GT':([3,4,5,6,10,12,19,20,26,30,31,],[-8,-23,-9,-7,-24,-13,-10,-14,36,-11,-12,]),'GE':([3,4,5,6,10,12,19,20,26,30,31,],[-8,-23,-9,-7,-24,-13,-10,-14,39,-11,-12,]),'STR':([2,8,13,15,16,21,22,24,27,32,33,35,36,37,38,39,40,41,42,44,49,],[5,18,-3,5,5,-5,-4,5,5,-6,5,5,-18,-15,-16,-20,-17,-19,-21,5,-22,]),'IN':([3,4,5,6,10,12,19,20,26,30,31,43,],[-8,-23,-9,-7,-24,-13,-10,-14,42,-11,-12,49,]),'WHITE':([3,4,5,6,7,10,11,12,13,19,20,22,29,30,31,],[-8,-23,-9,-7,14,-24,-1,-13,21,-10,-14,32,-2,-11,-12,]),'WHERE':([3,4,5,6,7,10,11,12,19,20,29,30,31,],[-8,-23,-9,-7,15,-24,-1,-13,-10,-14,-2,-11,-12,]),'AND':([3,4,5,6,10,12,19,20,25,28,30,31,45,46,47,48,50,],[-8,-23,-9,-7,-24,-13,-10,-14,35,-28,-11,-12,-27,35,-26,-29,-25,]),'INT':([2,8,13,15,16,21,22,24,27,32,33,35,36,37,38,39,40,41,42,44,49,],[6,17,-3,6,6,-5,-4,6,6,-6,6,6,-18,-15,-16,-20,-17,-19,-21,6,-22,]),'FLOAT':([2,13,15,16,21,22,24,27,32,33,35,36,37,38,39,40,41,42,44,49,],[3,-3,3,3,-5,-4,3,3,-6,3,3,-18,-15,-16,-20,-17,-19,-21,3,-22,]),'NOT':([3,4,5,6,10,12,15,19,20,24,26,27,30,31,33,35,],[-8,-23,-9,-7,-24,-13,27,-10,-14,27,43,27,-11,-12,27,27,]),'RBRACKET':([17,18,],[30,31,]),'OR':([3,4,5,6,10,12,19,20,23,25,28,30,31,34,45,46,47,48,50,],[-8,-23,-9,-7,-24,-13,-10,-14,33,-30,-28,-11,-12,33,-27,-31,-26,-29,-25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'const':([2,15,16,24,27,33,35,44,],[4,4,4,4,4,4,4,4,]),'field_picker':([2,10,15,16,24,27,33,35,44,],[12,20,12,12,12,12,12,12,12,]),'expr':([2,15,16,24,27,33,35,44,],[11,26,29,26,26,26,26,50,]),'cond_expr':([15,24,],[23,34,]),'cond_term':([15,24,33,],[25,25,46,]),'field_getter':([2,15,16,24,27,33,35,44,],[10,10,10,10,10,10,10,10,]),'fields':([2,],[7,]),'query':([0,],[1,]),'cmp_op':([26,],[44,]),'field_split':([7,],[16,]),'cmp':([15,24,27,33,35,],[28,28,45,28,48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> query","S'",1,None,None,None),
  ('fields -> expr','fields',1,'p_fields','parser.py',6),
  ('fields -> fields field_split expr','fields',3,'p_fields','parser.py',7),
  ('field_split -> COMMA','field_split',1,'p_field_split','parser.py',15),
  ('field_split -> WHITE COMMA','field_split',2,'p_field_split','parser.py',16),
  ('field_split -> COMMA WHITE','field_split',2,'p_field_split','parser.py',17),
  ('field_split -> WHITE COMMA WHITE','field_split',3,'p_field_split','parser.py',18),
  ('const -> INT','const',1,'p_const','parser.py',21),
  ('const -> FLOAT','const',1,'p_const','parser.py',22),
  ('const -> STR','const',1,'p_const','parser.py',23),
  ('field_picker -> DOT KEYWORD','field_picker',2,'p_field_picker','parser.py',27),
  ('field_picker -> LBRACKET INT RBRACKET','field_picker',3,'p_field_picker','parser.py',28),
  ('field_picker -> LBRACKET STR RBRACKET','field_picker',3,'p_field_picker','parser.py',29),
  ('field_getter -> field_picker','field_getter',1,'p_field_getter','parser.py',33),
  ('field_getter -> field_getter field_picker','field_getter',2,'p_field_getter','parser.py',34),
  ('cmp_op -> EQ','cmp_op',1,'p_cmp_op','parser.py',42),
  ('cmp_op -> NE','cmp_op',1,'p_cmp_op','parser.py',43),
  ('cmp_op -> LT','cmp_op',1,'p_cmp_op','parser.py',44),
  ('cmp_op -> GT','cmp_op',1,'p_cmp_op','parser.py',45),
  ('cmp_op -> LE','cmp_op',1,'p_cmp_op','parser.py',46),
  ('cmp_op -> GE','cmp_op',1,'p_cmp_op','parser.py',47),
  ('cmp_op -> IN','cmp_op',1,'p_cmp_op','parser.py',48),
  ('cmp_op -> NOT IN','cmp_op',2,'p_cmp_op_not_in','parser.py',52),
  ('expr -> const','expr',1,'p_expr','parser.py',56),
  ('expr -> field_getter','expr',1,'p_expr','parser.py',57),
  ('cmp -> expr cmp_op expr','cmp',3,'p_cmp','parser.py',61),
  ('cmp -> LPAREN cond_expr RPAREN','cmp',3,'p_cmp_paren','parser.py',65),
  ('cmp -> NOT cmp','cmp',2,'p_cmp_not','parser.py',69),
  ('cond_term -> cmp','cond_term',1,'p_cond_term_single','parser.py',74),
  ('cond_term -> cond_term AND cmp','cond_term',3,'p_cond_term_and','parser.py',79),
  ('cond_expr -> cond_term','cond_expr',1,'p_cond_expr_single','parser.py',84),
  ('cond_expr -> cond_expr OR cond_term','cond_expr',3,'p_cond_expr_or','parser.py',89),
  ('query -> SELECT fields','query',2,'p_query_all','parser.py',94),
  ('query -> SELECT fields WHERE cond_expr','query',4,'p_query_where','parser.py',98),
]
