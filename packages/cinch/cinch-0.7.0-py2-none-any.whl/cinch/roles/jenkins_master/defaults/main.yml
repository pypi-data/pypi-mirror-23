# ############################################################################
# A list of variables which you can and probably should override with your own
# values in your group variables. These are the default values for these
# options and should work well enough for development or trial purposes, but
# some of them should be overridden for production purposes. See individual
# values for documentation on their function.
# ############################################################################

# A list of Jenkins update center URLs to configure. This is the default UC
# provided by the upstream, public infrastructure. If you maintain a local
# mirror for custom plugins or just for mirroring purposes, then override this
# variable with those values.
update_centers:
  - id: default
    url: "https://updates.jenkins-ci.org/{{ jenkins_version }}/update-center.json"
# If set to true, Jenkins will be run over HTTPS. If you set this value to true,
# you can override jenkins_ssl_cert and jenkins_ssl_key if you want to use custom
# SSL certificate, otherwise a self signed certificate will be used.
https_enabled: false
# The version of Jenkins to install from the repository. The only use for
# this value is constructing the name of the RPM below, so there is no need
# to override this just outside of changing RPM name
jenkins_version: "1.651.3"
# The list of Jenkins plugins that should be installed by default from the
# configured Update Centers.
jenkins_plugins: "{{ lookup('file', 'files/jenkins-plugin-lists/default.txt').split('\n') }}"
# Bundled plugins are ones that are included by default with Jenkins. The process
# of pinning a bundled plugin tells Jenkins to not overwrite the correct version
# of plugin with an included version during a Jenkins upgrade but rather use the
# one in JENKINS_HOME. Make this an array of the names of the plugins that
# should be pinned. NOTE: This only works for Jenkins 1.X
jenkins_pinned_plugins: []
# Java max heap size argument. Set this value based on the amount of RAM that
# your instance needs and your infrastructure is able to support
java_heap_size: 3g
# A default session timeout of 8hrs (480 mins) is needed to work
# comfortably without having to re-login.
session_timeout: 480
# Command line arguments for Jenkins
jenkins_args:
# A list of additional packages you wish to install using the default package
# manager.
additional_packages: []

# ############################################################################
# Security settings - users, passwords, etc.
# These values should REALLY be changed if you're going to use this in a
# production environment as otherwise you would be securing with passwords or
# SSH keys that the whole world can see freely in this repository.
# ############################################################################
# If this is set to true, then LDAP will be configured, along with the admin
# user, security roles, etc. Leaving this false will mean anyone will have the
# ability to control the Jenkins master instance without authentication
jenkins_security_enabled: false
# An admin user who is configured to permit automated connections to the system
# for things like running the Groovy scripts, connecting Swarm clients, etc.
# This user is automatically assigned to the security role "admin" that gets
# created
jenkins_admin:
  nickname: jenkins-admin
  email: root@localhost
  password: changeme
# An array of users to create in the local Jenkins database, regardless of the
# authentication methods actually in place. Elements in this array should match
# the form of the jenkins_admin variable immediately above this
jenkins_local_users: []
# An array of roles and their permissions to add to Jenkins. A role called
# "admin" will always be created that has access to every permission. You can
# override this by creating a role in this array named "admin" that has a
# different set of permisisons, if you would rather. The "sids" array is a list
# of the roles/users/groups that should be assigned to that role.
jenkins_security_roles:
  - name: anonymous
    permissions:
      - com.synopsys.arc.jenkins.plugins.ownership.OwnershipPlugin.Jobs
      - hudson.model.Hudson.Read
      - hudson.model.View.Read
    sids:
      - anonymous
jenkins_ldap:
  server: ldaps://ldap.example.com
  root_dn: dc=example,dc=com
  user_search_base: ''
  user_search: uid={0}
  group_search_base: ou=groups
  group_search_filter: "(& (cn={0}) (objectclass=posixGroup))"
  group_membership: memberUid={1}
  display_name_attr: displayname
  email_addr_attr: mail
  manager_dn: ''
  manager_password: ''

# ############################################################################
# A list of variables that don't really need to be overridden, but which can be
# parameterized if you need to tweak the Jenkins system. These represent mostly
# advanced values.
# ############################################################################

# A list of packages which should not be upgraded by yum. These packages will be added
# to a list in /etc/yum.conf on the target machine as packages whose versions need to
# be maintained at the currently installed versions in order to avoid updating
# them by means of a "yum update" run
upgrade_blacklist:
  - jenkins
# The name of the Jenkins package to install. This can be either an RPM name
# such as one would pass to yum or dnf or a full path to the RPM file
# (including a full URL). See note above on the variable "jenkins_version"
jenkins_rpm: jenkins-{{ jenkins_version }}-1.1
# A set of command-line Java options to be passed into Jenkins. These values
# can be anything accepted either by Jenkins or by the JVM
jenkins_java_options:
  # Tell Java it is running on a headless system
  - -Djava.awt.headless=true
  # disables SNI extension in case of Java 1.7, which causes problems with SSL
  - -Djsse.enableSNIExtension=false
  # Allows all parameters to be passed between jobs in trigger pipelines
  - -Dhudson.model.ParametersAction.keepUndefinedParameters=true
  # Alows creation of synthetic users that exist only in Jenkins and not external auth
  - -Dhudson.model.User.allowNonExistentUserToLogin=true
  # allows the creation of a synthetic/virtual user to be created via an Url.
  - -Dhudson.model.User.allowUserCreationViaUrl=true
  # Allows admin users to see the API tokens of all users
  - -Djenkins.security.ApiTokenProperty.showTokenToAdmins=true
  # adds performance log messages during Jenkins initialization.
  - -Djenkins.model.Jenkins.logStartupPerformance=true
  # helps in cases where SSH slave startup can block. See JENKINS-20108
  - -Djava.security.egd=file:/dev/./urandom
  # Needed for Jenkins 2.X to bypass SetupWizard.
  - -Djenkins.install.runSetupWizard=false
  # Needed to disable DNSMulticast
  - -Dhudson.DNSMultiCast.disabled=true
  # Set default session timeout.
  - -DsessionTimeout={{ session_timeout }}
  # Increase max Java heap size
  - -Xmx{{ java_heap_size }}
# the path to the Java executable
jenkins_java_cmd: /usr/bin/java
# These four values change the default ulimits for file and process counts in
# order to avoid failure of the system when these (typically very low) default
# values are hit
jenkins_soft_nofile_ulimit: 4096
jenkins_hard_nofile_ulimit: 4096
jenkins_soft_nproc_ulimit: 4096
jenkins_hard_nproc_ulimit: 30654
# This variable points to the file where the RPM version for specific packages
# (most importantly, the Jenkins RPM) can be pinned. For yum-based distros,
# like CentOS or RHEL <= 7, this is the yum conf file, but for Fedora and the
# like, this is the dnf conf file
version_pin_file: /etc/yum.conf
# This is the port Jenkins will listen on for slaves.
jenkins_slave_agent_port: 50000
# Address that Jenkins will listen on. For now, the default is promiscuous, but
# if Jenkins is being stood up behind an SSL terminator or reverse proxy, this
# should be switched to a loopback address. The same goes for the SSL listen
# address, except that allows limiting the address the service will listen on
# when it is serving SSL directly
jenkins_http_listen_address: ''
jenkins_https_listen_address: ''
# The port where Jenkins should listen for AJP connections
jenkins_ajp_port: 8009
jenkins_ajp_listen_address: ''
# The debug level for Jenkins
jenkins_debug_level: 5
# Enable or disable writing out an access log for Jenkins. This will cause the
# process to write out log entries for every HTTP access and is disabled by
# default
jenkins_enable_access_log: "no"
# The maximum number of worker threads to handle HTTP requests on the Jenkins
# process
jenkins_handler_max: 100
# The maximum number of idle HTTP worker threads
jenkins_handler_idle: 20
# The cannonical name to use as server_name in nginx configuration file.
service_name: "{{ hostvars[inventory_hostname]['ansible_host'] | default(inventory_hostname) }}"
# This is a list of ports with protocol to allow in firewalld.
firewall_tcp_ports:
  - "{{ jenkins_slave_agent_port }}/tcp"
  - "8888/tcp"
  - "22/tcp"
  - "80/tcp"
  - "{{ https_enabled | ternary('443/tcp', omit) }}"
# The number of build executors available on the Jenkins master
jenkins_executors: 10
# This setting affects how the update center downloads plugin metadata
# http://javadoc.jenkins-ci.org/jenkins/model/DownloadSettings.html
jenkins_usebrowser: false
