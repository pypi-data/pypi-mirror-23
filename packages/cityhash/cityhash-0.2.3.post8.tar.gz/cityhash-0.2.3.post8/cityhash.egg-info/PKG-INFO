Metadata-Version: 1.1
Name: cityhash
Version: 0.2.3.post8
Summary: Python-bindings for CityHash, a fast non-cryptographic hash algorithm
Home-page: https://github.com/escherba/python-cityhash
Author: Alexander [Amper] Marshalov
Author-email: alone.amper+cityhash@gmail.com
License: MIT
Download-URL: https://github.com/escherba/python-cityhash/tarball/master/0.2.3.post8
Description: CityHash
        ========
        
        A Python wrapper around `CityHash <https://github.com/google/cityhash>`__
        
        .. image:: https://img.shields.io/pypi/v/cityhash.svg
            :target: https://pypi.python.org/pypi/cityhash
            :alt: Latest Version
        
        .. image:: https://img.shields.io/pypi/dm/cityhash.svg
            :target: https://pypi.python.org/pypi/cityhash
            :alt: Downloads
        
        .. image:: https://circleci.com/gh/escherba/python-cityhash.svg?style=shield
            :target: https://circleci.com/gh/escherba/python-cityhash
            :alt: Tests Status
        
        .. image:: https://img.shields.io/pypi/pyversions/cityhash.svg
            :target: https://pypi.python.org/pypi/cityhash
            :alt: Supported Python versions
        
        .. image:: https://img.shields.io/pypi/l/cityhash.svg
            :target: https://pypi.python.org/pypi/cityhash
            :alt: License
        
        Getting Started
        ---------------
        
        To use this package in your program, simply type
        
        .. code-block:: bash
        
            pip install cityhash
        
        
        After that, you should be able to import the module and do things with it (see Example Usage below).
        
        Example Usage
        -------------
        
        The package contains 64- and 128-bit implementations of the CityHash algorithm,
        named as follows:
        
        .. code-block:: python
        
            >>> from cityhash import CityHash32, CityHash64, CityHash128
            >>> print(CityHash32("abc"))
            795041479
            >>> print(CityHash64("abc"))
            2640714258260161385
            >>> print(CityHash128("abc"))
            76434233956484675513733017140465933893
        
        Development
        -----------
        For those who want to contribute, here is a quick start using some makefile
        commands:
        
        .. code-block:: bash
        
            git clone https://github.com/escherba/python-cityhash.git
            cd python-cityhash
            make env           # creates a Python virtualenv
            make test          # runs both Python and C++ tests
        
        See Also
        --------
        For other fast non-cryptographic hashing implementations available as Python
        extensions, see `MetroHash <https://github.com/escherba/python-metrohash>`__
        and `xxHash <https://github.com/lebedov/xxh>`__.
        
        Authors
        -------
        The Python bindings were originally written by Alexander [Amper] Marshalov,
        then repackaged for PyPI (with minor improvements) by Eugene Scherba. The
        original CityHash algorithm is by Google.
        
        License
        -------
        This software is licensed under the `MIT License
        <http://www.opensource.org/licenses/mit-license>`_.  See the included LICENSE
        file for more information.
        
Keywords: hash,hashing,cityhash
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: C++
Classifier: Programming Language :: Cython
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Internet
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Utilities
